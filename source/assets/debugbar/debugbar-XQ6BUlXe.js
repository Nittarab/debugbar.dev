var aS=Object.defineProperty;var _S=(e,E,t)=>E in e?aS(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t;var RE=(e,E,t)=>(_S(e,typeof E!="symbol"?E+"":E,t),t);var XE=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Ss(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Pr(e){return e instanceof Map?e.clear=e.delete=e.set=function(){throw new Error("map is read-only")}:e instanceof Set&&(e.add=e.clear=e.delete=function(){throw new Error("set is read-only")}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach(E=>{const t=e[E],T=typeof t;(T==="object"||T==="function")&&!Object.isFrozen(t)&&Pr(t)}),e}class Vs{constructor(E){E.data===void 0&&(E.data={}),this.data=E.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function Dr(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function oE(e,...E){const t=Object.create(null);for(const T in e)t[T]=e[T];return E.forEach(function(T){for(const s in T)t[s]=T[s]}),t}const CS="</span>",Ws=e=>!!e.scope,lS=(e,{prefix:E})=>{if(e.startsWith("language:"))return e.replace("language:","language-");if(e.includes(".")){const t=e.split(".");return[`${E}${t.shift()}`,...t.map((T,s)=>`${T}${"_".repeat(s+1)}`)].join(" ")}return`${E}${e}`};class LS{constructor(E,t){this.buffer="",this.classPrefix=t.classPrefix,E.walk(this)}addText(E){this.buffer+=Dr(E)}openNode(E){if(!Ws(E))return;const t=lS(E.scope,{prefix:this.classPrefix});this.span(t)}closeNode(E){Ws(E)&&(this.buffer+=CS)}value(){return this.buffer}span(E){this.buffer+=`<span class="${E}">`}}const Xs=(e={})=>{const E={children:[]};return Object.assign(E,e),E};class Os{constructor(){this.rootNode=Xs(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(E){this.top.children.push(E)}openNode(E){const t=Xs({scope:E});this.add(t),this.stack.push(t)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(E){return this.constructor._walk(E,this.rootNode)}static _walk(E,t){return typeof t=="string"?E.addText(t):t.children&&(E.openNode(t),t.children.forEach(T=>this._walk(E,T)),E.closeNode(t)),E}static _collapse(E){typeof E!="string"&&E.children&&(E.children.every(t=>typeof t=="string")?E.children=[E.children.join("")]:E.children.forEach(t=>{Os._collapse(t)}))}}class cS extends Os{constructor(E){super(),this.options=E}addText(E){E!==""&&this.add(E)}startScope(E){this.openNode(E)}endScope(){this.closeNode()}__addSublanguage(E,t){const T=E.root;t&&(T.scope=`language:${t}`),this.add(T)}toHTML(){return new LS(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}function Mt(e){return e?typeof e=="string"?e:e.source:null}function Mr(e){return BE("(?=",e,")")}function uS(e){return BE("(?:",e,")*")}function PS(e){return BE("(?:",e,")?")}function BE(...e){return e.map(t=>Mt(t)).join("")}function DS(e){const E=e[e.length-1];return typeof E=="object"&&E.constructor===Object?(e.splice(e.length-1,1),E):{}}function Is(...e){return"("+(DS(e).capture?"":"?:")+e.map(T=>Mt(T)).join("|")+")"}function fr(e){return new RegExp(e.toString()+"|").exec("").length-1}function MS(e,E){const t=e&&e.exec(E);return t&&t.index===0}const fS=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function is(e,{joinWith:E}){let t=0;return e.map(T=>{t+=1;const s=t;let R=Mt(T),r="";for(;R.length>0;){const A=fS.exec(R);if(!A){r+=R;break}r+=R.substring(0,A.index),R=R.substring(A.index+A[0].length),A[0][0]==="\\"&&A[1]?r+="\\"+String(Number(A[1])+s):(r+=A[0],A[0]==="("&&t++)}return r}).map(T=>`(${T})`).join(E)}const US=/\b\B/,Ur="[a-zA-Z]\\w*",os="[a-zA-Z_]\\w*",pr="\\b\\d+(\\.\\d+)?",dr="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",hr="\\b(0b[01]+)",pS="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",dS=(e={})=>{const E=/^#![ ]*\//;return e.binary&&(e.begin=BE(E,/.*\b/,e.binary,/\b.*/)),oE({scope:"meta",begin:E,end:/$/,relevance:0,"on:begin":(t,T)=>{t.index!==0&&T.ignoreMatch()}},e)},ft={begin:"\\\\[\\s\\S]",relevance:0},hS={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[ft]},GS={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[ft]},HS={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},rT=function(e,E,t={}){const T=oE({scope:"comment",begin:e,end:E,contains:[]},t);T.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const s=Is("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return T.contains.push({begin:BE(/[ ]+/,"(",s,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),T},mS=rT("//","$"),BS=rT("/\\*","\\*/"),gS=rT("#","$"),FS={scope:"number",begin:pr,relevance:0},bS={scope:"number",begin:dr,relevance:0},YS={scope:"number",begin:hr,relevance:0},vS={scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[ft,{begin:/\[/,end:/\]/,relevance:0,contains:[ft]}]},yS={scope:"title",begin:Ur,relevance:0},VS={scope:"title",begin:os,relevance:0},WS={begin:"\\.\\s*"+os,relevance:0},XS=function(e){return Object.assign(e,{"on:begin":(E,t)=>{t.data._beginMatch=E[1]},"on:end":(E,t)=>{t.data._beginMatch!==E[1]&&t.ignoreMatch()}})};var bt=Object.freeze({__proto__:null,APOS_STRING_MODE:hS,BACKSLASH_ESCAPE:ft,BINARY_NUMBER_MODE:YS,BINARY_NUMBER_RE:hr,COMMENT:rT,C_BLOCK_COMMENT_MODE:BS,C_LINE_COMMENT_MODE:mS,C_NUMBER_MODE:bS,C_NUMBER_RE:dr,END_SAME_AS_BEGIN:XS,HASH_COMMENT_MODE:gS,IDENT_RE:Ur,MATCH_NOTHING_RE:US,METHOD_GUARD:WS,NUMBER_MODE:FS,NUMBER_RE:pr,PHRASAL_WORDS_MODE:HS,QUOTE_STRING_MODE:GS,REGEXP_MODE:vS,RE_STARTERS_RE:pS,SHEBANG:dS,TITLE_MODE:yS,UNDERSCORE_IDENT_RE:os,UNDERSCORE_TITLE_MODE:VS});function xS(e,E){e.input[e.index-1]==="."&&E.ignoreMatch()}function wS(e,E){e.className!==void 0&&(e.scope=e.className,delete e.className)}function KS(e,E){E&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=xS,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,e.relevance===void 0&&(e.relevance=0))}function $S(e,E){Array.isArray(e.illegal)&&(e.illegal=Is(...e.illegal))}function JS(e,E){if(e.match){if(e.begin||e.end)throw new Error("begin & end are not supported with match");e.begin=e.match,delete e.match}}function qS(e,E){e.relevance===void 0&&(e.relevance=1)}const jS=(e,E)=>{if(!e.beforeMatch)return;if(e.starts)throw new Error("beforeMatch cannot be used with starts");const t=Object.assign({},e);Object.keys(e).forEach(T=>{delete e[T]}),e.keywords=t.keywords,e.begin=BE(t.beforeMatch,Mr(t.begin)),e.starts={relevance:0,contains:[Object.assign(t,{endsParent:!0})]},e.relevance=0,delete t.beforeMatch},kS=["of","and","for","in","not","or","if","then","parent","list","value"],QS="keyword";function Gr(e,E,t=QS){const T=Object.create(null);return typeof e=="string"?s(t,e.split(" ")):Array.isArray(e)?s(t,e):Object.keys(e).forEach(function(R){Object.assign(T,Gr(e[R],E,R))}),T;function s(R,r){E&&(r=r.map(A=>A.toLowerCase())),r.forEach(function(A){const S=A.split("|");T[S[0]]=[R,ZS(S[0],S[1])]})}}function ZS(e,E){return E?Number(E):zS(e)?0:1}function zS(e){return kS.includes(e.toLowerCase())}const xs={},dE=e=>{console.error(e)},ws=(e,...E)=>{console.log(`WARN: ${e}`,...E)},vE=(e,E)=>{xs[`${e}/${E}`]||(console.log(`Deprecated as of ${e}. ${E}`),xs[`${e}/${E}`]=!0)},qt=new Error;function Hr(e,E,{key:t}){let T=0;const s=e[t],R={},r={};for(let A=1;A<=E.length;A++)r[A+T]=s[A],R[A+T]=!0,T+=fr(E[A-1]);e[t]=r,e[t]._emit=R,e[t]._multi=!0}function eO(e){if(Array.isArray(e.begin)){if(e.skip||e.excludeBegin||e.returnBegin)throw dE("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),qt;if(typeof e.beginScope!="object"||e.beginScope===null)throw dE("beginScope must be object"),qt;Hr(e,e.begin,{key:"beginScope"}),e.begin=is(e.begin,{joinWith:""})}}function EO(e){if(Array.isArray(e.end)){if(e.skip||e.excludeEnd||e.returnEnd)throw dE("skip, excludeEnd, returnEnd not compatible with endScope: {}"),qt;if(typeof e.endScope!="object"||e.endScope===null)throw dE("endScope must be object"),qt;Hr(e,e.end,{key:"endScope"}),e.end=is(e.end,{joinWith:""})}}function tO(e){e.scope&&typeof e.scope=="object"&&e.scope!==null&&(e.beginScope=e.scope,delete e.scope)}function TO(e){tO(e),typeof e.beginScope=="string"&&(e.beginScope={_wrap:e.beginScope}),typeof e.endScope=="string"&&(e.endScope={_wrap:e.endScope}),eO(e),EO(e)}function sO(e){function E(r,A){return new RegExp(Mt(r),"m"+(e.case_insensitive?"i":"")+(e.unicodeRegex?"u":"")+(A?"g":""))}class t{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(A,S){S.position=this.position++,this.matchIndexes[this.matchAt]=S,this.regexes.push([S,A]),this.matchAt+=fr(A)+1}compile(){this.regexes.length===0&&(this.exec=()=>null);const A=this.regexes.map(S=>S[1]);this.matcherRe=E(is(A,{joinWith:"|"}),!0),this.lastIndex=0}exec(A){this.matcherRe.lastIndex=this.lastIndex;const S=this.matcherRe.exec(A);if(!S)return null;const n=S.findIndex((i,o)=>o>0&&i!==void 0),O=this.matchIndexes[n];return S.splice(0,n),Object.assign(S,O)}}class T{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(A){if(this.multiRegexes[A])return this.multiRegexes[A];const S=new t;return this.rules.slice(A).forEach(([n,O])=>S.addRule(n,O)),S.compile(),this.multiRegexes[A]=S,S}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(A,S){this.rules.push([A,S]),S.type==="begin"&&this.count++}exec(A){const S=this.getMatcher(this.regexIndex);S.lastIndex=this.lastIndex;let n=S.exec(A);if(this.resumingScanAtSamePosition()&&!(n&&n.index===this.lastIndex)){const O=this.getMatcher(0);O.lastIndex=this.lastIndex+1,n=O.exec(A)}return n&&(this.regexIndex+=n.position+1,this.regexIndex===this.count&&this.considerAll()),n}}function s(r){const A=new T;return r.contains.forEach(S=>A.addRule(S.begin,{rule:S,type:"begin"})),r.terminatorEnd&&A.addRule(r.terminatorEnd,{type:"end"}),r.illegal&&A.addRule(r.illegal,{type:"illegal"}),A}function R(r,A){const S=r;if(r.isCompiled)return S;[wS,JS,TO,jS].forEach(O=>O(r,A)),e.compilerExtensions.forEach(O=>O(r,A)),r.__beforeBegin=null,[KS,$S,qS].forEach(O=>O(r,A)),r.isCompiled=!0;let n=null;return typeof r.keywords=="object"&&r.keywords.$pattern&&(r.keywords=Object.assign({},r.keywords),n=r.keywords.$pattern,delete r.keywords.$pattern),n=n||/\w+/,r.keywords&&(r.keywords=Gr(r.keywords,e.case_insensitive)),S.keywordPatternRe=E(n,!0),A&&(r.begin||(r.begin=/\B|\b/),S.beginRe=E(S.begin),!r.end&&!r.endsWithParent&&(r.end=/\B|\b/),r.end&&(S.endRe=E(S.end)),S.terminatorEnd=Mt(S.end)||"",r.endsWithParent&&A.terminatorEnd&&(S.terminatorEnd+=(r.end?"|":"")+A.terminatorEnd)),r.illegal&&(S.illegalRe=E(r.illegal)),r.contains||(r.contains=[]),r.contains=[].concat(...r.contains.map(function(O){return RO(O==="self"?r:O)})),r.contains.forEach(function(O){R(O,S)}),r.starts&&R(r.starts,A),S.matcher=s(S),S}if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return e.classNameAliases=oE(e.classNameAliases||{}),R(e)}function mr(e){return e?e.endsWithParent||mr(e.starts):!1}function RO(e){return e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map(function(E){return oE(e,{variants:null},E)})),e.cachedVariants?e.cachedVariants:mr(e)?oE(e,{starts:e.starts?oE(e.starts):null}):Object.isFrozen(e)?oE(e):e}var rO="11.9.0";class AO extends Error{constructor(E,t){super(E),this.name="HTMLInjectionError",this.html=t}}const dT=Dr,Ks=oE,$s=Symbol("nomatch"),nO=7,Br=function(e){const E=Object.create(null),t=Object.create(null),T=[];let s=!0;const R="Could not find the language '{}', did you forget to load/include a language module?",r={disableAutodetect:!0,name:"Plain text",contains:[]};let A={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:cS};function S(L){return A.noHighlightRe.test(L)}function n(L){let h=L.className+" ";h+=L.parentNode?L.parentNode.className:"";const ee=A.languageDetectRe.exec(h);if(ee){const ne=J(ee[1]);return ne||(ws(R.replace("{}",ee[1])),ws("Falling back to no-highlight mode for this block.",L)),ne?ee[1]:"no-highlight"}return h.split(/\s+/).find(ne=>S(ne)||J(ne))}function O(L,h,ee){let ne="",Ie="";typeof h=="object"?(ne=L,ee=h.ignoreIllegals,Ie=h.language):(vE("10.7.0","highlight(lang, code, ...args) has been deprecated."),vE("10.7.0",`Please use highlight(code, options) instead.
https://github.com/highlightjs/highlight.js/issues/2277`),Ie=L,ne=h),ee===void 0&&(ee=!0);const ce={code:ne,language:Ie};ie("before:highlight",ce);const xe=ce.result?ce.result:i(ce.language,ce.code,ee);return xe.code=ce.code,ie("after:highlight",xe),xe}function i(L,h,ee,ne){const Ie=Object.create(null);function ce(U,d){return U.keywords[d]}function xe(){if(!a.keywords){u.addText(m);return}let U=0;a.keywordPatternRe.lastIndex=0;let d=a.keywordPatternRe.exec(m),X="";for(;d;){X+=m.substring(U,d.index);const Ee=P.case_insensitive?d[0].toLowerCase():d[0],le=ce(a,Ee);if(le){const[Xe,PE]=le;if(u.addText(X),X="",Ie[Ee]=(Ie[Ee]||0)+1,Ie[Ee]<=nO&&(y+=PE),Xe.startsWith("_"))X+=d[0];else{const Ft=P.classNameAliases[Xe]||Xe;Pe(d[0],Ft)}}else X+=d[0];U=a.keywordPatternRe.lastIndex,d=a.keywordPatternRe.exec(m)}X+=m.substring(U),u.addText(X)}function YE(){if(m==="")return;let U=null;if(typeof a.subLanguage=="string"){if(!E[a.subLanguage]){u.addText(m);return}U=i(a.subLanguage,m,!0,H[a.subLanguage]),H[a.subLanguage]=U._top}else U=f(m,a.subLanguage.length?a.subLanguage:null);a.relevance>0&&(y+=U.relevance),u.__addSublanguage(U._emitter,U.language)}function ge(){a.subLanguage!=null?YE():xe(),m=""}function Pe(U,d){U!==""&&(u.startScope(d),u.addText(U),u.endScope())}function uE(U,d){let X=1;const Ee=d.length-1;for(;X<=Ee;){if(!U._emit[X]){X++;continue}const le=P.classNameAliases[U[X]]||U[X],Xe=d[X];le?Pe(Xe,le):(m=Xe,xe(),m=""),X++}}function nt(U,d){return U.scope&&typeof U.scope=="string"&&u.openNode(P.classNameAliases[U.scope]||U.scope),U.beginScope&&(U.beginScope._wrap?(Pe(m,P.classNameAliases[U.beginScope._wrap]||U.beginScope._wrap),m=""):U.beginScope._multi&&(uE(U.beginScope,d),m="")),a=Object.create(U,{parent:{value:a}}),a}function sE(U,d,X){let Ee=MS(U.endRe,X);if(Ee){if(U["on:end"]){const le=new Vs(U);U["on:end"](d,le),le.isMatchIgnored&&(Ee=!1)}if(Ee){for(;U.endsParent&&U.parent;)U=U.parent;return U}}if(U.endsWithParent)return sE(U.parent,d,X)}function St(U){return a.matcher.regexIndex===0?(m+=U[0],1):(se=!0,0)}function Ot(U){const d=U[0],X=U.rule,Ee=new Vs(X),le=[X.__beforeBegin,X["on:begin"]];for(const Xe of le)if(Xe&&(Xe(U,Ee),Ee.isMatchIgnored))return St(d);return X.skip?m+=d:(X.excludeBegin&&(m+=d),ge(),!X.returnBegin&&!X.excludeBegin&&(m=d)),nt(X,U),X.returnBegin?0:d.length}function I(U){const d=U[0],X=h.substring(U.index),Ee=sE(a,U,X);if(!Ee)return $s;const le=a;a.endScope&&a.endScope._wrap?(ge(),Pe(d,a.endScope._wrap)):a.endScope&&a.endScope._multi?(ge(),uE(a.endScope,U)):le.skip?m+=d:(le.returnEnd||le.excludeEnd||(m+=d),ge(),le.excludeEnd&&(m=d));do a.scope&&u.closeNode(),!a.skip&&!a.subLanguage&&(y+=a.relevance),a=a.parent;while(a!==Ee.parent);return Ee.starts&&nt(Ee.starts,U),le.returnEnd?0:d.length}function N(){const U=[];for(let d=a;d!==P;d=d.parent)d.scope&&U.unshift(d.scope);U.forEach(d=>u.openNode(d))}let C={};function D(U,d){const X=d&&d[0];if(m+=U,X==null)return ge(),0;if(C.type==="begin"&&d.type==="end"&&C.index===d.index&&X===""){if(m+=h.slice(d.index,d.index+1),!s){const Ee=new Error(`0 width match regex (${L})`);throw Ee.languageName=L,Ee.badRule=C.rule,Ee}return 1}if(C=d,d.type==="begin")return Ot(d);if(d.type==="illegal"&&!ee){const Ee=new Error('Illegal lexeme "'+X+'" for mode "'+(a.scope||"<unnamed>")+'"');throw Ee.mode=a,Ee}else if(d.type==="end"){const Ee=I(d);if(Ee!==$s)return Ee}if(d.type==="illegal"&&X==="")return 1;if(j>1e5&&j>d.index*3)throw new Error("potential infinite loop, way more iterations than matches");return m+=X,X.length}const P=J(L);if(!P)throw dE(R.replace("{}",L)),new Error('Unknown language: "'+L+'"');const G=sO(P);let g="",a=ne||G;const H={},u=new A.__emitter(A);N();let m="",y=0,W=0,j=0,se=!1;try{if(P.__emitTokens)P.__emitTokens(h,u);else{for(a.matcher.considerAll();;){j++,se?se=!1:a.matcher.considerAll(),a.matcher.lastIndex=W;const U=a.matcher.exec(h);if(!U)break;const d=h.substring(W,U.index),X=D(d,U);W=U.index+X}D(h.substring(W))}return u.finalize(),g=u.toHTML(),{language:L,value:g,relevance:y,illegal:!1,_emitter:u,_top:a}}catch(U){if(U.message&&U.message.includes("Illegal"))return{language:L,value:dT(h),illegal:!0,relevance:0,_illegalBy:{message:U.message,index:W,context:h.slice(W-100,W+100),mode:U.mode,resultSoFar:g},_emitter:u};if(s)return{language:L,value:dT(h),illegal:!1,relevance:0,errorRaised:U,_emitter:u,_top:a};throw U}}function o(L){const h={value:dT(L),illegal:!1,relevance:0,_top:r,_emitter:new A.__emitter(A)};return h._emitter.addText(L),h}function f(L,h){h=h||A.languages||Object.keys(E);const ee=o(L),ne=h.filter(J).filter(c).map(ge=>i(ge,L,!1));ne.unshift(ee);const Ie=ne.sort((ge,Pe)=>{if(ge.relevance!==Pe.relevance)return Pe.relevance-ge.relevance;if(ge.language&&Pe.language){if(J(ge.language).supersetOf===Pe.language)return 1;if(J(Pe.language).supersetOf===ge.language)return-1}return 0}),[ce,xe]=Ie,YE=ce;return YE.secondBest=xe,YE}function p(L,h,ee){const ne=h&&t[h]||ee;L.classList.add("hljs"),L.classList.add(`language-${ne}`)}function F(L){let h=null;const ee=n(L);if(S(ee))return;if(ie("before:highlightElement",{el:L,language:ee}),L.dataset.highlighted){console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",L);return}if(L.children.length>0&&(A.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(L)),A.throwUnescapedHTML))throw new AO("One of your code blocks includes unescaped HTML.",L.innerHTML);h=L;const ne=h.textContent,Ie=ee?O(ne,{language:ee,ignoreIllegals:!0}):f(ne);L.innerHTML=Ie.value,L.dataset.highlighted="yes",p(L,ee,Ie.language),L.result={language:Ie.language,re:Ie.relevance,relevance:Ie.relevance},Ie.secondBest&&(L.secondBest={language:Ie.secondBest.language,relevance:Ie.secondBest.relevance}),ie("after:highlightElement",{el:L,result:Ie,text:ne})}function x(L){A=Ks(A,L)}const $=()=>{v(),vE("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")};function K(){v(),vE("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}let V=!1;function v(){if(document.readyState==="loading"){V=!0;return}document.querySelectorAll(A.cssSelector).forEach(F)}function Te(){V&&v()}typeof window<"u"&&window.addEventListener&&window.addEventListener("DOMContentLoaded",Te,!1);function Ce(L,h){let ee=null;try{ee=h(e)}catch(ne){if(dE("Language definition for '{}' could not be registered.".replace("{}",L)),s)dE(ne);else throw ne;ee=r}ee.name||(ee.name=L),E[L]=ee,ee.rawDefinition=h.bind(null,e),ee.aliases&&_(ee.aliases,{languageName:L})}function Re(L){delete E[L];for(const h of Object.keys(t))t[h]===L&&delete t[h]}function z(){return Object.keys(E)}function J(L){return L=(L||"").toLowerCase(),E[L]||E[t[L]]}function _(L,{languageName:h}){typeof L=="string"&&(L=[L]),L.forEach(ee=>{t[ee.toLowerCase()]=h})}function c(L){const h=J(L);return h&&!h.disableAutodetect}function l(L){L["before:highlightBlock"]&&!L["before:highlightElement"]&&(L["before:highlightElement"]=h=>{L["before:highlightBlock"](Object.assign({block:h.el},h))}),L["after:highlightBlock"]&&!L["after:highlightElement"]&&(L["after:highlightElement"]=h=>{L["after:highlightBlock"](Object.assign({block:h.el},h))})}function b(L){l(L),T.push(L)}function w(L){const h=T.indexOf(L);h!==-1&&T.splice(h,1)}function ie(L,h){const ee=L;T.forEach(function(ne){ne[ee]&&ne[ee](h)})}function Q(L){return vE("10.7.0","highlightBlock will be removed entirely in v12.0"),vE("10.7.0","Please use highlightElement now."),F(L)}Object.assign(e,{highlight:O,highlightAuto:f,highlightAll:v,highlightElement:F,highlightBlock:Q,configure:x,initHighlighting:$,initHighlightingOnLoad:K,registerLanguage:Ce,unregisterLanguage:Re,listLanguages:z,getLanguage:J,registerAliases:_,autoDetection:c,inherit:Ks,addPlugin:b,removePlugin:w}),e.debugMode=function(){s=!1},e.safeMode=function(){s=!0},e.versionString=rO,e.regex={concat:BE,lookahead:Mr,either:Is,optional:PS,anyNumberOfTimes:uS};for(const L in bt)typeof bt[L]=="object"&&Pr(bt[L]);return Object.assign(e,bt),e},qE=Br({});qE.newInstance=()=>Br({});var SO=qE;qE.HighlightJS=qE;qE.default=qE;const _t=Ss(SO);function OO(e){const E=e.regex,t=e.COMMENT("--","$"),T={className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},s={begin:/"/,end:/"/,contains:[{begin:/""/}]},R=["true","false","unknown"],r=["double precision","large object","with timezone","without timezone"],A=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],S=["add","asc","collation","desc","final","first","last","view"],n=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year"],O=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],i=["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"],o=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],f=O,p=[...n,...S].filter(V=>!O.includes(V)),F={className:"variable",begin:/@[a-z0-9][a-z0-9_]*/},x={className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0},$={begin:E.concat(/\b/,E.either(...f),/\s*\(/),relevance:0,keywords:{built_in:f}};function K(V,{exceptions:v,when:Te}={}){const Ce=Te;return v=v||[],V.map(Re=>Re.match(/\|\d+$/)||v.includes(Re)?Re:Ce(Re)?`${Re}|0`:Re)}return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:K(p,{when:V=>V.length<3}),literal:R,type:A,built_in:i},contains:[{begin:E.either(...o),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:p.concat(o),literal:R,type:A}},{className:"type",begin:E.either(...r)},$,F,T,s,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,x]}}function IO(e){const E={className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},t={match:/[{}[\],:]/,className:"punctuation",relevance:0},T=["true","false","null"],s={scope:"literal",beginKeywords:T.join(" ")};return{name:"JSON",keywords:{literal:T},contains:[E,t,e.QUOTE_STRING_MODE,s,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}function Ns(e,E){const t=Object.create(null),T=e.split(",");for(let s=0;s<T.length;s++)t[T[s]]=!0;return E?s=>!!t[s.toLowerCase()]:s=>!!t[s]}const ae={},wE=[],eE=()=>{},iO=()=>!1,AT=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),as=e=>e.startsWith("onUpdate:"),Ge=Object.assign,_s=(e,E)=>{const t=e.indexOf(E);t>-1&&e.splice(t,1)},oO=Object.prototype.hasOwnProperty,re=(e,E)=>oO.call(e,E),Z=Array.isArray,KE=e=>nT(e)==="[object Map]",gr=e=>nT(e)==="[object Set]",te=e=>typeof e=="function",Me=e=>typeof e=="string",zE=e=>typeof e=="symbol",_e=e=>e!==null&&typeof e=="object",Fr=e=>(_e(e)||te(e))&&te(e.then)&&te(e.catch),br=Object.prototype.toString,nT=e=>br.call(e),NO=e=>nT(e).slice(8,-1),Yr=e=>nT(e)==="[object Object]",Cs=e=>Me(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,wt=Ns(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ST=e=>{const E=Object.create(null);return t=>E[t]||(E[t]=e(t))},aO=/-(\w)/g,EE=ST(e=>e.replace(aO,(E,t)=>t?t.toUpperCase():"")),_O=/\B([A-Z])/g,et=ST(e=>e.replace(_O,"-$1").toLowerCase()),OT=ST(e=>e.charAt(0).toUpperCase()+e.slice(1)),hT=ST(e=>e?`on${OT(e)}`:""),HE=(e,E)=>!Object.is(e,E),GT=(e,E)=>{for(let t=0;t<e.length;t++)e[t](E)},jt=(e,E,t)=>{Object.defineProperty(e,E,{configurable:!0,enumerable:!1,value:t})},CO=e=>{const E=parseFloat(e);return isNaN(E)?e:E};let Js;const XT=()=>Js||(Js=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function IT(e){if(Z(e)){const E={};for(let t=0;t<e.length;t++){const T=e[t],s=Me(T)?uO(T):IT(T);if(s)for(const R in s)E[R]=s[R]}return E}else if(Me(e)||_e(e))return e}const lO=/;(?![^(]*\))/g,LO=/:([^]+)/,cO=/\/\*[^]*?\*\//g;function uO(e){const E={};return e.replace(cO,"").split(lO).forEach(t=>{if(t){const T=t.split(LO);T.length>1&&(E[T[0].trim()]=T[1].trim())}}),E}function $e(e){let E="";if(Me(e))E=e;else if(Z(e))for(let t=0;t<e.length;t++){const T=$e(e[t]);T&&(E+=T+" ")}else if(_e(e))for(const t in e)e[t]&&(E+=t+" ");return E.trim()}const PO="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",DO=Ns(PO);function vr(e){return!!e||e===""}const Le=e=>Me(e)?e:e==null?"":Z(e)||_e(e)&&(e.toString===br||!te(e.toString))?JSON.stringify(e,yr,2):String(e),yr=(e,E)=>E&&E.__v_isRef?yr(e,E.value):KE(E)?{[`Map(${E.size})`]:[...E.entries()].reduce((t,[T,s],R)=>(t[HT(T,R)+" =>"]=s,t),{})}:gr(E)?{[`Set(${E.size})`]:[...E.values()].map(t=>HT(t))}:zE(E)?HT(E):_e(E)&&!Z(E)&&!Yr(E)?String(E):E,HT=(e,E="")=>{var t;return zE(e)?`Symbol(${(t=e.description)!=null?t:E})`:e};let We;class Vr{constructor(E=!1){this.detached=E,this._active=!0,this.effects=[],this.cleanups=[],this.parent=We,!E&&We&&(this.index=(We.scopes||(We.scopes=[])).push(this)-1)}get active(){return this._active}run(E){if(this._active){const t=We;try{return We=this,E()}finally{We=t}}}on(){We=this}off(){We=this.parent}stop(E){if(this._active){let t,T;for(t=0,T=this.effects.length;t<T;t++)this.effects[t].stop();for(t=0,T=this.cleanups.length;t<T;t++)this.cleanups[t]();if(this.scopes)for(t=0,T=this.scopes.length;t<T;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!E){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.parent=void 0,this._active=!1}}}function Wr(e){return new Vr(e)}function MO(e,E=We){E&&E.active&&E.effects.push(e)}function Xr(){return We}function fO(e){We&&We.cleanups.push(e)}const ls=e=>{const E=new Set(e);return E.w=0,E.n=0,E},xr=e=>(e.w&lE)>0,wr=e=>(e.n&lE)>0,UO=({deps:e})=>{if(e.length)for(let E=0;E<e.length;E++)e[E].w|=lE},pO=e=>{const{deps:E}=e;if(E.length){let t=0;for(let T=0;T<E.length;T++){const s=E[T];xr(s)&&!wr(s)?s.delete(e):E[t++]=s,s.w&=~lE,s.n&=~lE}E.length=t}},kt=new WeakMap;let Nt=0,lE=1;const xT=30;let we;const hE=Symbol(""),wT=Symbol("");class Ls{constructor(E,t=null,T){this.fn=E,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,MO(this,T)}run(){if(!this.active)return this.fn();let E=we,t=aE;for(;E;){if(E===this)return;E=E.parent}try{return this.parent=we,we=this,aE=!0,lE=1<<++Nt,Nt<=xT?UO(this):qs(this),this.fn()}finally{Nt<=xT&&pO(this),lE=1<<--Nt,we=this.parent,aE=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){we===this?this.deferStop=!0:this.active&&(qs(this),this.onStop&&this.onStop(),this.active=!1)}}function qs(e){const{deps:E}=e;if(E.length){for(let t=0;t<E.length;t++)E[t].delete(e);E.length=0}}let aE=!0;const Kr=[];function Et(){Kr.push(aE),aE=!1}function tt(){const e=Kr.pop();aE=e===void 0?!0:e}function ye(e,E,t){if(aE&&we){let T=kt.get(e);T||kt.set(e,T=new Map);let s=T.get(t);s||T.set(t,s=ls()),$r(s)}}function $r(e,E){let t=!1;Nt<=xT?wr(e)||(e.n|=lE,t=!xr(e)):t=!e.has(we),t&&(e.add(we),we.deps.push(e))}function AE(e,E,t,T,s,R){const r=kt.get(e);if(!r)return;let A=[];if(E==="clear")A=[...r.values()];else if(t==="length"&&Z(e)){const S=Number(T);r.forEach((n,O)=>{(O==="length"||!zE(O)&&O>=S)&&A.push(n)})}else switch(t!==void 0&&A.push(r.get(t)),E){case"add":Z(e)?Cs(t)&&A.push(r.get("length")):(A.push(r.get(hE)),KE(e)&&A.push(r.get(wT)));break;case"delete":Z(e)||(A.push(r.get(hE)),KE(e)&&A.push(r.get(wT)));break;case"set":KE(e)&&A.push(r.get(hE));break}if(A.length===1)A[0]&&KT(A[0]);else{const S=[];for(const n of A)n&&S.push(...n);KT(ls(S))}}function KT(e,E){const t=Z(e)?e:[...e];for(const T of t)T.computed&&js(T);for(const T of t)T.computed||js(T)}function js(e,E){(e!==we||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}function dO(e,E){var t;return(t=kt.get(e))==null?void 0:t.get(E)}const hO=Ns("__proto__,__v_isRef,__isVue"),Jr=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(zE)),ks=GO();function GO(){const e={};return["includes","indexOf","lastIndexOf"].forEach(E=>{e[E]=function(...t){const T=Ae(this);for(let R=0,r=this.length;R<r;R++)ye(T,"get",R+"");const s=T[E](...t);return s===-1||s===!1?T[E](...t.map(Ae)):s}}),["push","pop","shift","unshift","splice"].forEach(E=>{e[E]=function(...t){Et();const T=Ae(this)[E].apply(this,t);return tt(),T}}),e}function HO(e){const E=Ae(this);return ye(E,"has",e),E.hasOwnProperty(e)}class qr{constructor(E=!1,t=!1){this._isReadonly=E,this._shallow=t}get(E,t,T){const s=this._isReadonly,R=this._shallow;if(t==="__v_isReactive")return!s;if(t==="__v_isReadonly")return s;if(t==="__v_isShallow")return R;if(t==="__v_raw")return T===(s?R?wO:Zr:R?Qr:kr).get(E)||Object.getPrototypeOf(E)===Object.getPrototypeOf(T)?E:void 0;const r=Z(E);if(!s){if(r&&re(ks,t))return Reflect.get(ks,t,T);if(t==="hasOwnProperty")return HO}const A=Reflect.get(E,t,T);return(zE(t)?Jr.has(t):hO(t))||(s||ye(E,"get",t),R)?A:fe(A)?r&&Cs(t)?A:A.value:_e(A)?s?zr(A):gE(A):A}}class jr extends qr{constructor(E=!1){super(!1,E)}set(E,t,T,s){let R=E[t];if(!this._shallow){const S=jE(R);if(!Qt(T)&&!jE(T)&&(R=Ae(R),T=Ae(T)),!Z(E)&&fe(R)&&!fe(T))return S?!1:(R.value=T,!0)}const r=Z(E)&&Cs(t)?Number(t)<E.length:re(E,t),A=Reflect.set(E,t,T,s);return E===Ae(s)&&(r?HE(T,R)&&AE(E,"set",t,T):AE(E,"add",t,T)),A}deleteProperty(E,t){const T=re(E,t);E[t];const s=Reflect.deleteProperty(E,t);return s&&T&&AE(E,"delete",t,void 0),s}has(E,t){const T=Reflect.has(E,t);return(!zE(t)||!Jr.has(t))&&ye(E,"has",t),T}ownKeys(E){return ye(E,"iterate",Z(E)?"length":hE),Reflect.ownKeys(E)}}class mO extends qr{constructor(E=!1){super(!0,E)}set(E,t){return!0}deleteProperty(E,t){return!0}}const BO=new jr,gO=new mO,FO=new jr(!0),cs=e=>e,iT=e=>Reflect.getPrototypeOf(e);function Yt(e,E,t=!1,T=!1){e=e.__v_raw;const s=Ae(e),R=Ae(E);t||(HE(E,R)&&ye(s,"get",E),ye(s,"get",R));const{has:r}=iT(s),A=T?cs:t?Ds:Ut;if(r.call(s,E))return A(e.get(E));if(r.call(s,R))return A(e.get(R));e!==s&&e.get(E)}function vt(e,E=!1){const t=this.__v_raw,T=Ae(t),s=Ae(e);return E||(HE(e,s)&&ye(T,"has",e),ye(T,"has",s)),e===s?t.has(e):t.has(e)||t.has(s)}function yt(e,E=!1){return e=e.__v_raw,!E&&ye(Ae(e),"iterate",hE),Reflect.get(e,"size",e)}function Qs(e){e=Ae(e);const E=Ae(this);return iT(E).has.call(E,e)||(E.add(e),AE(E,"add",e,e)),this}function Zs(e,E){E=Ae(E);const t=Ae(this),{has:T,get:s}=iT(t);let R=T.call(t,e);R||(e=Ae(e),R=T.call(t,e));const r=s.call(t,e);return t.set(e,E),R?HE(E,r)&&AE(t,"set",e,E):AE(t,"add",e,E),this}function zs(e){const E=Ae(this),{has:t,get:T}=iT(E);let s=t.call(E,e);s||(e=Ae(e),s=t.call(E,e)),T&&T.call(E,e);const R=E.delete(e);return s&&AE(E,"delete",e,void 0),R}function eR(){const e=Ae(this),E=e.size!==0,t=e.clear();return E&&AE(e,"clear",void 0,void 0),t}function Vt(e,E){return function(T,s){const R=this,r=R.__v_raw,A=Ae(r),S=E?cs:e?Ds:Ut;return!e&&ye(A,"iterate",hE),r.forEach((n,O)=>T.call(s,S(n),S(O),R))}}function Wt(e,E,t){return function(...T){const s=this.__v_raw,R=Ae(s),r=KE(R),A=e==="entries"||e===Symbol.iterator&&r,S=e==="keys"&&r,n=s[e](...T),O=t?cs:E?Ds:Ut;return!E&&ye(R,"iterate",S?wT:hE),{next(){const{value:i,done:o}=n.next();return o?{value:i,done:o}:{value:A?[O(i[0]),O(i[1])]:O(i),done:o}},[Symbol.iterator](){return this}}}}function SE(e){return function(...E){return e==="delete"?!1:e==="clear"?void 0:this}}function bO(){const e={get(R){return Yt(this,R)},get size(){return yt(this)},has:vt,add:Qs,set:Zs,delete:zs,clear:eR,forEach:Vt(!1,!1)},E={get(R){return Yt(this,R,!1,!0)},get size(){return yt(this)},has:vt,add:Qs,set:Zs,delete:zs,clear:eR,forEach:Vt(!1,!0)},t={get(R){return Yt(this,R,!0)},get size(){return yt(this,!0)},has(R){return vt.call(this,R,!0)},add:SE("add"),set:SE("set"),delete:SE("delete"),clear:SE("clear"),forEach:Vt(!0,!1)},T={get(R){return Yt(this,R,!0,!0)},get size(){return yt(this,!0)},has(R){return vt.call(this,R,!0)},add:SE("add"),set:SE("set"),delete:SE("delete"),clear:SE("clear"),forEach:Vt(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(R=>{e[R]=Wt(R,!1,!1),t[R]=Wt(R,!0,!1),E[R]=Wt(R,!1,!0),T[R]=Wt(R,!0,!0)}),[e,t,E,T]}const[YO,vO,yO,VO]=bO();function us(e,E){const t=E?e?VO:yO:e?vO:YO;return(T,s,R)=>s==="__v_isReactive"?!e:s==="__v_isReadonly"?e:s==="__v_raw"?T:Reflect.get(re(t,s)&&s in T?t:T,s,R)}const WO={get:us(!1,!1)},XO={get:us(!1,!0)},xO={get:us(!0,!1)},kr=new WeakMap,Qr=new WeakMap,Zr=new WeakMap,wO=new WeakMap;function KO(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function $O(e){return e.__v_skip||!Object.isExtensible(e)?0:KO(NO(e))}function gE(e){return jE(e)?e:Ps(e,!1,BO,WO,kr)}function JO(e){return Ps(e,!1,FO,XO,Qr)}function zr(e){return Ps(e,!0,gO,xO,Zr)}function Ps(e,E,t,T,s){if(!_e(e)||e.__v_raw&&!(E&&e.__v_isReactive))return e;const R=s.get(e);if(R)return R;const r=$O(e);if(r===0)return e;const A=new Proxy(e,r===2?T:t);return s.set(e,A),A}function _E(e){return jE(e)?_E(e.__v_raw):!!(e&&e.__v_isReactive)}function jE(e){return!!(e&&e.__v_isReadonly)}function Qt(e){return!!(e&&e.__v_isShallow)}function eA(e){return _E(e)||jE(e)}function Ae(e){const E=e&&e.__v_raw;return E?Ae(E):e}function oT(e){return jt(e,"__v_skip",!0),e}const Ut=e=>_e(e)?gE(e):e,Ds=e=>_e(e)?zr(e):e;function EA(e){aE&&we&&(e=Ae(e),$r(e.dep||(e.dep=ls())))}function tA(e,E){e=Ae(e);const t=e.dep;t&&KT(t)}function fe(e){return!!(e&&e.__v_isRef===!0)}function NE(e){return qO(e,!1)}function qO(e,E){return fe(e)?e:new jO(e,E)}class jO{constructor(E,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?E:Ae(E),this._value=t?E:Ut(E)}get value(){return EA(this),this._value}set value(E){const t=this.__v_isShallow||Qt(E)||jE(E);E=t?E:Ae(E),HE(E,this._rawValue)&&(this._rawValue=E,this._value=t?E:Ut(E),tA(this))}}function Se(e){return fe(e)?e.value:e}const kO={get:(e,E,t)=>Se(Reflect.get(e,E,t)),set:(e,E,t,T)=>{const s=e[E];return fe(s)&&!fe(t)?(s.value=t,!0):Reflect.set(e,E,t,T)}};function TA(e){return _E(e)?e:new Proxy(e,kO)}function QO(e){const E=Z(e)?new Array(e.length):{};for(const t in e)E[t]=zO(e,t);return E}class ZO{constructor(E,t,T){this._object=E,this._key=t,this._defaultValue=T,this.__v_isRef=!0}get value(){const E=this._object[this._key];return E===void 0?this._defaultValue:E}set value(E){this._object[this._key]=E}get dep(){return dO(Ae(this._object),this._key)}}function zO(e,E,t){const T=e[E];return fe(T)?T:new ZO(e,E,t)}class eI{constructor(E,t,T,s){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new Ls(E,()=>{this._dirty||(this._dirty=!0,tA(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!s,this.__v_isReadonly=T}get value(){const E=Ae(this);return EA(E),(E._dirty||!E._cacheable)&&(E._dirty=!1,E._value=E.effect.run()),E._value}set value(E){this._setter(E)}}function EI(e,E,t=!1){let T,s;const R=te(e);return R?(T=e,s=eE):(T=e.get,s=e.set),new eI(T,s,R||!s,t)}function CE(e,E,t,T){let s;try{s=T?e(...T):e()}catch(R){NT(R,E,t)}return s}function Je(e,E,t,T){if(te(e)){const R=CE(e,E,t,T);return R&&Fr(R)&&R.catch(r=>{NT(r,E,t)}),R}const s=[];for(let R=0;R<e.length;R++)s.push(Je(e[R],E,t,T));return s}function NT(e,E,t,T=!0){const s=E?E.vnode:null;if(E){let R=E.parent;const r=E.proxy,A=t;for(;R;){const n=R.ec;if(n){for(let O=0;O<n.length;O++)if(n[O](e,r,A)===!1)return}R=R.parent}const S=E.appContext.config.errorHandler;if(S){CE(S,null,10,[e,r,A]);return}}tI(e,t,s,T)}function tI(e,E,t,T=!0){console.error(e)}let pt=!1,$T=!1;const me=[];let Ze=0;const $E=[];let rE=null,UE=0;const sA=Promise.resolve();let Ms=null;function RA(e){const E=Ms||sA;return e?E.then(this?e.bind(this):e):E}function TI(e){let E=Ze+1,t=me.length;for(;E<t;){const T=E+t>>>1,s=me[T],R=dt(s);R<e||R===e&&s.pre?E=T+1:t=T}return E}function fs(e){(!me.length||!me.includes(e,pt&&e.allowRecurse?Ze+1:Ze))&&(e.id==null?me.push(e):me.splice(TI(e.id),0,e),rA())}function rA(){!pt&&!$T&&($T=!0,Ms=sA.then(nA))}function sI(e){const E=me.indexOf(e);E>Ze&&me.splice(E,1)}function RI(e){Z(e)?$E.push(...e):(!rE||!rE.includes(e,e.allowRecurse?UE+1:UE))&&$E.push(e),rA()}function ER(e,E,t=pt?Ze+1:0){for(;t<me.length;t++){const T=me[t];if(T&&T.pre){if(e&&T.id!==e.uid)continue;me.splice(t,1),t--,T()}}}function AA(e){if($E.length){const E=[...new Set($E)];if($E.length=0,rE){rE.push(...E);return}for(rE=E,rE.sort((t,T)=>dt(t)-dt(T)),UE=0;UE<rE.length;UE++)rE[UE]();rE=null,UE=0}}const dt=e=>e.id==null?1/0:e.id,rI=(e,E)=>{const t=dt(e)-dt(E);if(t===0){if(e.pre&&!E.pre)return-1;if(E.pre&&!e.pre)return 1}return t};function nA(e){$T=!1,pt=!0,me.sort(rI);try{for(Ze=0;Ze<me.length;Ze++){const E=me[Ze];E&&E.active!==!1&&CE(E,null,14)}}finally{Ze=0,me.length=0,AA(),pt=!1,Ms=null,(me.length||$E.length)&&nA()}}function AI(e,E,...t){if(e.isUnmounted)return;const T=e.vnode.props||ae;let s=t;const R=E.startsWith("update:"),r=R&&E.slice(7);if(r&&r in T){const O=`${r==="modelValue"?"model":r}Modifiers`,{number:i,trim:o}=T[O]||ae;o&&(s=t.map(f=>Me(f)?f.trim():f)),i&&(s=t.map(CO))}let A,S=T[A=hT(E)]||T[A=hT(EE(E))];!S&&R&&(S=T[A=hT(et(E))]),S&&Je(S,e,6,s);const n=T[A+"Once"];if(n){if(!e.emitted)e.emitted={};else if(e.emitted[A])return;e.emitted[A]=!0,Je(n,e,6,s)}}function SA(e,E,t=!1){const T=E.emitsCache,s=T.get(e);if(s!==void 0)return s;const R=e.emits;let r={},A=!1;if(!te(e)){const S=n=>{const O=SA(n,E,!0);O&&(A=!0,Ge(r,O))};!t&&E.mixins.length&&E.mixins.forEach(S),e.extends&&S(e.extends),e.mixins&&e.mixins.forEach(S)}return!R&&!A?(_e(e)&&T.set(e,null),null):(Z(R)?R.forEach(S=>r[S]=null):Ge(r,R),_e(e)&&T.set(e,r),r)}function aT(e,E){return!e||!AT(E)?!1:(E=E.slice(2).replace(/Once$/,""),re(e,E[0].toLowerCase()+E.slice(1))||re(e,et(E))||re(e,E))}let Be=null,OA=null;function Zt(e){const E=Be;return Be=e,OA=e&&e.type.__scopeId||null,E}function TE(e,E=Be,t){if(!E||e._n)return e;const T=(...s)=>{T._d&&NR(-1);const R=Zt(E);let r;try{r=e(...s)}finally{Zt(R),T._d&&NR(1)}return r};return T._n=!0,T._c=!0,T._d=!0,T}function mT(e){const{type:E,vnode:t,proxy:T,withProxy:s,props:R,propsOptions:[r],slots:A,attrs:S,emit:n,render:O,renderCache:i,data:o,setupState:f,ctx:p,inheritAttrs:F}=e;let x,$;const K=Zt(e);try{if(t.shapeFlag&4){const v=s||T,Te=v;x=Qe(O.call(Te,v,i,R,f,o,p)),$=S}else{const v=E;x=Qe(v.length>1?v(R,{attrs:S,slots:A,emit:n}):v(R,null)),$=E.props?S:nI(S)}}catch(v){ut.length=0,NT(v,e,1),x=Ne(LE)}let V=x;if($&&F!==!1){const v=Object.keys($),{shapeFlag:Te}=V;v.length&&Te&7&&(r&&v.some(as)&&($=SI($,r)),V=kE(V,$))}return t.dirs&&(V=kE(V),V.dirs=V.dirs?V.dirs.concat(t.dirs):t.dirs),t.transition&&(V.transition=t.transition),x=V,Zt(K),x}const nI=e=>{let E;for(const t in e)(t==="class"||t==="style"||AT(t))&&((E||(E={}))[t]=e[t]);return E},SI=(e,E)=>{const t={};for(const T in e)(!as(T)||!(T.slice(9)in E))&&(t[T]=e[T]);return t};function OI(e,E,t){const{props:T,children:s,component:R}=e,{props:r,children:A,patchFlag:S}=E,n=R.emitsOptions;if(E.dirs||E.transition)return!0;if(t&&S>=0){if(S&1024)return!0;if(S&16)return T?tR(T,r,n):!!r;if(S&8){const O=E.dynamicProps;for(let i=0;i<O.length;i++){const o=O[i];if(r[o]!==T[o]&&!aT(n,o))return!0}}}else return(s||A)&&(!A||!A.$stable)?!0:T===r?!1:T?r?tR(T,r,n):!0:!!r;return!1}function tR(e,E,t){const T=Object.keys(E);if(T.length!==Object.keys(e).length)return!0;for(let s=0;s<T.length;s++){const R=T[s];if(E[R]!==e[R]&&!aT(t,R))return!0}return!1}function II({vnode:e,parent:E},t){for(;E&&E.subTree===e;)(e=E.vnode).el=t,E=E.parent}const IA="components";function _T(e,E){return oI(IA,e,!0,E)||e}const iI=Symbol.for("v-ndc");function oI(e,E,t=!0,T=!1){const s=Be||he;if(s){const R=s.type;if(e===IA){const A=Ai(R,!1);if(A&&(A===E||A===EE(E)||A===OT(EE(E))))return R}const r=TR(s[e]||R[e],E)||TR(s.appContext[e],E);return!r&&T?R:r}}function TR(e,E){return e&&(e[E]||e[EE(E)]||e[OT(EE(E))])}const NI=e=>e.__isSuspense;function aI(e,E){E&&E.pendingBranch?Z(e)?E.effects.push(...e):E.effects.push(e):RI(e)}const Xt={};function JE(e,E,t){return iA(e,E,t)}function iA(e,E,{immediate:t,deep:T,flush:s,onTrack:R,onTrigger:r}=ae){var A;const S=Xr()===((A=he)==null?void 0:A.scope)?he:null;let n,O=!1,i=!1;if(fe(e)?(n=()=>e.value,O=Qt(e)):_E(e)?(n=()=>e,T=!0):Z(e)?(i=!0,O=e.some(v=>_E(v)||Qt(v)),n=()=>e.map(v=>{if(fe(v))return v.value;if(_E(v))return xE(v);if(te(v))return CE(v,S,2)})):te(e)?E?n=()=>CE(e,S,2):n=()=>{if(!(S&&S.isUnmounted))return o&&o(),Je(e,S,3,[f])}:n=eE,E&&T){const v=n;n=()=>xE(v())}let o,f=v=>{o=K.onStop=()=>{CE(v,S,4),o=K.onStop=void 0}},p;if(Ht)if(f=eE,E?t&&Je(E,S,3,[n(),i?[]:void 0,f]):n(),s==="sync"){const v=Oi();p=v.__watcherHandles||(v.__watcherHandles=[])}else return eE;let F=i?new Array(e.length).fill(Xt):Xt;const x=()=>{if(K.active)if(E){const v=K.run();(T||O||(i?v.some((Te,Ce)=>HE(Te,F[Ce])):HE(v,F)))&&(o&&o(),Je(E,S,3,[v,F===Xt?void 0:i&&F[0]===Xt?[]:F,f]),F=v)}else K.run()};x.allowRecurse=!!E;let $;s==="sync"?$=x:s==="post"?$=()=>ve(x,S&&S.suspense):(x.pre=!0,S&&(x.id=S.uid),$=()=>fs(x));const K=new Ls(n,$);E?t?x():F=K.run():s==="post"?ve(K.run.bind(K),S&&S.suspense):K.run();const V=()=>{K.stop(),S&&S.scope&&_s(S.scope.effects,K)};return p&&p.push(V),V}function _I(e,E,t){const T=this.proxy,s=Me(e)?e.includes(".")?oA(T,e):()=>T[e]:e.bind(T,T);let R;te(E)?R=E:(R=E.handler,t=E);const r=he;QE(this);const A=iA(s,R.bind(T),t);return r?QE(r):GE(),A}function oA(e,E){const t=E.split(".");return()=>{let T=e;for(let s=0;s<t.length&&T;s++)T=T[t[s]];return T}}function xE(e,E){if(!_e(e)||e.__v_skip||(E=E||new Set,E.has(e)))return e;if(E.add(e),fe(e))xE(e.value,E);else if(Z(e))for(let t=0;t<e.length;t++)xE(e[t],E);else if(gr(e)||KE(e))e.forEach(t=>{xE(t,E)});else if(Yr(e))for(const t in e)xE(e[t],E);return e}function DE(e,E,t,T){const s=e.dirs,R=E&&E.dirs;for(let r=0;r<s.length;r++){const A=s[r];R&&(A.oldValue=R[r].value);let S=A.dir[T];S&&(Et(),Je(S,t,8,[e.el,A,e,E]),tt())}}/*! #__NO_SIDE_EFFECTS__ */function Ye(e,E){return te(e)?Ge({name:e.name},E,{setup:e}):e}const Ct=e=>!!e.type.__asyncLoader,NA=e=>e.type.__isKeepAlive;function CI(e,E){aA(e,"a",E)}function lI(e,E){aA(e,"da",E)}function aA(e,E,t=he){const T=e.__wdc||(e.__wdc=()=>{let s=t;for(;s;){if(s.isDeactivated)return;s=s.parent}return e()});if(CT(E,T,t),t){let s=t.parent;for(;s&&s.parent;)NA(s.parent.vnode)&&LI(T,E,t,s),s=s.parent}}function LI(e,E,t,T){const s=CT(E,e,T,!0);CA(()=>{_s(T[E],s)},t)}function CT(e,E,t=he,T=!1){if(t){const s=t[e]||(t[e]=[]),R=E.__weh||(E.__weh=(...r)=>{if(t.isUnmounted)return;Et(),QE(t);const A=Je(E,t,e,r);return GE(),tt(),A});return T?s.unshift(R):s.push(R),R}}const nE=e=>(E,t=he)=>(!Ht||e==="sp")&&CT(e,(...T)=>E(...T),t),_A=nE("bm"),lT=nE("m"),cI=nE("bu"),uI=nE("u"),PI=nE("bum"),CA=nE("um"),DI=nE("sp"),MI=nE("rtg"),fI=nE("rtc");function UI(e,E=he){CT("ec",e,E)}function tE(e,E,t,T){let s;const R=t&&t[T];if(Z(e)||Me(e)){s=new Array(e.length);for(let r=0,A=e.length;r<A;r++)s[r]=E(e[r],r,void 0,R&&R[r])}else if(typeof e=="number"){s=new Array(e);for(let r=0;r<e;r++)s[r]=E(r+1,r,void 0,R&&R[r])}else if(_e(e))if(e[Symbol.iterator])s=Array.from(e,(r,A)=>E(r,A,void 0,R&&R[A]));else{const r=Object.keys(e);s=new Array(r.length);for(let A=0,S=r.length;A<S;A++){const n=r[A];s[A]=E(e[n],n,A,R&&R[A])}}else s=[];return t&&(t[T]=s),s}function lA(e,E,t={},T,s){if(Be.isCE||Be.parent&&Ct(Be.parent)&&Be.parent.isCE)return E!=="default"&&(t.name=E),Ne("slot",t,T&&T());let R=e[E];R&&R._c&&(R._d=!1),Y();const r=R&&LA(R(t)),A=De(ue,{key:t.key||r&&r.key||`_${E}`},r||(T?T():[]),r&&e._===1?64:-2);return!s&&A.scopeId&&(A.slotScopeIds=[A.scopeId+"-s"]),R&&R._c&&(R._d=!0),A}function LA(e){return e.some(E=>eT(E)?!(E.type===LE||E.type===ue&&!LA(E.children)):!0)?e:null}const JT=e=>e?GA(e)?ms(e)||e.proxy:JT(e.parent):null,lt=Ge(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>JT(e.parent),$root:e=>JT(e.root),$emit:e=>e.emit,$options:e=>Us(e),$forceUpdate:e=>e.f||(e.f=()=>fs(e.update)),$nextTick:e=>e.n||(e.n=RA.bind(e.proxy)),$watch:e=>_I.bind(e)}),BT=(e,E)=>e!==ae&&!e.__isScriptSetup&&re(e,E),pI={get({_:e},E){const{ctx:t,setupState:T,data:s,props:R,accessCache:r,type:A,appContext:S}=e;let n;if(E[0]!=="$"){const f=r[E];if(f!==void 0)switch(f){case 1:return T[E];case 2:return s[E];case 4:return t[E];case 3:return R[E]}else{if(BT(T,E))return r[E]=1,T[E];if(s!==ae&&re(s,E))return r[E]=2,s[E];if((n=e.propsOptions[0])&&re(n,E))return r[E]=3,R[E];if(t!==ae&&re(t,E))return r[E]=4,t[E];qT&&(r[E]=0)}}const O=lt[E];let i,o;if(O)return E==="$attrs"&&ye(e,"get",E),O(e);if((i=A.__cssModules)&&(i=i[E]))return i;if(t!==ae&&re(t,E))return r[E]=4,t[E];if(o=S.config.globalProperties,re(o,E))return o[E]},set({_:e},E,t){const{data:T,setupState:s,ctx:R}=e;return BT(s,E)?(s[E]=t,!0):T!==ae&&re(T,E)?(T[E]=t,!0):re(e.props,E)||E[0]==="$"&&E.slice(1)in e?!1:(R[E]=t,!0)},has({_:{data:e,setupState:E,accessCache:t,ctx:T,appContext:s,propsOptions:R}},r){let A;return!!t[r]||e!==ae&&re(e,r)||BT(E,r)||(A=R[0])&&re(A,r)||re(T,r)||re(lt,r)||re(s.config.globalProperties,r)},defineProperty(e,E,t){return t.get!=null?e._.accessCache[E]=0:re(t,"value")&&this.set(e,E,t.value,null),Reflect.defineProperty(e,E,t)}};function sR(e){return Z(e)?e.reduce((E,t)=>(E[t]=null,E),{}):e}let qT=!0;function dI(e){const E=Us(e),t=e.proxy,T=e.ctx;qT=!1,E.beforeCreate&&RR(E.beforeCreate,e,"bc");const{data:s,computed:R,methods:r,watch:A,provide:S,inject:n,created:O,beforeMount:i,mounted:o,beforeUpdate:f,updated:p,activated:F,deactivated:x,beforeDestroy:$,beforeUnmount:K,destroyed:V,unmounted:v,render:Te,renderTracked:Ce,renderTriggered:Re,errorCaptured:z,serverPrefetch:J,expose:_,inheritAttrs:c,components:l,directives:b,filters:w}=E;if(n&&hI(n,T,null),r)for(const L in r){const h=r[L];te(h)&&(T[L]=h.bind(t))}if(s){const L=s.call(t,t);_e(L)&&(e.data=gE(L))}if(qT=!0,R)for(const L in R){const h=R[L],ee=te(h)?h.bind(t,t):te(h.get)?h.get.bind(t,t):eE,ne=!te(h)&&te(h.set)?h.set.bind(t):eE,Ie=ze({get:ee,set:ne});Object.defineProperty(T,L,{enumerable:!0,configurable:!0,get:()=>Ie.value,set:ce=>Ie.value=ce})}if(A)for(const L in A)cA(A[L],T,t,L);if(S){const L=te(S)?S.call(t):S;Reflect.ownKeys(L).forEach(h=>{FI(h,L[h])})}O&&RR(O,e,"c");function Q(L,h){Z(h)?h.forEach(ee=>L(ee.bind(t))):h&&L(h.bind(t))}if(Q(_A,i),Q(lT,o),Q(cI,f),Q(uI,p),Q(CI,F),Q(lI,x),Q(UI,z),Q(fI,Ce),Q(MI,Re),Q(PI,K),Q(CA,v),Q(DI,J),Z(_))if(_.length){const L=e.exposed||(e.exposed={});_.forEach(h=>{Object.defineProperty(L,h,{get:()=>t[h],set:ee=>t[h]=ee})})}else e.exposed||(e.exposed={});Te&&e.render===eE&&(e.render=Te),c!=null&&(e.inheritAttrs=c),l&&(e.components=l),b&&(e.directives=b)}function hI(e,E,t=eE){Z(e)&&(e=jT(e));for(const T in e){const s=e[T];let R;_e(s)?"default"in s?R=Lt(s.from||T,s.default,!0):R=Lt(s.from||T):R=Lt(s),fe(R)?Object.defineProperty(E,T,{enumerable:!0,configurable:!0,get:()=>R.value,set:r=>R.value=r}):E[T]=R}}function RR(e,E,t){Je(Z(e)?e.map(T=>T.bind(E.proxy)):e.bind(E.proxy),E,t)}function cA(e,E,t,T){const s=T.includes(".")?oA(t,T):()=>t[T];if(Me(e)){const R=E[e];te(R)&&JE(s,R)}else if(te(e))JE(s,e.bind(t));else if(_e(e))if(Z(e))e.forEach(R=>cA(R,E,t,T));else{const R=te(e.handler)?e.handler.bind(t):E[e.handler];te(R)&&JE(s,R,e)}}function Us(e){const E=e.type,{mixins:t,extends:T}=E,{mixins:s,optionsCache:R,config:{optionMergeStrategies:r}}=e.appContext,A=R.get(E);let S;return A?S=A:!s.length&&!t&&!T?S=E:(S={},s.length&&s.forEach(n=>zt(S,n,r,!0)),zt(S,E,r)),_e(E)&&R.set(E,S),S}function zt(e,E,t,T=!1){const{mixins:s,extends:R}=E;R&&zt(e,R,t,!0),s&&s.forEach(r=>zt(e,r,t,!0));for(const r in E)if(!(T&&r==="expose")){const A=GI[r]||t&&t[r];e[r]=A?A(e[r],E[r]):E[r]}return e}const GI={data:rR,props:AR,emits:AR,methods:at,computed:at,beforeCreate:Fe,created:Fe,beforeMount:Fe,mounted:Fe,beforeUpdate:Fe,updated:Fe,beforeDestroy:Fe,beforeUnmount:Fe,destroyed:Fe,unmounted:Fe,activated:Fe,deactivated:Fe,errorCaptured:Fe,serverPrefetch:Fe,components:at,directives:at,watch:mI,provide:rR,inject:HI};function rR(e,E){return E?e?function(){return Ge(te(e)?e.call(this,this):e,te(E)?E.call(this,this):E)}:E:e}function HI(e,E){return at(jT(e),jT(E))}function jT(e){if(Z(e)){const E={};for(let t=0;t<e.length;t++)E[e[t]]=e[t];return E}return e}function Fe(e,E){return e?[...new Set([].concat(e,E))]:E}function at(e,E){return e?Ge(Object.create(null),e,E):E}function AR(e,E){return e?Z(e)&&Z(E)?[...new Set([...e,...E])]:Ge(Object.create(null),sR(e),sR(E??{})):E}function mI(e,E){if(!e)return E;if(!E)return e;const t=Ge(Object.create(null),e);for(const T in E)t[T]=Fe(e[T],E[T]);return t}function uA(){return{app:null,config:{isNativeTag:iO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let BI=0;function gI(e,E){return function(T,s=null){te(T)||(T=Ge({},T)),s!=null&&!_e(s)&&(s=null);const R=uA(),r=new WeakSet;let A=!1;const S=R.app={_uid:BI++,_component:T,_props:s,_container:null,_context:R,_instance:null,version:Ii,get config(){return R.config},set config(n){},use(n,...O){return r.has(n)||(n&&te(n.install)?(r.add(n),n.install(S,...O)):te(n)&&(r.add(n),n(S,...O))),S},mixin(n){return R.mixins.includes(n)||R.mixins.push(n),S},component(n,O){return O?(R.components[n]=O,S):R.components[n]},directive(n,O){return O?(R.directives[n]=O,S):R.directives[n]},mount(n,O,i){if(!A){const o=Ne(T,s);return o.appContext=R,O&&E?E(o,n):e(o,n,i),A=!0,S._container=n,n.__vue_app__=S,ms(o.component)||o.component.proxy}},unmount(){A&&(e(null,S._container),delete S._container.__vue_app__)},provide(n,O){return R.provides[n]=O,S},runWithContext(n){ht=S;try{return n()}finally{ht=null}}};return S}}let ht=null;function FI(e,E){if(he){let t=he.provides;const T=he.parent&&he.parent.provides;T===t&&(t=he.provides=Object.create(T)),t[e]=E}}function Lt(e,E,t=!1){const T=he||Be;if(T||ht){const s=T?T.parent==null?T.vnode.appContext&&T.vnode.appContext.provides:T.parent.provides:ht._context.provides;if(s&&e in s)return s[e];if(arguments.length>1)return t&&te(E)?E.call(T&&T.proxy):E}}function bI(){return!!(he||Be||ht)}function YI(e,E,t,T=!1){const s={},R={};jt(R,cT,1),e.propsDefaults=Object.create(null),PA(e,E,s,R);for(const r in e.propsOptions[0])r in s||(s[r]=void 0);t?e.props=T?s:JO(s):e.type.props?e.props=s:e.props=R,e.attrs=R}function vI(e,E,t,T){const{props:s,attrs:R,vnode:{patchFlag:r}}=e,A=Ae(s),[S]=e.propsOptions;let n=!1;if((T||r>0)&&!(r&16)){if(r&8){const O=e.vnode.dynamicProps;for(let i=0;i<O.length;i++){let o=O[i];if(aT(e.emitsOptions,o))continue;const f=E[o];if(S)if(re(R,o))f!==R[o]&&(R[o]=f,n=!0);else{const p=EE(o);s[p]=kT(S,A,p,f,e,!1)}else f!==R[o]&&(R[o]=f,n=!0)}}}else{PA(e,E,s,R)&&(n=!0);let O;for(const i in A)(!E||!re(E,i)&&((O=et(i))===i||!re(E,O)))&&(S?t&&(t[i]!==void 0||t[O]!==void 0)&&(s[i]=kT(S,A,i,void 0,e,!0)):delete s[i]);if(R!==A)for(const i in R)(!E||!re(E,i))&&(delete R[i],n=!0)}n&&AE(e,"set","$attrs")}function PA(e,E,t,T){const[s,R]=e.propsOptions;let r=!1,A;if(E)for(let S in E){if(wt(S))continue;const n=E[S];let O;s&&re(s,O=EE(S))?!R||!R.includes(O)?t[O]=n:(A||(A={}))[O]=n:aT(e.emitsOptions,S)||(!(S in T)||n!==T[S])&&(T[S]=n,r=!0)}if(R){const S=Ae(t),n=A||ae;for(let O=0;O<R.length;O++){const i=R[O];t[i]=kT(s,S,i,n[i],e,!re(n,i))}}return r}function kT(e,E,t,T,s,R){const r=e[t];if(r!=null){const A=re(r,"default");if(A&&T===void 0){const S=r.default;if(r.type!==Function&&!r.skipFactory&&te(S)){const{propsDefaults:n}=s;t in n?T=n[t]:(QE(s),T=n[t]=S.call(null,E),GE())}else T=S}r[0]&&(R&&!A?T=!1:r[1]&&(T===""||T===et(t))&&(T=!0))}return T}function DA(e,E,t=!1){const T=E.propsCache,s=T.get(e);if(s)return s;const R=e.props,r={},A=[];let S=!1;if(!te(e)){const O=i=>{S=!0;const[o,f]=DA(i,E,!0);Ge(r,o),f&&A.push(...f)};!t&&E.mixins.length&&E.mixins.forEach(O),e.extends&&O(e.extends),e.mixins&&e.mixins.forEach(O)}if(!R&&!S)return _e(e)&&T.set(e,wE),wE;if(Z(R))for(let O=0;O<R.length;O++){const i=EE(R[O]);nR(i)&&(r[i]=ae)}else if(R)for(const O in R){const i=EE(O);if(nR(i)){const o=R[O],f=r[i]=Z(o)||te(o)?{type:o}:Ge({},o);if(f){const p=iR(Boolean,f.type),F=iR(String,f.type);f[0]=p>-1,f[1]=F<0||p<F,(p>-1||re(f,"default"))&&A.push(i)}}}const n=[r,A];return _e(e)&&T.set(e,n),n}function nR(e){return e[0]!=="$"}function SR(e){const E=e&&e.toString().match(/^\s*(function|class) (\w+)/);return E?E[2]:e===null?"null":""}function IR(e,E){return SR(e)===SR(E)}function iR(e,E){return Z(E)?E.findIndex(t=>IR(t,e)):te(E)&&IR(E,e)?0:-1}const MA=e=>e[0]==="_"||e==="$stable",ps=e=>Z(e)?e.map(Qe):[Qe(e)],yI=(e,E,t)=>{if(E._n)return E;const T=TE((...s)=>ps(E(...s)),t);return T._c=!1,T},fA=(e,E,t)=>{const T=e._ctx;for(const s in e){if(MA(s))continue;const R=e[s];if(te(R))E[s]=yI(s,R,T);else if(R!=null){const r=ps(R);E[s]=()=>r}}},UA=(e,E)=>{const t=ps(E);e.slots.default=()=>t},VI=(e,E)=>{if(e.vnode.shapeFlag&32){const t=E._;t?(e.slots=Ae(E),jt(E,"_",t)):fA(E,e.slots={})}else e.slots={},E&&UA(e,E);jt(e.slots,cT,1)},WI=(e,E,t)=>{const{vnode:T,slots:s}=e;let R=!0,r=ae;if(T.shapeFlag&32){const A=E._;A?t&&A===1?R=!1:(Ge(s,E),!t&&A===1&&delete s._):(R=!E.$stable,fA(E,s)),r=E}else E&&(UA(e,E),r={default:1});if(R)for(const A in s)!MA(A)&&r[A]==null&&delete s[A]};function QT(e,E,t,T,s=!1){if(Z(e)){e.forEach((o,f)=>QT(o,E&&(Z(E)?E[f]:E),t,T,s));return}if(Ct(T)&&!s)return;const R=T.shapeFlag&4?ms(T.component)||T.component.proxy:T.el,r=s?null:R,{i:A,r:S}=e,n=E&&E.r,O=A.refs===ae?A.refs={}:A.refs,i=A.setupState;if(n!=null&&n!==S&&(Me(n)?(O[n]=null,re(i,n)&&(i[n]=null)):fe(n)&&(n.value=null)),te(S))CE(S,A,12,[r,O]);else{const o=Me(S),f=fe(S);if(o||f){const p=()=>{if(e.f){const F=o?re(i,S)?i[S]:O[S]:S.value;s?Z(F)&&_s(F,R):Z(F)?F.includes(R)||F.push(R):o?(O[S]=[R],re(i,S)&&(i[S]=O[S])):(S.value=[R],e.k&&(O[e.k]=S.value))}else o?(O[S]=r,re(i,S)&&(i[S]=r)):f&&(S.value=r,e.k&&(O[e.k]=r))};r?(p.id=-1,ve(p,t)):p()}}}const ve=aI;function XI(e){return xI(e)}function xI(e,E){const t=XT();t.__VUE__=!0;const{insert:T,remove:s,patchProp:R,createElement:r,createText:A,createComment:S,setText:n,setElementText:O,parentNode:i,nextSibling:o,setScopeId:f=eE,insertStaticContent:p}=e,F=(I,N,C,D=null,P=null,G=null,g=!1,a=null,H=!!N.dynamicChildren)=>{if(I===N)return;I&&!It(I,N)&&(D=uE(I),ce(I,P,G,!0),I=null),N.patchFlag===-2&&(H=!1,N.dynamicChildren=null);const{type:u,ref:m,shapeFlag:y}=N;switch(u){case LT:x(I,N,C,D);break;case LE:$(I,N,C,D);break;case gT:I==null&&K(N,C,D,g);break;case ue:l(I,N,C,D,P,G,g,a,H);break;default:y&1?Te(I,N,C,D,P,G,g,a,H):y&6?b(I,N,C,D,P,G,g,a,H):(y&64||y&128)&&u.process(I,N,C,D,P,G,g,a,H,sE)}m!=null&&P&&QT(m,I&&I.ref,G,N||I,!N)},x=(I,N,C,D)=>{if(I==null)T(N.el=A(N.children),C,D);else{const P=N.el=I.el;N.children!==I.children&&n(P,N.children)}},$=(I,N,C,D)=>{I==null?T(N.el=S(N.children||""),C,D):N.el=I.el},K=(I,N,C,D)=>{[I.el,I.anchor]=p(I.children,N,C,D,I.el,I.anchor)},V=({el:I,anchor:N},C,D)=>{let P;for(;I&&I!==N;)P=o(I),T(I,C,D),I=P;T(N,C,D)},v=({el:I,anchor:N})=>{let C;for(;I&&I!==N;)C=o(I),s(I),I=C;s(N)},Te=(I,N,C,D,P,G,g,a,H)=>{g=g||N.type==="svg",I==null?Ce(N,C,D,P,G,g,a,H):J(I,N,P,G,g,a,H)},Ce=(I,N,C,D,P,G,g,a)=>{let H,u;const{type:m,props:y,shapeFlag:W,transition:j,dirs:se}=I;if(H=I.el=r(I.type,G,y&&y.is,y),W&8?O(H,I.children):W&16&&z(I.children,H,null,D,P,G&&m!=="foreignObject",g,a),se&&DE(I,null,D,"created"),Re(H,I,I.scopeId,g,D),y){for(const d in y)d!=="value"&&!wt(d)&&R(H,d,null,y[d],G,I.children,D,P,Pe);"value"in y&&R(H,"value",null,y.value),(u=y.onVnodeBeforeMount)&&ke(u,D,I)}se&&DE(I,null,D,"beforeMount");const U=wI(P,j);U&&j.beforeEnter(H),T(H,N,C),((u=y&&y.onVnodeMounted)||U||se)&&ve(()=>{u&&ke(u,D,I),U&&j.enter(H),se&&DE(I,null,D,"mounted")},P)},Re=(I,N,C,D,P)=>{if(C&&f(I,C),D)for(let G=0;G<D.length;G++)f(I,D[G]);if(P){let G=P.subTree;if(N===G){const g=P.vnode;Re(I,g,g.scopeId,g.slotScopeIds,P.parent)}}},z=(I,N,C,D,P,G,g,a,H=0)=>{for(let u=H;u<I.length;u++){const m=I[u]=a?iE(I[u]):Qe(I[u]);F(null,m,N,C,D,P,G,g,a)}},J=(I,N,C,D,P,G,g)=>{const a=N.el=I.el;let{patchFlag:H,dynamicChildren:u,dirs:m}=N;H|=I.patchFlag&16;const y=I.props||ae,W=N.props||ae;let j;C&&ME(C,!1),(j=W.onVnodeBeforeUpdate)&&ke(j,C,N,I),m&&DE(N,I,C,"beforeUpdate"),C&&ME(C,!0);const se=P&&N.type!=="foreignObject";if(u?_(I.dynamicChildren,u,a,C,D,se,G):g||h(I,N,a,null,C,D,se,G,!1),H>0){if(H&16)c(a,N,y,W,C,D,P);else if(H&2&&y.class!==W.class&&R(a,"class",null,W.class,P),H&4&&R(a,"style",y.style,W.style,P),H&8){const U=N.dynamicProps;for(let d=0;d<U.length;d++){const X=U[d],Ee=y[X],le=W[X];(le!==Ee||X==="value")&&R(a,X,Ee,le,P,I.children,C,D,Pe)}}H&1&&I.children!==N.children&&O(a,N.children)}else!g&&u==null&&c(a,N,y,W,C,D,P);((j=W.onVnodeUpdated)||m)&&ve(()=>{j&&ke(j,C,N,I),m&&DE(N,I,C,"updated")},D)},_=(I,N,C,D,P,G,g)=>{for(let a=0;a<N.length;a++){const H=I[a],u=N[a],m=H.el&&(H.type===ue||!It(H,u)||H.shapeFlag&70)?i(H.el):C;F(H,u,m,null,D,P,G,g,!0)}},c=(I,N,C,D,P,G,g)=>{if(C!==D){if(C!==ae)for(const a in C)!wt(a)&&!(a in D)&&R(I,a,C[a],null,g,N.children,P,G,Pe);for(const a in D){if(wt(a))continue;const H=D[a],u=C[a];H!==u&&a!=="value"&&R(I,a,u,H,g,N.children,P,G,Pe)}"value"in D&&R(I,"value",C.value,D.value)}},l=(I,N,C,D,P,G,g,a,H)=>{const u=N.el=I?I.el:A(""),m=N.anchor=I?I.anchor:A("");let{patchFlag:y,dynamicChildren:W,slotScopeIds:j}=N;j&&(a=a?a.concat(j):j),I==null?(T(u,C,D),T(m,C,D),z(N.children,C,m,P,G,g,a,H)):y>0&&y&64&&W&&I.dynamicChildren?(_(I.dynamicChildren,W,C,P,G,g,a),(N.key!=null||P&&N===P.subTree)&&ds(I,N,!0)):h(I,N,C,m,P,G,g,a,H)},b=(I,N,C,D,P,G,g,a,H)=>{N.slotScopeIds=a,I==null?N.shapeFlag&512?P.ctx.activate(N,C,D,g,H):w(N,C,D,P,G,g,H):ie(I,N,H)},w=(I,N,C,D,P,G,g)=>{const a=I.component=ti(I,D,P);if(NA(I)&&(a.ctx.renderer=sE),Ti(a),a.asyncDep){if(P&&P.registerDep(a,Q),!I.el){const H=a.subTree=Ne(LE);$(null,H,N,C)}return}Q(a,I,N,C,P,G,g)},ie=(I,N,C)=>{const D=N.component=I.component;if(OI(I,N,C))if(D.asyncDep&&!D.asyncResolved){L(D,N,C);return}else D.next=N,sI(D.update),D.update();else N.el=I.el,D.vnode=N},Q=(I,N,C,D,P,G,g)=>{const a=()=>{if(I.isMounted){let{next:m,bu:y,u:W,parent:j,vnode:se}=I,U=m,d;ME(I,!1),m?(m.el=se.el,L(I,m,g)):m=se,y&&GT(y),(d=m.props&&m.props.onVnodeBeforeUpdate)&&ke(d,j,m,se),ME(I,!0);const X=mT(I),Ee=I.subTree;I.subTree=X,F(Ee,X,i(Ee.el),uE(Ee),I,P,G),m.el=X.el,U===null&&II(I,X.el),W&&ve(W,P),(d=m.props&&m.props.onVnodeUpdated)&&ve(()=>ke(d,j,m,se),P)}else{let m;const{el:y,props:W}=N,{bm:j,m:se,parent:U}=I,d=Ct(N);if(ME(I,!1),j&&GT(j),!d&&(m=W&&W.onVnodeBeforeMount)&&ke(m,U,N),ME(I,!0),y&&Ot){const X=()=>{I.subTree=mT(I),Ot(y,I.subTree,I,P,null)};d?N.type.__asyncLoader().then(()=>!I.isUnmounted&&X()):X()}else{const X=I.subTree=mT(I);F(null,X,C,D,I,P,G),N.el=X.el}if(se&&ve(se,P),!d&&(m=W&&W.onVnodeMounted)){const X=N;ve(()=>ke(m,U,X),P)}(N.shapeFlag&256||U&&Ct(U.vnode)&&U.vnode.shapeFlag&256)&&I.a&&ve(I.a,P),I.isMounted=!0,N=C=D=null}},H=I.effect=new Ls(a,()=>fs(u),I.scope),u=I.update=()=>H.run();u.id=I.uid,ME(I,!0),u()},L=(I,N,C)=>{N.component=I;const D=I.vnode.props;I.vnode=N,I.next=null,vI(I,N.props,D,C),WI(I,N.children,C),Et(),ER(I),tt()},h=(I,N,C,D,P,G,g,a,H=!1)=>{const u=I&&I.children,m=I?I.shapeFlag:0,y=N.children,{patchFlag:W,shapeFlag:j}=N;if(W>0){if(W&128){ne(u,y,C,D,P,G,g,a,H);return}else if(W&256){ee(u,y,C,D,P,G,g,a,H);return}}j&8?(m&16&&Pe(u,P,G),y!==u&&O(C,y)):m&16?j&16?ne(u,y,C,D,P,G,g,a,H):Pe(u,P,G,!0):(m&8&&O(C,""),j&16&&z(y,C,D,P,G,g,a,H))},ee=(I,N,C,D,P,G,g,a,H)=>{I=I||wE,N=N||wE;const u=I.length,m=N.length,y=Math.min(u,m);let W;for(W=0;W<y;W++){const j=N[W]=H?iE(N[W]):Qe(N[W]);F(I[W],j,C,null,P,G,g,a,H)}u>m?Pe(I,P,G,!0,!1,y):z(N,C,D,P,G,g,a,H,y)},ne=(I,N,C,D,P,G,g,a,H)=>{let u=0;const m=N.length;let y=I.length-1,W=m-1;for(;u<=y&&u<=W;){const j=I[u],se=N[u]=H?iE(N[u]):Qe(N[u]);if(It(j,se))F(j,se,C,null,P,G,g,a,H);else break;u++}for(;u<=y&&u<=W;){const j=I[y],se=N[W]=H?iE(N[W]):Qe(N[W]);if(It(j,se))F(j,se,C,null,P,G,g,a,H);else break;y--,W--}if(u>y){if(u<=W){const j=W+1,se=j<m?N[j].el:D;for(;u<=W;)F(null,N[u]=H?iE(N[u]):Qe(N[u]),C,se,P,G,g,a,H),u++}}else if(u>W)for(;u<=y;)ce(I[u],P,G,!0),u++;else{const j=u,se=u,U=new Map;for(u=se;u<=W;u++){const Ve=N[u]=H?iE(N[u]):Qe(N[u]);Ve.key!=null&&U.set(Ve.key,u)}let d,X=0;const Ee=W-se+1;let le=!1,Xe=0;const PE=new Array(Ee);for(u=0;u<Ee;u++)PE[u]=0;for(u=j;u<=y;u++){const Ve=I[u];if(X>=Ee){ce(Ve,P,G,!0);continue}let je;if(Ve.key!=null)je=U.get(Ve.key);else for(d=se;d<=W;d++)if(PE[d-se]===0&&It(Ve,N[d])){je=d;break}je===void 0?ce(Ve,P,G,!0):(PE[je-se]=u+1,je>=Xe?Xe=je:le=!0,F(Ve,N[je],C,null,P,G,g,a,H),X++)}const Ft=le?KI(PE):wE;for(d=Ft.length-1,u=Ee-1;u>=0;u--){const Ve=se+u,je=N[Ve],ys=Ve+1<m?N[Ve+1].el:D;PE[u]===0?F(null,je,C,ys,P,G,g,a,H):le&&(d<0||u!==Ft[d]?Ie(je,C,ys,2):d--)}}},Ie=(I,N,C,D,P=null)=>{const{el:G,type:g,transition:a,children:H,shapeFlag:u}=I;if(u&6){Ie(I.component.subTree,N,C,D);return}if(u&128){I.suspense.move(N,C,D);return}if(u&64){g.move(I,N,C,sE);return}if(g===ue){T(G,N,C);for(let y=0;y<H.length;y++)Ie(H[y],N,C,D);T(I.anchor,N,C);return}if(g===gT){V(I,N,C);return}if(D!==2&&u&1&&a)if(D===0)a.beforeEnter(G),T(G,N,C),ve(()=>a.enter(G),P);else{const{leave:y,delayLeave:W,afterLeave:j}=a,se=()=>T(G,N,C),U=()=>{y(G,()=>{se(),j&&j()})};W?W(G,se,U):U()}else T(G,N,C)},ce=(I,N,C,D=!1,P=!1)=>{const{type:G,props:g,ref:a,children:H,dynamicChildren:u,shapeFlag:m,patchFlag:y,dirs:W}=I;if(a!=null&&QT(a,null,C,I,!0),m&256){N.ctx.deactivate(I);return}const j=m&1&&W,se=!Ct(I);let U;if(se&&(U=g&&g.onVnodeBeforeUnmount)&&ke(U,N,I),m&6)ge(I.component,C,D);else{if(m&128){I.suspense.unmount(C,D);return}j&&DE(I,null,N,"beforeUnmount"),m&64?I.type.remove(I,N,C,P,sE,D):u&&(G!==ue||y>0&&y&64)?Pe(u,N,C,!1,!0):(G===ue&&y&384||!P&&m&16)&&Pe(H,N,C),D&&xe(I)}(se&&(U=g&&g.onVnodeUnmounted)||j)&&ve(()=>{U&&ke(U,N,I),j&&DE(I,null,N,"unmounted")},C)},xe=I=>{const{type:N,el:C,anchor:D,transition:P}=I;if(N===ue){YE(C,D);return}if(N===gT){v(I);return}const G=()=>{s(C),P&&!P.persisted&&P.afterLeave&&P.afterLeave()};if(I.shapeFlag&1&&P&&!P.persisted){const{leave:g,delayLeave:a}=P,H=()=>g(C,G);a?a(I.el,G,H):H()}else G()},YE=(I,N)=>{let C;for(;I!==N;)C=o(I),s(I),I=C;s(N)},ge=(I,N,C)=>{const{bum:D,scope:P,update:G,subTree:g,um:a}=I;D&&GT(D),P.stop(),G&&(G.active=!1,ce(g,I,N,C)),a&&ve(a,N),ve(()=>{I.isUnmounted=!0},N),N&&N.pendingBranch&&!N.isUnmounted&&I.asyncDep&&!I.asyncResolved&&I.suspenseId===N.pendingId&&(N.deps--,N.deps===0&&N.resolve())},Pe=(I,N,C,D=!1,P=!1,G=0)=>{for(let g=G;g<I.length;g++)ce(I[g],N,C,D,P)},uE=I=>I.shapeFlag&6?uE(I.component.subTree):I.shapeFlag&128?I.suspense.next():o(I.anchor||I.el),nt=(I,N,C)=>{I==null?N._vnode&&ce(N._vnode,null,null,!0):F(N._vnode||null,I,N,null,null,null,C),ER(),AA(),N._vnode=I},sE={p:F,um:ce,m:Ie,r:xe,mt:w,mc:z,pc:h,pbc:_,n:uE,o:e};let St,Ot;return E&&([St,Ot]=E(sE)),{render:nt,hydrate:St,createApp:gI(nt,St)}}function ME({effect:e,update:E},t){e.allowRecurse=E.allowRecurse=t}function wI(e,E){return(!e||e&&!e.pendingBranch)&&E&&!E.persisted}function ds(e,E,t=!1){const T=e.children,s=E.children;if(Z(T)&&Z(s))for(let R=0;R<T.length;R++){const r=T[R];let A=s[R];A.shapeFlag&1&&!A.dynamicChildren&&((A.patchFlag<=0||A.patchFlag===32)&&(A=s[R]=iE(s[R]),A.el=r.el),t||ds(r,A)),A.type===LT&&(A.el=r.el)}}function KI(e){const E=e.slice(),t=[0];let T,s,R,r,A;const S=e.length;for(T=0;T<S;T++){const n=e[T];if(n!==0){if(s=t[t.length-1],e[s]<n){E[T]=s,t.push(T);continue}for(R=0,r=t.length-1;R<r;)A=R+r>>1,e[t[A]]<n?R=A+1:r=A;n<e[t[R]]&&(R>0&&(E[T]=t[R-1]),t[R]=T)}}for(R=t.length,r=t[R-1];R-- >0;)t[R]=r,r=E[r];return t}const $I=e=>e.__isTeleport,ct=e=>e&&(e.disabled||e.disabled===""),oR=e=>typeof SVGElement<"u"&&e instanceof SVGElement,ZT=(e,E)=>{const t=e&&e.to;return Me(t)?E?E(t):null:t},JI={name:"Teleport",__isTeleport:!0,process(e,E,t,T,s,R,r,A,S,n){const{mc:O,pc:i,pbc:o,o:{insert:f,querySelector:p,createText:F,createComment:x}}=n,$=ct(E.props);let{shapeFlag:K,children:V,dynamicChildren:v}=E;if(e==null){const Te=E.el=F(""),Ce=E.anchor=F("");f(Te,t,T),f(Ce,t,T);const Re=E.target=ZT(E.props,p),z=E.targetAnchor=F("");Re&&(f(z,Re),r=r||oR(Re));const J=(_,c)=>{K&16&&O(V,_,c,s,R,r,A,S)};$?J(t,Ce):Re&&J(Re,z)}else{E.el=e.el;const Te=E.anchor=e.anchor,Ce=E.target=e.target,Re=E.targetAnchor=e.targetAnchor,z=ct(e.props),J=z?t:Ce,_=z?Te:Re;if(r=r||oR(Ce),v?(o(e.dynamicChildren,v,J,s,R,r,A),ds(e,E,!0)):S||i(e,E,J,_,s,R,r,A,!1),$)z?E.props&&e.props&&E.props.to!==e.props.to&&(E.props.to=e.props.to):xt(E,t,Te,n,1);else if((E.props&&E.props.to)!==(e.props&&e.props.to)){const c=E.target=ZT(E.props,p);c&&xt(E,c,null,n,0)}else z&&xt(E,Ce,Re,n,1)}pA(E)},remove(e,E,t,T,{um:s,o:{remove:R}},r){const{shapeFlag:A,children:S,anchor:n,targetAnchor:O,target:i,props:o}=e;if(i&&R(O),r&&R(n),A&16){const f=r||!ct(o);for(let p=0;p<S.length;p++){const F=S[p];s(F,E,t,f,!!F.dynamicChildren)}}},move:xt,hydrate:qI};function xt(e,E,t,{o:{insert:T},m:s},R=2){R===0&&T(e.targetAnchor,E,t);const{el:r,anchor:A,shapeFlag:S,children:n,props:O}=e,i=R===2;if(i&&T(r,E,t),(!i||ct(O))&&S&16)for(let o=0;o<n.length;o++)s(n[o],E,t,2);i&&T(A,E,t)}function qI(e,E,t,T,s,R,{o:{nextSibling:r,parentNode:A,querySelector:S}},n){const O=E.target=ZT(E.props,S);if(O){const i=O._lpa||O.firstChild;if(E.shapeFlag&16)if(ct(E.props))E.anchor=n(r(e),E,A(e),t,T,s,R),E.targetAnchor=i;else{E.anchor=r(e);let o=i;for(;o;)if(o=r(o),o&&o.nodeType===8&&o.data==="teleport anchor"){E.targetAnchor=o,O._lpa=E.targetAnchor&&r(E.targetAnchor);break}n(i,E,O,t,T,s,R)}pA(E)}return E.anchor&&r(E.anchor)}const jI=JI;function pA(e){const E=e.ctx;if(E&&E.ut){let t=e.children[0].el;for(;t&&t!==e.targetAnchor;)t.nodeType===1&&t.setAttribute("data-v-owner",E.uid),t=t.nextSibling;E.ut()}}const ue=Symbol.for("v-fgt"),LT=Symbol.for("v-txt"),LE=Symbol.for("v-cmt"),gT=Symbol.for("v-stc"),ut=[];let Ke=null;function Y(e=!1){ut.push(Ke=e?null:[])}function kI(){ut.pop(),Ke=ut[ut.length-1]||null}let Gt=1;function NR(e){Gt+=e}function dA(e){return e.dynamicChildren=Gt>0?Ke||wE:null,kI(),Gt>0&&Ke&&Ke.push(e),e}function k(e,E,t,T,s,R){return dA(B(e,E,t,T,s,R,!0))}function De(e,E,t,T,s){return dA(Ne(e,E,t,T,s,!0))}function eT(e){return e?e.__v_isVNode===!0:!1}function It(e,E){return e.type===E.type&&e.key===E.key}const cT="__vInternal",hA=({key:e})=>e??null,Kt=({ref:e,ref_key:E,ref_for:t})=>(typeof e=="number"&&(e=""+e),e!=null?Me(e)||fe(e)||te(e)?{i:Be,r:e,k:E,f:!!t}:e:null);function B(e,E=null,t=null,T=0,s=null,R=e===ue?0:1,r=!1,A=!1){const S={__v_isVNode:!0,__v_skip:!0,type:e,props:E,key:E&&hA(E),ref:E&&Kt(E),scopeId:OA,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:R,patchFlag:T,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:Be};return A?(Gs(S,t),R&128&&e.normalize(S)):t&&(S.shapeFlag|=Me(t)?8:16),Gt>0&&!r&&Ke&&(S.patchFlag>0||R&6)&&S.patchFlag!==32&&Ke.push(S),S}const Ne=QI;function QI(e,E=null,t=null,T=0,s=null,R=!1){if((!e||e===iI)&&(e=LE),eT(e)){const A=kE(e,E,!0);return t&&Gs(A,t),Gt>0&&!R&&Ke&&(A.shapeFlag&6?Ke[Ke.indexOf(e)]=A:Ke.push(A)),A.patchFlag|=-2,A}if(ni(e)&&(e=e.__vccOpts),E){E=ZI(E);let{class:A,style:S}=E;A&&!Me(A)&&(E.class=$e(A)),_e(S)&&(eA(S)&&!Z(S)&&(S=Ge({},S)),E.style=IT(S))}const r=Me(e)?1:NI(e)?128:$I(e)?64:_e(e)?4:te(e)?2:0;return B(e,E,t,T,s,r,R,!0)}function ZI(e){return e?eA(e)||cT in e?Ge({},e):e:null}function kE(e,E,t=!1){const{props:T,ref:s,patchFlag:R,children:r}=e,A=E?zI(T||{},E):T;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:A,key:A&&hA(A),ref:E&&E.ref?t&&s?Z(s)?s.concat(Kt(E)):[s,Kt(E)]:Kt(E):s,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:r,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:E&&e.type!==ue?R===-1?16:R|16:R,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&kE(e.ssContent),ssFallback:e.ssFallback&&kE(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function hs(e=" ",E=0){return Ne(LT,null,e,E)}function Oe(e="",E=!1){return E?(Y(),De(LE,null,e)):Ne(LE,null,e)}function Qe(e){return e==null||typeof e=="boolean"?Ne(LE):Z(e)?Ne(ue,null,e.slice()):typeof e=="object"?iE(e):Ne(LT,null,String(e))}function iE(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:kE(e)}function Gs(e,E){let t=0;const{shapeFlag:T}=e;if(E==null)E=null;else if(Z(E))t=16;else if(typeof E=="object")if(T&65){const s=E.default;s&&(s._c&&(s._d=!1),Gs(e,s()),s._c&&(s._d=!0));return}else{t=32;const s=E._;!s&&!(cT in E)?E._ctx=Be:s===3&&Be&&(Be.slots._===1?E._=1:(E._=2,e.patchFlag|=1024))}else te(E)?(E={default:E,_ctx:Be},t=32):(E=String(E),T&64?(t=16,E=[hs(E)]):t=8);e.children=E,e.shapeFlag|=t}function zI(...e){const E={};for(let t=0;t<e.length;t++){const T=e[t];for(const s in T)if(s==="class")E.class!==T.class&&(E.class=$e([E.class,T.class]));else if(s==="style")E.style=IT([E.style,T.style]);else if(AT(s)){const R=E[s],r=T[s];r&&R!==r&&!(Z(R)&&R.includes(r))&&(E[s]=R?[].concat(R,r):r)}else s!==""&&(E[s]=T[s])}return E}function ke(e,E,t,T=null){Je(e,E,7,[t,T])}const ei=uA();let Ei=0;function ti(e,E,t){const T=e.type,s=(E?E.appContext:e.appContext)||ei,R={uid:Ei++,vnode:e,type:T,parent:E,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,scope:new Vr(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:E?E.provides:Object.create(s.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:DA(T,s),emitsOptions:SA(T,s),emit:null,emitted:null,propsDefaults:ae,inheritAttrs:T.inheritAttrs,ctx:ae,data:ae,props:ae,attrs:ae,slots:ae,refs:ae,setupState:ae,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return R.ctx={_:R},R.root=E?E.root:R,R.emit=AI.bind(null,R),e.ce&&e.ce(R),R}let he=null,Hs,yE,aR="__VUE_INSTANCE_SETTERS__";(yE=XT()[aR])||(yE=XT()[aR]=[]),yE.push(e=>he=e),Hs=e=>{yE.length>1?yE.forEach(E=>E(e)):yE[0](e)};const QE=e=>{Hs(e),e.scope.on()},GE=()=>{he&&he.scope.off(),Hs(null)};function GA(e){return e.vnode.shapeFlag&4}let Ht=!1;function Ti(e,E=!1){Ht=E;const{props:t,children:T}=e.vnode,s=GA(e);YI(e,t,s,E),VI(e,T);const R=s?si(e,E):void 0;return Ht=!1,R}function si(e,E){const t=e.type;e.accessCache=Object.create(null),e.proxy=oT(new Proxy(e.ctx,pI));const{setup:T}=t;if(T){const s=e.setupContext=T.length>1?ri(e):null;QE(e),Et();const R=CE(T,e,0,[e.props,s]);if(tt(),GE(),Fr(R)){if(R.then(GE,GE),E)return R.then(r=>{_R(e,r,E)}).catch(r=>{NT(r,e,0)});e.asyncDep=R}else _R(e,R,E)}else HA(e,E)}function _R(e,E,t){te(E)?e.type.__ssrInlineRender?e.ssrRender=E:e.render=E:_e(E)&&(e.setupState=TA(E)),HA(e,t)}let CR;function HA(e,E,t){const T=e.type;if(!e.render){if(!E&&CR&&!T.render){const s=T.template||Us(e).template;if(s){const{isCustomElement:R,compilerOptions:r}=e.appContext.config,{delimiters:A,compilerOptions:S}=T,n=Ge(Ge({isCustomElement:R,delimiters:A},r),S);T.render=CR(s,n)}}e.render=T.render||eE}{QE(e),Et();try{dI(e)}finally{tt(),GE()}}}function Ri(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(E,t){return ye(e,"get","$attrs"),E[t]}}))}function ri(e){const E=t=>{e.exposed=t||{}};return{get attrs(){return Ri(e)},slots:e.slots,emit:e.emit,expose:E}}function ms(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(TA(oT(e.exposed)),{get(E,t){if(t in E)return E[t];if(t in lt)return lt[t](e)},has(E,t){return t in E||t in lt}}))}function Ai(e,E=!0){return te(e)?e.displayName||e.name:e.name||E&&e.__name}function ni(e){return te(e)&&"__vccOpts"in e}const ze=(e,E)=>EI(e,E,Ht);function mt(e,E,t){const T=arguments.length;return T===2?_e(E)&&!Z(E)?eT(E)?Ne(e,null,[E]):Ne(e,E):Ne(e,null,E):(T>3?t=Array.prototype.slice.call(arguments,2):T===3&&eT(t)&&(t=[t]),Ne(e,E,t))}const Si=Symbol.for("v-scx"),Oi=()=>Lt(Si),Ii="3.3.13",ii="http://www.w3.org/2000/svg",pE=typeof document<"u"?document:null,lR=pE&&pE.createElement("template"),oi={insert:(e,E,t)=>{E.insertBefore(e,t||null)},remove:e=>{const E=e.parentNode;E&&E.removeChild(e)},createElement:(e,E,t,T)=>{const s=E?pE.createElementNS(ii,e):pE.createElement(e,t?{is:t}:void 0);return e==="select"&&T&&T.multiple!=null&&s.setAttribute("multiple",T.multiple),s},createText:e=>pE.createTextNode(e),createComment:e=>pE.createComment(e),setText:(e,E)=>{e.nodeValue=E},setElementText:(e,E)=>{e.textContent=E},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>pE.querySelector(e),setScopeId(e,E){e.setAttribute(E,"")},insertStaticContent(e,E,t,T,s,R){const r=t?t.previousSibling:E.lastChild;if(s&&(s===R||s.nextSibling))for(;E.insertBefore(s.cloneNode(!0),t),!(s===R||!(s=s.nextSibling)););else{lR.innerHTML=T?`<svg>${e}</svg>`:e;const A=lR.content;if(T){const S=A.firstChild;for(;S.firstChild;)A.appendChild(S.firstChild);A.removeChild(S)}E.insertBefore(A,t)}return[r?r.nextSibling:E.firstChild,t?t.previousSibling:E.lastChild]}},Ni=Symbol("_vtc");function ai(e,E,t){const T=e[Ni];T&&(E=(E?[E,...T]:[...T]).join(" ")),E==null?e.removeAttribute("class"):t?e.setAttribute("class",E):e.className=E}const _i=Symbol("_vod"),Ci=Symbol("");function li(e,E,t){const T=e.style,s=Me(t);if(t&&!s){if(E&&!Me(E))for(const R in E)t[R]==null&&zT(T,R,"");for(const R in t)zT(T,R,t[R])}else{const R=T.display;if(s){if(E!==t){const r=T[Ci];r&&(t+=";"+r),T.cssText=t}}else E&&e.removeAttribute("style");_i in e&&(T.display=R)}}const LR=/\s*!important$/;function zT(e,E,t){if(Z(t))t.forEach(T=>zT(e,E,T));else if(t==null&&(t=""),E.startsWith("--"))e.setProperty(E,t);else{const T=Li(e,E);LR.test(t)?e.setProperty(et(T),t.replace(LR,""),"important"):e[T]=t}}const cR=["Webkit","Moz","ms"],FT={};function Li(e,E){const t=FT[E];if(t)return t;let T=EE(E);if(T!=="filter"&&T in e)return FT[E]=T;T=OT(T);for(let s=0;s<cR.length;s++){const R=cR[s]+T;if(R in e)return FT[E]=R}return E}const uR="http://www.w3.org/1999/xlink";function ci(e,E,t,T,s){if(T&&E.startsWith("xlink:"))t==null?e.removeAttributeNS(uR,E.slice(6,E.length)):e.setAttributeNS(uR,E,t);else{const R=DO(E);t==null||R&&!vr(t)?e.removeAttribute(E):e.setAttribute(E,R?"":t)}}function ui(e,E,t,T,s,R,r){if(E==="innerHTML"||E==="textContent"){T&&r(T,s,R),e[E]=t??"";return}const A=e.tagName;if(E==="value"&&A!=="PROGRESS"&&!A.includes("-")){e._value=t;const n=A==="OPTION"?e.getAttribute("value"):e.value,O=t??"";n!==O&&(e.value=O),t==null&&e.removeAttribute(E);return}let S=!1;if(t===""||t==null){const n=typeof e[E];n==="boolean"?t=vr(t):t==null&&n==="string"?(t="",S=!0):n==="number"&&(t=0,S=!0)}try{e[E]=t}catch{}S&&e.removeAttribute(E)}function Pi(e,E,t,T){e.addEventListener(E,t,T)}function Di(e,E,t,T){e.removeEventListener(E,t,T)}const PR=Symbol("_vei");function Mi(e,E,t,T,s=null){const R=e[PR]||(e[PR]={}),r=R[E];if(T&&r)r.value=T;else{const[A,S]=fi(E);if(T){const n=R[E]=di(T,s);Pi(e,A,n,S)}else r&&(Di(e,A,r,S),R[E]=void 0)}}const DR=/(?:Once|Passive|Capture)$/;function fi(e){let E;if(DR.test(e)){E={};let T;for(;T=e.match(DR);)e=e.slice(0,e.length-T[0].length),E[T[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):et(e.slice(2)),E]}let bT=0;const Ui=Promise.resolve(),pi=()=>bT||(Ui.then(()=>bT=0),bT=Date.now());function di(e,E){const t=T=>{if(!T._vts)T._vts=Date.now();else if(T._vts<=t.attached)return;Je(hi(T,t.value),E,5,[T])};return t.value=e,t.attached=pi(),t}function hi(e,E){if(Z(E)){const t=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{t.call(e),e._stopped=!0},E.map(T=>s=>!s._stopped&&T&&T(s))}else return E}const MR=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,Gi=(e,E,t,T,s=!1,R,r,A,S)=>{E==="class"?ai(e,T,s):E==="style"?li(e,t,T):AT(E)?as(E)||Mi(e,E,t,T,r):(E[0]==="."?(E=E.slice(1),!0):E[0]==="^"?(E=E.slice(1),!1):Hi(e,E,T,s))?ui(e,E,T,R,r,A,S):(E==="true-value"?e._trueValue=T:E==="false-value"&&(e._falseValue=T),ci(e,E,T,s))};function Hi(e,E,t,T){if(T)return!!(E==="innerHTML"||E==="textContent"||E in e&&MR(E)&&te(t));if(E==="spellcheck"||E==="draggable"||E==="translate"||E==="form"||E==="list"&&e.tagName==="INPUT"||E==="type"&&e.tagName==="TEXTAREA")return!1;if(E==="width"||E==="height"){const s=e.tagName;if(s==="IMG"||s==="VIDEO"||s==="CANVAS"||s==="SOURCE")return!1}return MR(E)&&Me(t)?!1:E in e}const mi=Ge({patchProp:Gi},oi);let fR;function Bi(){return fR||(fR=XI(mi))}const gi=(...e)=>{const E=Bi().createApp(...e),{mount:t}=E;return E.mount=T=>{const s=Fi(T);if(!s)return;const R=E._component;!te(R)&&!R.render&&!R.template&&(R.template=s.innerHTML),s.innerHTML="";const r=t(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),r},E};function Fi(e){return Me(e)?document.querySelector(e):e}var UR=Ye({props:{code:{type:String,required:!0},language:{type:String,default:""},autodetect:{type:Boolean,default:!0},ignoreIllegals:{type:Boolean,default:!0}},setup:function(e){var E=NE(e.language);JE(function(){return e.language},function(s){E.value=s});var t=ze(function(){return e.autodetect||!E.value}),T=ze(function(){return!t.value&&!_t.getLanguage(E.value)});return{className:ze(function(){return T.value?"":"hljs "+E.value}),highlightedCode:ze(function(){var s;if(T.value)return console.warn('The language "'+E.value+'" you specified could not be found.'),e.code.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;");if(t.value){var R=_t.highlightAuto(e.code);return E.value=(s=R.language)!==null&&s!==void 0?s:"",R.value}return(R=_t.highlight(e.code,{language:E.value,ignoreIllegals:e.ignoreIllegals})).value})}},render:function(){return mt("pre",{},[mt("code",{class:this.className,innerHTML:this.highlightedCode})])}}),bi={install:function(e){e.component("highlightjs",UR)},component:UR},Yi=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let mA;const uT=e=>mA=e,BA=Symbol();function es(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var Pt;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(Pt||(Pt={}));function vi(){const e=Wr(!0),E=e.run(()=>NE({}));let t=[],T=[];const s=oT({install(R){uT(s),s._a=R,R.provide(BA,s),R.config.globalProperties.$pinia=s,T.forEach(r=>t.push(r)),T=[]},use(R){return!this._a&&!Yi?T.push(R):t.push(R),this},_p:t,_a:null,_e:e,_s:new Map,state:E});return s}const gA=()=>{};function pR(e,E,t,T=gA){e.push(E);const s=()=>{const R=e.indexOf(E);R>-1&&(e.splice(R,1),T())};return!t&&Xr()&&fO(s),s}function VE(e,...E){e.slice().forEach(t=>{t(...E)})}const yi=e=>e();function Es(e,E){e instanceof Map&&E instanceof Map&&E.forEach((t,T)=>e.set(T,t)),e instanceof Set&&E instanceof Set&&E.forEach(e.add,e);for(const t in E){if(!E.hasOwnProperty(t))continue;const T=E[t],s=e[t];es(s)&&es(T)&&e.hasOwnProperty(t)&&!fe(T)&&!_E(T)?e[t]=Es(s,T):e[t]=T}return e}const Vi=Symbol();function Wi(e){return!es(e)||!e.hasOwnProperty(Vi)}const{assign:IE}=Object;function Xi(e){return!!(fe(e)&&e.effect)}function xi(e,E,t,T){const{state:s,actions:R,getters:r}=E,A=t.state.value[e];let S;function n(){A||(t.state.value[e]=s?s():{});const O=QO(t.state.value[e]);return IE(O,R,Object.keys(r||{}).reduce((i,o)=>(i[o]=oT(ze(()=>{uT(t);const f=t._s.get(e);return r[o].call(f,f)})),i),{}))}return S=FA(e,n,E,t,T,!0),S}function FA(e,E,t={},T,s,R){let r;const A=IE({actions:{}},t),S={deep:!0};let n,O,i=[],o=[],f;const p=T.state.value[e];!R&&!p&&(T.state.value[e]={}),NE({});let F;function x(z){let J;n=O=!1,typeof z=="function"?(z(T.state.value[e]),J={type:Pt.patchFunction,storeId:e,events:f}):(Es(T.state.value[e],z),J={type:Pt.patchObject,payload:z,storeId:e,events:f});const _=F=Symbol();RA().then(()=>{F===_&&(n=!0)}),O=!0,VE(i,J,T.state.value[e])}const $=R?function(){const{state:J}=t,_=J?J():{};this.$patch(c=>{IE(c,_)})}:gA;function K(){r.stop(),i=[],o=[],T._s.delete(e)}function V(z,J){return function(){uT(T);const _=Array.from(arguments),c=[],l=[];function b(Q){c.push(Q)}function w(Q){l.push(Q)}VE(o,{args:_,name:z,store:Te,after:b,onError:w});let ie;try{ie=J.apply(this&&this.$id===e?this:Te,_)}catch(Q){throw VE(l,Q),Q}return ie instanceof Promise?ie.then(Q=>(VE(c,Q),Q)).catch(Q=>(VE(l,Q),Promise.reject(Q))):(VE(c,ie),ie)}}const v={_p:T,$id:e,$onAction:pR.bind(null,o),$patch:x,$reset:$,$subscribe(z,J={}){const _=pR(i,z,J.detached,()=>c()),c=r.run(()=>JE(()=>T.state.value[e],l=>{(J.flush==="sync"?O:n)&&z({storeId:e,type:Pt.direct,events:f},l)},IE({},S,J)));return _},$dispose:K},Te=gE(v);T._s.set(e,Te);const Re=(T._a&&T._a.runWithContext||yi)(()=>T._e.run(()=>(r=Wr()).run(E)));for(const z in Re){const J=Re[z];if(fe(J)&&!Xi(J)||_E(J))R||(p&&Wi(J)&&(fe(J)?J.value=p[z]:Es(J,p[z])),T.state.value[e][z]=J);else if(typeof J=="function"){const _=V(z,J);Re[z]=_,A.actions[z]=J}}return IE(Te,Re),IE(Ae(Te),Re),Object.defineProperty(Te,"$state",{get:()=>T.state.value[e],set:z=>{x(J=>{IE(J,z)})}}),T._p.forEach(z=>{IE(Te,r.run(()=>z({store:Te,app:T._a,pinia:T,options:A})))}),p&&R&&t.hydrate&&t.hydrate(Te.$state,p),n=!0,O=!0,Te}function bA(e,E,t){let T,s;const R=typeof E=="function";typeof e=="string"?(T=e,s=R?t:E):(s=e,T=e.id);function r(A,S){const n=bI();return A=A||(n?Lt(BA,null):null),A&&uT(A),A=mA,A._s.has(T)||(R?FA(T,E,s,A):xi(T,s,A)),A._s.get(T)}return r.$id=T,r}function wi(e,E){return ts(e,e.childNodes,E)}function ts(e,E,{mode:t="open",delegatesFocus:T=!1}={mode:"open"}){try{const s=e.shadowRoot;if(s!=null){console.error("[shadow] Attach shadow multiple times",e,E,s);return}else{const R=e.attachShadow({mode:t,delegatesFocus:T});return E&&Ki(R,E),R}}catch(s){console.error("[shadow] make shadow-root failed",e,E),console.error(s)}}function Ki(e,E){const t=document.createDocumentFragment();for(const T of E)t.appendChild(T);e.appendChild(t)}const $i=document.createDocumentFragment(),Ts=Ye({props:{media:String,nonce:String},setup(e,{slots:E}){return()=>{var t;return mt("style",{media:e.media,nonce:e.nonce},(t=E.default)==null?void 0:t.call(E))}}}),ET=Ji()(Ye({props:{mode:{type:String,default:"open"},delegatesFocus:{type:Boolean,default:!1},abstract:{type:Boolean,default:!1},tag:{type:String,default:"div"},adoptedStyleSheets:{type:Array}},emits:["error"],setup(e,{slots:E,expose:t,emit:T}){const s=NE(!1),R=NE(),r=NE(),A=NE(),S=ze(()=>A.value??$i),n=gE({shadow_root:A});return t(n),_A(()=>{s.value=e.abstract}),lT(()=>{var O;try{s.value?r.value.parentElement.shadowRoot?A.value=r.value.parentElement.shadowRoot:A.value=ts(r.value.parentElement,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}):A.value=ts(R.value,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}),(O=A.value)==null||O.styleSheets}catch(i){console.error(i),T("error",i)}}),JE([A,()=>e.adoptedStyleSheets],([O,i])=>{if(!(!O||!i))try{O.adoptedStyleSheets=i}catch(o){console.error(o),T("error",o)}}),()=>{var i;const O=mt(jI,{ref:r,to:S.value},[(i=E.default)==null?void 0:i.call(E)]);return s.value?O:mt(e.tag,{ref:R},O)}},install:YA,Style:Ts}));function Ji(){return e=>e}function YA(e){e.component("shadow-root",ET),e.directive("shadow",{beforeMount(E){console.warn("[VueShadowDom] Deprecated v-shadow directive, use <shadow-root> component"),wi(E)}})}var qi={ShadowRoot:ET,ShadowStyle:Ts,shadow_root:ET,shadow_style:Ts,install:YA};const vA="61939c43-bde5-4d65-84c0-adcbc26c9c2e",yA={controller:"DemoController",action:"post_list",params:{controller:"demo",action:"post_list"},format:"html",method:"GET",path:"/post-list",status:200,view_runtime:50.420999876223505,db_runtime:106.45499976817518,duration:802.9069999456406,cpu_time:657.195958,idle_time:145.71104194564055,allocations:1109821},VA={Post:16,PostAuthor:101,Author:101},WA=[{id:"5b12f96df0153917ce3c",title:"ActiveRecord::SchemaMigration Load (6.7ms)",name:"ActiveRecord::SchemaMigration Load",sql:"SELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC ",cached:!1,async:!1,duration:6.7,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/middlewares/track_current_request.rb:17"," `call'"]},{id:"5b12f96df0153917ce3c",title:"Post Load (73.2ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` ORDER BY RAND() LIMIT 16 ",cached:!1,async:!1,duration:73.2,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/controllers/demo_controller.rb:4"," `post_list'"]},{id:"5b12f96df0153917ce3c",title:"PostAuthor Load (8.2ms)",name:"PostAuthor Load",sql:"SELECT `post_authors`.* FROM `post_authors` WHERE `post_authors`.`post_id` IN (4009, 2958, 3783, 178, 2003, 714, 1650, 4358, 3474, 4955, 1658, 3600, 3262, 4945, 3066, 1499) ",cached:!1,async:!1,duration:8.2,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/controllers/demo_controller.rb:4"," `post_list'"]},{id:"5b12f96df0153917ce3c",title:"Author Load (0.9ms)",name:"Author Load",sql:"SELECT `authors`.* FROM `authors` WHERE `authors`.`id` IN (135, 35, 416, 1671, 406, 1810, 183, 372, 1627, 177, 1409, 875, 309, 693, 1344, 1780, 268, 1133, 604, 422, 1640, 1819, 1923, 1674, 1302, 1948, 668, 131, 1919, 1477, 1381, 1960, 1707, 1734, 1487, 1155, 1106, 58, 126, 1491, 917, 938, 583, 1495, 711, 1484, 1212, 1368, 1633, 1481, 1198, 1894, 514, 640, 1974, 1002, 1704, 285, 633, 688, 327, 274, 904, 1006, 1549, 458, 1423, 621, 394, 805, 607, 1016, 485, 713, 518, 280, 1132, 764, 1820, 995, 384, 627, 1715, 596, 408, 1614, 1940, 1066, 1447, 399, 643, 1987, 300, 601, 1465, 1518, 1862, 1154, 807, 171, 1786) ",cached:!1,async:!1,duration:.9,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/controllers/demo_controller.rb:4"," `post_list'"]},{id:"5b12f96df0153917ce3c",title:"Post Count (1.9ms)",name:"Post Count",sql:"SELECT COUNT(*) FROM `posts` ",cached:!1,async:!1,duration:1.9,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/controllers/demo_controller.rb:6"," `block in post_list'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.5ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 4009 ",cached:!1,async:!1,duration:.5,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (1.2ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 2958 ",cached:!1,async:!1,duration:1.2,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.5ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 3783 ",cached:!1,async:!1,duration:.5,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.5ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 178 ",cached:!1,async:!1,duration:.5,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (1.2ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 2003 ",cached:!1,async:!1,duration:1.2,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.6ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 714 ",cached:!1,async:!1,duration:.6,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.6ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 1650 ",cached:!1,async:!1,duration:.6,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.9ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 4358 ",cached:!1,async:!1,duration:.9,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.7ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 3474 ",cached:!1,async:!1,duration:.7,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (1.0ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 4955 ",cached:!1,async:!1,duration:1,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.5ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 1658 ",cached:!1,async:!1,duration:.5,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (5.8ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 3600 ",cached:!1,async:!1,duration:5.8,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (1.3ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 3262 ",cached:!1,async:!1,duration:1.3,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.2ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 4945 ",cached:!1,async:!1,duration:.2,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.5ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 3066 ",cached:!1,async:!1,duration:.5,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Count (0.8ms)",name:"Reaction Count",sql:"SELECT COUNT(*) FROM `reactions` WHERE `reactions`.`post_id` = 1499 ",cached:!1,async:!1,duration:.8,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post_list.html.erb:24"," `block in _app_views_demo_post_list_html_erb__3918563845286415300_26540'"]}],XA=[{id:"6e81fb5b-b8c7-48b8-96a4-721da25c7a2e",class:"WarmupCacheJob",queue:"Inline(default)",args:[4009],successfully_enqueued:!0,scheduled_at:null,logs:["Enqueued WarmupCacheJob (Job ID: 6e81fb5b-b8c7-48b8-96a4-721da25c7a2e) to Inline(default) with arguments: 4009","/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]},{id:"22bb8daf-e0dc-4d65-864b-69e426653655",class:"WarmupCacheJob",queue:"Inline(default)",args:[2958],successfully_enqueued:!0,scheduled_at:null,logs:["Enqueued WarmupCacheJob (Job ID: 22bb8daf-e0dc-4d65-864b-69e426653655) to Inline(default) with arguments: 2958","/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]},{id:"7af6edc4-d9d6-4ee1-ac8e-05fefdace1e7",class:"WarmupCacheJob",queue:"Inline(default)",args:[3783],successfully_enqueued:!0,scheduled_at:null,logs:["Enqueued WarmupCacheJob (Job ID: 7af6edc4-d9d6-4ee1-ac8e-05fefdace1e7) to Inline(default) with arguments: 3783","/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]}],xA=[{msg:"before_action",extra:[{params:{controller:"demo",action:"post_list"},callee:null}]},{msg:"Entering controller method",extra:[{params:{controller:"demo",action:"post_list"}}]},{msg:"Rendering navigation",extra:[]}],wA=[{key:"nb_total_posts",store:"ActiveSupport::Cache::NullStore",compress:!0,compress_threshold:1024,super_operation:"fetch",hit:!1,name:"cache_read.active_support",transaction_id:"5b12f96df0153917ce3c",time:"05:33:47.667",label:"read"},{key:"nb_total_posts",store:"ActiveSupport::Cache::NullStore",compress:!0,compress_threshold:1024,name:"cache_generate.active_support",transaction_id:"5b12f96df0153917ce3c",time:"05:33:47.746",label:"generate"},{key:"nb_total_posts",store:"ActiveSupport::Cache::NullStore",compress:!0,compress_threshold:1024,name:"cache_write.active_support",transaction_id:"5b12f96df0153917ce3c",time:"05:33:50.394",label:"write"}],KA=[],ji={id:vA,meta:yA,models:VA,queries:WA,jobs:XA,messages:xA,cache:wA,logs:KA},ki=Object.freeze(Object.defineProperty({__proto__:null,cache:wA,default:ji,id:vA,jobs:XA,logs:KA,messages:xA,meta:yA,models:VA,queries:WA},Symbol.toStringTag,{value:"Module"})),$A="b564f32a-84cb-489c-b59e-854fe7200ec0",JA={controller:"ApiController",action:"jobs",params:{name:"send_email",post_id:"3783",controller:"api",action:"jobs"},format:"*/*",method:"GET",path:"/api/jobs?name=send_email&post_id=3783",status:200,view_runtime:null,db_runtime:3.643999923951924,duration:47.01300001144409,cpu_time:40.268166,idle_time:6.744834011444091,allocations:14318},qA={Post:12},jA=[{id:"5b12f96df0153917ce3c",title:"Post Load (0.4ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` WHERE `posts`.`id` = 3783 LIMIT 1 ",cached:!1,async:!1,duration:.4,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/jobs/send_email_job.rb:5"," `perform'"]},{id:"5b12f96df0153917ce3c",title:"Post Load (3.3ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` ORDER BY `posts`.`published_at` DESC LIMIT 5 ",cached:!1,async:!1,duration:3.3,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/jobs/send_email_job.rb:6"," `perform'"]},{id:"9b21b6a2aa65a44dc6b4",title:"CACHE Post Load (0.0ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` WHERE `posts`.`id` = 3783 LIMIT 1",cached:!0,async:null,duration:0,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/jobs/send_email_job.rb:5"," `perform'"]},{id:"9b21b6a2aa65a44dc6b4",title:"CACHE Post Load (0.0ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` ORDER BY `posts`.`published_at` DESC LIMIT 5",cached:!0,async:null,duration:0,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/jobs/send_email_job.rb:6"," `perform'"]}],kA=[{id:"7ed002b1-4abc-4cdd-a31d-48e9d77eca60",class:"SendEmailJob",queue:"Inline(default)",args:["3783",{user_id:99}],successfully_enqueued:!0,scheduled_at:null,logs:['Enqueued SendEmailJob (Job ID: 7ed002b1-4abc-4cdd-a31d-48e9d77eca60) to Inline(default) with arguments: "3783", {:user_id=>99}',"/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]},{id:"e89d32e5-0c21-4853-ac0a-48e8f642bc5b",class:"SendEmailJob",queue:"Inline(default)",args:["3783",{user_id:1,admin:!0}],successfully_enqueued:!0,scheduled_at:null,logs:['Enqueued SendEmailJob (Job ID: e89d32e5-0c21-4853-ac0a-48e8f642bc5b) to Inline(default) with arguments: "3783", {:user_id=>1, :admin=>true}',"/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]}],QA=[],ZA=[],zA=[],Qi={id:$A,meta:JA,models:qA,queries:jA,jobs:kA,messages:QA,cache:ZA,logs:zA},Zi=Object.freeze(Object.defineProperty({__proto__:null,cache:ZA,default:Qi,id:$A,jobs:kA,logs:zA,messages:QA,meta:JA,models:qA,queries:jA},Symbol.toStringTag,{value:"Module"})),en="54e0b5c3-68d8-44d4-b28d-445b8c1078d2",En={controller:"ApiController",action:"jobs",params:{name:"refresh",post_id:"1650",controller:"api",action:"jobs"},format:"*/*",method:"GET",path:"/api/jobs?name=refresh&post_id=1650",status:200,view_runtime:null,db_runtime:.3429999342188239,duration:19.450999975204468,cpu_time:18.718917000000005,idle_time:.7320829752044631,allocations:5504},tn={Post:1},Tn=[{id:"5b12f96df0153917ce3c",title:"Post Load (0.3ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` WHERE `posts`.`id` = 1650 LIMIT 1 ",cached:!1,async:!1,duration:.3,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/jobs/refresh_post_job.rb:5"," `perform'"]}],sn=[{id:"42424189-98bd-4ffe-84b0-8463ae95ef84",class:"RefreshPostJob",queue:"Inline(default)",args:["1650"],successfully_enqueued:!0,scheduled_at:null,logs:['Enqueued RefreshPostJob (Job ID: 42424189-98bd-4ffe-84b0-8463ae95ef84) to Inline(default) with arguments: "1650"',"/Users/julien.bourdeau/Personal/debugbar/debugbar/lib/debugbar/subscribers/active_job.rb:22:in `enqueue'"]}],Rn=[],rn=[{key:"post:1650",store:"ActiveSupport::Cache::NullStore",compress:!0,compress_threshold:1024,name:"cache_write.active_support",transaction_id:"3f0bfca315507a503d62",time:"09:27:37.143",label:"write"}],An=[],zi={id:en,meta:En,models:tn,queries:Tn,jobs:sn,messages:Rn,cache:rn,logs:An},eo=Object.freeze(Object.defineProperty({__proto__:null,cache:rn,default:zi,id:en,jobs:sn,logs:An,messages:Rn,meta:En,models:tn,queries:Tn},Symbol.toStringTag,{value:"Module"})),nn="52f0576e-b43f-4004-9124-375b95e94677",Sn={controller:"DemoController",action:"slow_page",params:{controller:"demo",action:"slow_page"},format:"html",method:"GET",path:"/slow-page",status:200,view_runtime:38.67000003810972,db_runtime:5.059999995864928,duration:5065.460000038147,cpu_time:37.54691699999999,idle_time:5027.913083038147,allocations:27181},On={Post:1,Reaction:688},In=[{id:"5b12f96df0153917ce3c",title:"Post Load (3.1ms)",name:"Post Load",sql:"SELECT `posts`.* FROM `posts` ORDER BY `posts`.`id` DESC LIMIT 1 ",cached:!1,async:!1,duration:3.1,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/controllers/demo_controller.rb:25"," `slow_page'"]},{id:"5b12f96df0153917ce3c",title:"Reaction Load (2.3ms)",name:"Reaction Load",sql:"SELECT `reactions`.* FROM `reactions` WHERE `reactions`.`post_id` = 5000 ",cached:!1,async:!1,duration:2.3,lock_wait:null,binds:null,source:["/Users/julien.bourdeau/Personal/rails/demo_app/app/views/demo/post.html.erb:20"," `_app_views_demo_post_html_erb__1884720668479630396_27740'"]}],on=[],Nn=[{msg:"before_action",extra:[{params:{controller:"demo",action:"slow_page"},callee:null}]},{msg:"Rendering navigation",extra:[]}],an=[],_n=[],Eo={id:nn,meta:Sn,models:On,queries:In,jobs:on,messages:Nn,cache:an,logs:_n},to=Object.freeze(Object.defineProperty({__proto__:null,cache:an,default:Eo,id:nn,jobs:on,logs:_n,messages:Nn,meta:Sn,models:On,queries:In},Symbol.toStringTag,{value:"Module"})),Cn="cf1be340-bd55-4a31-8b3d-dc29fde84e65",ln={controller:"ApiController",action:"errors",params:{code:"500",controller:"api",action:"errors"},format:"*/*",method:"GET",path:"/api/errors?code=500",status:500,view_runtime:null,db_runtime:0,exception:["RuntimeError","This is a test error"],exception_object:"This is a test error",duration:.5119999647140503,cpu_time:.5102500000000418,idle_time:.0017499647140084562,allocations:498},Ln={},cn=[],un=[],Pn=[],Dn=[],Mn=[],To={id:Cn,meta:ln,models:Ln,queries:cn,jobs:un,messages:Pn,cache:Dn,logs:Mn},so=Object.freeze(Object.defineProperty({__proto__:null,cache:Dn,default:To,id:Cn,jobs:un,logs:Mn,messages:Pn,meta:ln,models:Ln,queries:cn},Symbol.toStringTag,{value:"Module"})),fn="/assets/ruby-logo-kn_8RniZ.svg";var ss={exports:{}};(function(e,E){(function(t,T){T(E)})(XE,function(t){var T={logger:self.console,WebSocket:self.WebSocket},s={log:function(){if(this.enabled){for(var c,l=arguments.length,b=Array(l),w=0;w<l;w++)b[w]=arguments[w];b.push(Date.now()),(c=T.logger).log.apply(c,["[ActionCable]"].concat(b))}}},R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(_){return typeof _}:function(_){return _&&typeof Symbol=="function"&&_.constructor===Symbol&&_!==Symbol.prototype?"symbol":typeof _},r=function(_,c){if(!(_ instanceof c))throw new TypeError("Cannot call a class as a function")},A=function(){function _(c,l){for(var b=0;b<l.length;b++){var w=l[b];w.enumerable=w.enumerable||!1,w.configurable=!0,"value"in w&&(w.writable=!0),Object.defineProperty(c,w.key,w)}}return function(c,l,b){return l&&_(c.prototype,l),b&&_(c,b),c}}(),S=function(){return new Date().getTime()},n=function(c){return(S()-c)/1e3},O=function(c,l,b){return Math.max(l,Math.min(b,c))},i=function(){function _(c){r(this,_),this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=c,this.reconnectAttempts=0}return _.prototype.start=function(){this.isRunning()||(this.startedAt=S(),delete this.stoppedAt,this.startPolling(),addEventListener("visibilitychange",this.visibilityDidChange),s.log("ConnectionMonitor started. pollInterval = "+this.getPollInterval()+" ms"))},_.prototype.stop=function(){this.isRunning()&&(this.stoppedAt=S(),this.stopPolling(),removeEventListener("visibilitychange",this.visibilityDidChange),s.log("ConnectionMonitor stopped"))},_.prototype.isRunning=function(){return this.startedAt&&!this.stoppedAt},_.prototype.recordPing=function(){this.pingedAt=S()},_.prototype.recordConnect=function(){this.reconnectAttempts=0,this.recordPing(),delete this.disconnectedAt,s.log("ConnectionMonitor recorded connect")},_.prototype.recordDisconnect=function(){this.disconnectedAt=S(),s.log("ConnectionMonitor recorded disconnect")},_.prototype.startPolling=function(){this.stopPolling(),this.poll()},_.prototype.stopPolling=function(){clearTimeout(this.pollTimeout)},_.prototype.poll=function(){var l=this;this.pollTimeout=setTimeout(function(){l.reconnectIfStale(),l.poll()},this.getPollInterval())},_.prototype.getPollInterval=function(){var l=this.constructor.pollInterval,b=l.min,w=l.max,ie=l.multiplier,Q=ie*Math.log(this.reconnectAttempts+1);return Math.round(O(Q,b,w)*1e3)},_.prototype.reconnectIfStale=function(){this.connectionIsStale()&&(s.log("ConnectionMonitor detected stale connection. reconnectAttempts = "+this.reconnectAttempts+", pollInterval = "+this.getPollInterval()+" ms, time disconnected = "+n(this.disconnectedAt)+" s, stale threshold = "+this.constructor.staleThreshold+" s"),this.reconnectAttempts++,this.disconnectedRecently()?s.log("ConnectionMonitor skipping reopening recent disconnect"):(s.log("ConnectionMonitor reopening"),this.connection.reopen()))},_.prototype.connectionIsStale=function(){return n(this.pingedAt?this.pingedAt:this.startedAt)>this.constructor.staleThreshold},_.prototype.disconnectedRecently=function(){return this.disconnectedAt&&n(this.disconnectedAt)<this.constructor.staleThreshold},_.prototype.visibilityDidChange=function(){var l=this;document.visibilityState==="visible"&&setTimeout(function(){(l.connectionIsStale()||!l.connection.isOpen())&&(s.log("ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = "+document.visibilityState),l.connection.reopen())},200)},_}();i.pollInterval={min:3,max:30,multiplier:5},i.staleThreshold=6;var o={message_types:{welcome:"welcome",disconnect:"disconnect",ping:"ping",confirmation:"confirm_subscription",rejection:"reject_subscription"},disconnect_reasons:{unauthorized:"unauthorized",invalid_request:"invalid_request",server_restart:"server_restart"},default_mount_path:"/cable",protocols:["actioncable-v1-json","actioncable-unsupported"]},f=o.message_types,p=o.protocols,F=p.slice(0,p.length-1),x=[].indexOf,$=function(){function _(c){r(this,_),this.open=this.open.bind(this),this.consumer=c,this.subscriptions=this.consumer.subscriptions,this.monitor=new i(this),this.disconnected=!0}return _.prototype.send=function(l){return this.isOpen()?(this.webSocket.send(JSON.stringify(l)),!0):!1},_.prototype.open=function(){return this.isActive()?(s.log("Attempted to open WebSocket, but existing socket is "+this.getState()),!1):(s.log("Opening WebSocket, current state is "+this.getState()+", subprotocols: "+p),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new T.WebSocket(this.consumer.url,p),this.installEventHandlers(),this.monitor.start(),!0)},_.prototype.close=function(){var l=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{allowReconnect:!0},b=l.allowReconnect;if(b||this.monitor.stop(),this.isActive())return this.webSocket.close()},_.prototype.reopen=function(){if(s.log("Reopening WebSocket, current state is "+this.getState()),this.isActive())try{return this.close()}catch(l){s.log("Failed to reopen WebSocket",l)}finally{s.log("Reopening WebSocket in "+this.constructor.reopenDelay+"ms"),setTimeout(this.open,this.constructor.reopenDelay)}else return this.open()},_.prototype.getProtocol=function(){if(this.webSocket)return this.webSocket.protocol},_.prototype.isOpen=function(){return this.isState("open")},_.prototype.isActive=function(){return this.isState("open","connecting")},_.prototype.isProtocolSupported=function(){return x.call(F,this.getProtocol())>=0},_.prototype.isState=function(){for(var l=arguments.length,b=Array(l),w=0;w<l;w++)b[w]=arguments[w];return x.call(b,this.getState())>=0},_.prototype.getState=function(){if(this.webSocket){for(var l in T.WebSocket)if(T.WebSocket[l]===this.webSocket.readyState)return l.toLowerCase()}return null},_.prototype.installEventHandlers=function(){for(var l in this.events){var b=this.events[l].bind(this);this.webSocket["on"+l]=b}},_.prototype.uninstallEventHandlers=function(){for(var l in this.events)this.webSocket["on"+l]=function(){}},_}();$.reopenDelay=500,$.prototype.events={message:function(c){if(this.isProtocolSupported()){var l=JSON.parse(c.data),b=l.identifier,w=l.message,ie=l.reason,Q=l.reconnect,L=l.type;switch(L){case f.welcome:return this.monitor.recordConnect(),this.subscriptions.reload();case f.disconnect:return s.log("Disconnecting. Reason: "+ie),this.close({allowReconnect:Q});case f.ping:return this.monitor.recordPing();case f.confirmation:return this.subscriptions.confirmSubscription(b),this.subscriptions.notify(b,"connected");case f.rejection:return this.subscriptions.reject(b);default:return this.subscriptions.notify(b,"received",w)}}},open:function(){if(s.log("WebSocket onopen event, using '"+this.getProtocol()+"' subprotocol"),this.disconnected=!1,!this.isProtocolSupported())return s.log("Protocol is unsupported. Stopping monitor and disconnecting."),this.close({allowReconnect:!1})},close:function(c){if(s.log("WebSocket onclose event"),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll("disconnected",{willAttemptReconnect:this.monitor.isRunning()})},error:function(){s.log("WebSocket onerror event")}};var K=function(c,l){if(l!=null)for(var b in l){var w=l[b];c[b]=w}return c},V=function(){function _(c){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},b=arguments[2];r(this,_),this.consumer=c,this.identifier=JSON.stringify(l),K(this,b)}return _.prototype.perform=function(l){var b=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return b.action=l,this.send(b)},_.prototype.send=function(l){return this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(l)})},_.prototype.unsubscribe=function(){return this.consumer.subscriptions.remove(this)},_}(),v=function(){function _(c){r(this,_),this.subscriptions=c,this.pendingSubscriptions=[]}return _.prototype.guarantee=function(l){this.pendingSubscriptions.indexOf(l)==-1?(s.log("SubscriptionGuarantor guaranteeing "+l.identifier),this.pendingSubscriptions.push(l)):s.log("SubscriptionGuarantor already guaranteeing "+l.identifier),this.startGuaranteeing()},_.prototype.forget=function(l){s.log("SubscriptionGuarantor forgetting "+l.identifier),this.pendingSubscriptions=this.pendingSubscriptions.filter(function(b){return b!==l})},_.prototype.startGuaranteeing=function(){this.stopGuaranteeing(),this.retrySubscribing()},_.prototype.stopGuaranteeing=function(){clearTimeout(this.retryTimeout)},_.prototype.retrySubscribing=function(){var l=this;this.retryTimeout=setTimeout(function(){l.subscriptions&&typeof l.subscriptions.subscribe=="function"&&l.pendingSubscriptions.map(function(b){s.log("SubscriptionGuarantor resubscribing "+b.identifier),l.subscriptions.subscribe(b)})},500)},_}(),Te=function(){function _(c){r(this,_),this.consumer=c,this.guarantor=new v(this),this.subscriptions=[]}return _.prototype.create=function(l,b){var w=l,ie=(typeof w>"u"?"undefined":R(w))==="object"?w:{channel:w},Q=new V(this.consumer,ie,b);return this.add(Q)},_.prototype.add=function(l){return this.subscriptions.push(l),this.consumer.ensureActiveConnection(),this.notify(l,"initialized"),this.subscribe(l),l},_.prototype.remove=function(l){return this.forget(l),this.findAll(l.identifier).length||this.sendCommand(l,"unsubscribe"),l},_.prototype.reject=function(l){var b=this;return this.findAll(l).map(function(w){return b.forget(w),b.notify(w,"rejected"),w})},_.prototype.forget=function(l){return this.guarantor.forget(l),this.subscriptions=this.subscriptions.filter(function(b){return b!==l}),l},_.prototype.findAll=function(l){return this.subscriptions.filter(function(b){return b.identifier===l})},_.prototype.reload=function(){var l=this;return this.subscriptions.map(function(b){return l.subscribe(b)})},_.prototype.notifyAll=function(l){for(var b=this,w=arguments.length,ie=Array(w>1?w-1:0),Q=1;Q<w;Q++)ie[Q-1]=arguments[Q];return this.subscriptions.map(function(L){return b.notify.apply(b,[L,l].concat(ie))})},_.prototype.notify=function(l,b){for(var w=arguments.length,ie=Array(w>2?w-2:0),Q=2;Q<w;Q++)ie[Q-2]=arguments[Q];var L=void 0;return typeof l=="string"?L=this.findAll(l):L=[l],L.map(function(h){return typeof h[b]=="function"?h[b].apply(h,ie):void 0})},_.prototype.subscribe=function(l){this.sendCommand(l,"subscribe")&&this.guarantor.guarantee(l)},_.prototype.confirmSubscription=function(l){var b=this;s.log("Subscription confirmed "+l),this.findAll(l).map(function(w){return b.guarantor.forget(w)})},_.prototype.sendCommand=function(l,b){var w=l.identifier;return this.consumer.send({command:b,identifier:w})},_}(),Ce=function(){function _(c){r(this,_),this._url=c,this.subscriptions=new Te(this),this.connection=new $(this)}return _.prototype.send=function(l){return this.connection.send(l)},_.prototype.connect=function(){return this.connection.open()},_.prototype.disconnect=function(){return this.connection.close({allowReconnect:!1})},_.prototype.ensureActiveConnection=function(){if(!this.connection.isActive())return this.connection.open()},A(_,[{key:"url",get:function(){return Re(this._url)}}]),_}();function Re(_){if(typeof _=="function"&&(_=_()),_&&!/^wss?:/i.test(_)){var c=document.createElement("a");return c.href=_,c.href=c.href,c.protocol=c.protocol.replace("http","ws"),c.href}else return _}function z(){var _=arguments.length>0&&arguments[0]!==void 0?arguments[0]:J("url")||o.default_mount_path;return new Ce(_)}function J(_){var c=document.head.querySelector("meta[name='action-cable-"+_+"']");if(c)return c.getAttribute("content")}t.Connection=$,t.ConnectionMonitor=i,t.Consumer=Ce,t.INTERNAL=o,t.Subscription=V,t.Subscriptions=Te,t.SubscriptionGuarantor=v,t.adapters=T,t.createWebSocketURL=Re,t.logger=s,t.createConsumer=z,t.getConfig=J,Object.defineProperty(t,"__esModule",{value:!0})})})(ss,ss.exports);var Ro=ss.exports;function dR(e,E){return Y(),k("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[B("path",{"fill-rule":"evenodd",d:"M11.78 4.22a.75.75 0 0 1 0 1.06L6.56 10.5h3.69a.75.75 0 0 1 0 1.5h-5.5a.75.75 0 0 1-.75-.75v-5.5a.75.75 0 0 1 1.5 0v3.69l5.22-5.22a.75.75 0 0 1 1.06 0Z","clip-rule":"evenodd"})])}function ro(e,E){return Y(),k("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[B("path",{"fill-rule":"evenodd",d:"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z","clip-rule":"evenodd"})])}function Ao(e,E){return Y(),k("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[B("path",{"fill-rule":"evenodd",d:"M11.914 4.086a2 2 0 0 0-2.828 0l-5 5a2 2 0 1 0 2.828 2.828l.556-.555a.75.75 0 0 1 1.06 1.06l-.555.556a3.5 3.5 0 0 1-4.95-4.95l5-5a3.5 3.5 0 0 1 4.95 4.95l-1.972 1.972a2.125 2.125 0 0 1-3.006-3.005L9.97 4.97a.75.75 0 1 1 1.06 1.06L9.058 8.003a.625.625 0 0 0 .884.883l1.972-1.972a2 2 0 0 0 0-2.828Z","clip-rule":"evenodd"})])}function no(e,E){return Y(),k("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[B("path",{"fill-rule":"evenodd",d:"M5 3.25V4H2.75a.75.75 0 0 0 0 1.5h.3l.815 8.15A1.5 1.5 0 0 0 5.357 15h5.285a1.5 1.5 0 0 0 1.493-1.35l.815-8.15h.3a.75.75 0 0 0 0-1.5H11v-.75A2.25 2.25 0 0 0 8.75 1h-1.5A2.25 2.25 0 0 0 5 3.25Zm2.25-.75a.75.75 0 0 0-.75.75V4h3v-.75a.75.75 0 0 0-.75-.75h-1.5ZM6.05 6a.75.75 0 0 1 .787.713l.275 5.5a.75.75 0 0 1-1.498.075l-.275-5.5A.75.75 0 0 1 6.05 6Zm3.9 0a.75.75 0 0 1 .712.787l-.275 5.5a.75.75 0 0 1-1.498-.075l.275-5.5a.75.75 0 0 1 .786-.711Z","clip-rule":"evenodd"})])}function So(e,E){return Y(),k("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[B("path",{"fill-rule":"evenodd",d:"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm2.78-4.22a.75.75 0 0 1-1.06 0L8 9.06l-1.72 1.72a.75.75 0 1 1-1.06-1.06L6.94 8 5.22 6.28a.75.75 0 0 1 1.06-1.06L8 6.94l1.72-1.72a.75.75 0 1 1 1.06 1.06L9.06 8l1.72 1.72a.75.75 0 0 1 0 1.06Z","clip-rule":"evenodd"})])}const Oo=["textContent"],Io=Ye({__name:"TabButton",props:{label:{},count:{},isActive:{type:Boolean}},setup(e){const E=e;return(t,T)=>(Y(),k("button",{class:$e(["text-sm flex items-center space-x-1 px-3 py-2 border-0",{"bg-stone-300 rounded-sm":E.isActive}])},[B("span",{class:$e({"font-medium":E.isActive})},[lA(t.$slots,"default")],2),E.count!=null?(Y(),k("span",{key:0,class:$e(["p-0.5 rounded-full text-xs",{"px-1.5":E.count<10,hidden:E.count==0,"bg-stone-300":E.count>0&&!E.isActive,"bg-stone-400":E.count>0&&E.isActive}]),textContent:Le(E.count)},null,10,Oo)):Oe("",!0)],2))}}),io=(e,E)=>{const t=e.__vccOpts||e;for(const[T,s]of E)t[T]=s;return t},oo={},No={class:"px-3 py-2"};function ao(e,E){return Y(),k("div",No,[lA(e.$slots,"default")])}const FE=io(oo,[["render",ao]]),_o={key:0},Co=B("div",{class:"text-gray-500"},"No models were initialized.",-1),lo=[Co],Lo={key:1,class:"divide-y divide-stone-300"},co=B("thead",null,[B("tr",null,[B("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"}," Model "),B("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Count")])],-1),uo={class:"divide-y divide-stone-200"},Po={class:"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-stone-900 sm:pl-0"},Do={class:"whitespace-nowrap px-3 py-4 text-sm text-stone-500 text-center"},Mo=Ye({__name:"ModelsPanel",props:{models:{},count:{}},setup(e){const E=e;return(t,T)=>(Y(),De(FE,null,{default:TE(()=>[E.count==0?(Y(),k("div",_o,lo)):Oe("",!0),E.count>0?(Y(),k("table",Lo,[co,B("tbody",uo,[(Y(!0),k(ue,null,tE(E.models,(s,R)=>(Y(),k("tr",{key:R},[B("td",Po,Le(R),1),B("td",Do,Le(s),1)]))),128))])])):Oe("",!0)]),_:1}))}});var Un={exports:{}};(function(e){(function(E,t){e.exports?e.exports=t():E.nearley=t()})(XE,function(){function E(n,O,i){return this.id=++E.highestId,this.name=n,this.symbols=O,this.postprocess=i,this}E.highestId=0,E.prototype.toString=function(n){var O=typeof n>"u"?this.symbols.map(S).join(" "):this.symbols.slice(0,n).map(S).join(" ")+" ● "+this.symbols.slice(n).map(S).join(" ");return this.name+" → "+O};function t(n,O,i,o){this.rule=n,this.dot=O,this.reference=i,this.data=[],this.wantedBy=o,this.isComplete=this.dot===n.symbols.length}t.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},t.prototype.nextState=function(n){var O=new t(this.rule,this.dot+1,this.reference,this.wantedBy);return O.left=this,O.right=n,O.isComplete&&(O.data=O.build(),O.right=void 0),O},t.prototype.build=function(){var n=[],O=this;do n.push(O.right.data),O=O.left;while(O.left);return n.reverse(),n},t.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,r.fail))};function T(n,O){this.grammar=n,this.index=O,this.states=[],this.wants={},this.scannable=[],this.completed={}}T.prototype.process=function(n){for(var O=this.states,i=this.wants,o=this.completed,f=0;f<O.length;f++){var p=O[f];if(p.isComplete){if(p.finish(),p.data!==r.fail){for(var F=p.wantedBy,x=F.length;x--;){var $=F[x];this.complete($,p)}if(p.reference===this.index){var K=p.rule.name;(this.completed[K]=this.completed[K]||[]).push(p)}}}else{var K=p.rule.symbols[p.dot];if(typeof K!="string"){this.scannable.push(p);continue}if(i[K]){if(i[K].push(p),o.hasOwnProperty(K))for(var V=o[K],x=0;x<V.length;x++){var v=V[x];this.complete(p,v)}}else i[K]=[p],this.predict(K)}}},T.prototype.predict=function(n){for(var O=this.grammar.byName[n]||[],i=0;i<O.length;i++){var o=O[i],f=this.wants[n],p=new t(o,0,this.index,f);this.states.push(p)}},T.prototype.complete=function(n,O){var i=n.nextState(O);this.states.push(i)};function s(n,O){this.rules=n,this.start=O||this.rules[0].name;var i=this.byName={};this.rules.forEach(function(o){i.hasOwnProperty(o.name)||(i[o.name]=[]),i[o.name].push(o)})}s.fromCompiled=function(o,O){var i=o.Lexer;o.ParserStart&&(O=o.ParserStart,o=o.ParserRules);var o=o.map(function(p){return new E(p.name,p.symbols,p.postprocess)}),f=new s(o,O);return f.lexer=i,f};function R(){this.reset("")}R.prototype.reset=function(n,O){this.buffer=n,this.index=0,this.line=O?O.line:1,this.lastLineBreak=O?-O.col:0},R.prototype.next=function(){if(this.index<this.buffer.length){var n=this.buffer[this.index++];return n===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:n}}},R.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},R.prototype.formatError=function(n,O){var i=this.buffer;if(typeof i=="string"){var o=i.split(`
`).slice(Math.max(0,this.line-5),this.line),f=i.indexOf(`
`,this.index);f===-1&&(f=i.length);var p=this.index-this.lastLineBreak,F=String(this.line).length;return O+=" at line "+this.line+" col "+p+`:

`,O+=o.map(function($,K){return x(this.line-o.length+K+1,F)+" "+$},this).join(`
`),O+=`
`+x("",F+p)+`^
`,O}else return O+" at index "+(this.index-1);function x($,K){var V=String($);return Array(K-V.length+1).join(" ")+V}};function r(n,O,i){if(n instanceof s)var o=n,i=O;else var o=s.fromCompiled(n,O);this.grammar=o,this.options={keepHistory:!1,lexer:o.lexer||new R};for(var f in i||{})this.options[f]=i[f];this.lexer=this.options.lexer,this.lexerState=void 0;var p=new T(o,0);this.table=[p],p.wants[o.start]=[],p.predict(o.start),p.process(),this.current=0}r.fail={},r.prototype.feed=function(n){var O=this.lexer;O.reset(n,this.lexerState);for(var i;;){try{if(i=O.next(),!i)break}catch(Re){var F=new T(this.grammar,this.current+1);this.table.push(F);var o=new Error(this.reportLexerError(Re));throw o.offset=this.current,o.token=Re.token,o}var f=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var p=this.current+1,F=new T(this.grammar,p);this.table.push(F);for(var x=i.text!==void 0?i.text:i.value,$=O.constructor===R?i.value:i,K=f.scannable,V=K.length;V--;){var v=K[V],Te=v.rule.symbols[v.dot];if(Te.test?Te.test($):Te.type?Te.type===i.type:Te.literal===x){var Ce=v.nextState({data:$,token:i,isToken:!0,reference:p-1});F.states.push(Ce)}}if(F.process(),F.states.length===0){var o=new Error(this.reportError(i));throw o.offset=this.current,o.token=i,o}this.options.keepHistory&&(f.lexerState=O.save()),this.current++}return f&&(this.lexerState=O.save()),this.results=this.finish(),this},r.prototype.reportLexerError=function(n){var O,i,o=n.token;return o?(O="input "+JSON.stringify(o.text[0])+" (lexer error)",i=this.lexer.formatError(o,"Syntax error")):(O="input (lexer error)",i=n.message),this.reportErrorCommon(i,O)},r.prototype.reportError=function(n){var O=(n.type?n.type+" token: ":"")+JSON.stringify(n.value!==void 0?n.value:n),i=this.lexer.formatError(n,"Syntax error");return this.reportErrorCommon(i,O)},r.prototype.reportErrorCommon=function(n,O){var i=[];i.push(n);var o=this.table.length-2,f=this.table[o],p=f.states.filter(function(x){var $=x.rule.symbols[x.dot];return $&&typeof $!="string"});if(p.length===0)i.push("Unexpected "+O+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(f.states,i);else{i.push("Unexpected "+O+`. Instead, I was expecting to see one of the following:
`);var F=p.map(function(x){return this.buildFirstStateStack(x,[])||[x]},this);F.forEach(function(x){var $=x[0],K=$.rule.symbols[$.dot],V=this.getSymbolDisplay(K);i.push("A "+V+" based on:"),this.displayStateStack(x,i)},this)}return i.push(""),i.join(`
`)},r.prototype.displayStateStack=function(n,O){for(var i,o=0,f=0;f<n.length;f++){var p=n[f],F=p.rule.toString(p.dot);F===i?o++:(o>0&&O.push("    ^ "+o+" more lines identical to this"),o=0,O.push("    "+F)),i=F}},r.prototype.getSymbolDisplay=function(n){return A(n)},r.prototype.buildFirstStateStack=function(n,O){if(O.indexOf(n)!==-1)return null;if(n.wantedBy.length===0)return[n];var i=n.wantedBy[0],o=[n].concat(O),f=this.buildFirstStateStack(i,o);return f===null?null:[n].concat(f)},r.prototype.save=function(){var n=this.table[this.current];return n.lexerState=this.lexerState,n},r.prototype.restore=function(n){var O=n.index;this.current=O,this.table[O]=n,this.table.splice(O+1),this.lexerState=n.lexerState,this.results=this.finish()},r.prototype.rewind=function(n){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[n])},r.prototype.finish=function(){var n=[],O=this.grammar.start,i=this.table[this.table.length-1];return i.states.forEach(function(o){o.rule.name===O&&o.dot===o.rule.symbols.length&&o.reference===0&&o.data!==r.fail&&n.push(o)}),n.map(function(o){return o.data})};function A(n){var O=typeof n;if(O==="string")return n;if(O==="object"){if(n.literal)return JSON.stringify(n.literal);if(n instanceof RegExp)return"character matching "+n;if(n.type)return n.type+" token";if(n.test)return"token matching "+String(n.test);throw new Error("Unknown symbol type: "+n)}}function S(n){var O=typeof n;if(O==="string")return n;if(O==="object"){if(n.literal)return JSON.stringify(n.literal);if(n instanceof RegExp)return n.toString();if(n.type)return"%"+n.type;if(n.test)return"<"+String(n.test)+">";throw new Error("Unknown symbol type: "+n)}}return{Parser:r,Grammar:s,Rule:E}})})(Un);var fo=Un.exports;const Uo=Ss(fo);var pn=Object.defineProperty,po=Object.defineProperties,ho=Object.getOwnPropertyDescriptors,tT=Object.getOwnPropertySymbols,dn=Object.prototype.hasOwnProperty,hn=Object.prototype.propertyIsEnumerable,hR=(e,E,t)=>E in e?pn(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t,He=(e,E)=>{for(var t in E||(E={}))dn.call(E,t)&&hR(e,t,E[t]);if(tT)for(var t of tT(E))hn.call(E,t)&&hR(e,t,E[t]);return e},be=(e,E)=>po(e,ho(E)),Go=(e,E)=>{var t={};for(var T in e)dn.call(e,T)&&E.indexOf(T)<0&&(t[T]=e[T]);if(e!=null&&tT)for(var T of tT(e))E.indexOf(T)<0&&hn.call(e,T)&&(t[T]=e[T]);return t},Ho=(e,E)=>{for(var t in E)pn(e,t,{get:E[t],enumerable:!0})},Gn={};Ho(Gn,{bigquery:()=>jo,db2:()=>nN,db2i:()=>CN,hive:()=>UN,mariadb:()=>FN,mysql:()=>wN,n1ql:()=>zN,plsql:()=>na,postgresql:()=>la,redshift:()=>pa,singlestoredb:()=>d_,snowflake:()=>Y_,spark:()=>ba,sql:()=>E_,sqlite:()=>$a,transactsql:()=>L_,trino:()=>O_});var M=e=>e.flatMap(mo),mo=e=>$t(go(e)).map(Bo),Bo=e=>e.replace(/ +/g," ").trim(),go=e=>({type:"mandatory_block",items:Bs(e,0)[0]}),Bs=(e,E,t)=>{const T=[];for(;e[E];){const[s,R]=Fo(e,E);if(T.push(s),E=R,e[E]==="|")E++;else if(e[E]==="}"||e[E]==="]"){if(t!==e[E])throw new Error(`Unbalanced parenthesis in: ${e}`);return E++,[T,E]}else if(E===e.length){if(t)throw new Error(`Unbalanced parenthesis in: ${e}`);return[T,E]}else throw new Error(`Unexpected "${e[E]}"`)}return[T,E]},Fo=(e,E)=>{const t=[];for(;;){const[T,s]=bo(e,E);if(T)t.push(T),E=s;else break}return t.length===1?[t[0],E]:[{type:"concatenation",items:t},E]},bo=(e,E)=>{if(e[E]==="{")return Yo(e,E+1);if(e[E]==="[")return vo(e,E+1);{let t="";for(;e[E]&&/[A-Za-z0-9_ ]/.test(e[E]);)t+=e[E],E++;return[t,E]}},Yo=(e,E)=>{const[t,T]=Bs(e,E,"}");return[{type:"mandatory_block",items:t},T]},vo=(e,E)=>{const[t,T]=Bs(e,E,"]");return[{type:"optional_block",items:t},T]},$t=e=>{if(typeof e=="string")return[e];if(e.type==="concatenation")return e.items.map($t).reduce(yo,[""]);if(e.type==="mandatory_block")return e.items.flatMap($t);if(e.type==="optional_block")return["",...e.items.flatMap($t)];throw new Error(`Unknown node type: ${e}`)},yo=(e,E)=>{const t=[];for(const T of e)for(const s of E)t.push(T+s);return t},Hn=(e=>(e.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",e.IDENTIFIER="IDENTIFIER",e.STRING="STRING",e.VARIABLE="VARIABLE",e.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",e.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",e.RESERVED_KEYWORD="RESERVED_KEYWORD",e.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",e.RESERVED_PHRASE="RESERVED_PHRASE",e.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",e.RESERVED_CLAUSE="RESERVED_CLAUSE",e.RESERVED_SELECT="RESERVED_SELECT",e.RESERVED_JOIN="RESERVED_JOIN",e.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",e.ARRAY_KEYWORD="ARRAY_KEYWORD",e.CASE="CASE",e.END="END",e.WHEN="WHEN",e.ELSE="ELSE",e.THEN="THEN",e.LIMIT="LIMIT",e.BETWEEN="BETWEEN",e.AND="AND",e.OR="OR",e.XOR="XOR",e.OPERATOR="OPERATOR",e.COMMA="COMMA",e.ASTERISK="ASTERISK",e.DOT="DOT",e.OPEN_PAREN="OPEN_PAREN",e.CLOSE_PAREN="CLOSE_PAREN",e.LINE_COMMENT="LINE_COMMENT",e.BLOCK_COMMENT="BLOCK_COMMENT",e.NUMBER="NUMBER",e.NAMED_PARAMETER="NAMED_PARAMETER",e.QUOTED_PARAMETER="QUOTED_PARAMETER",e.NUMBERED_PARAMETER="NUMBERED_PARAMETER",e.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",e.CUSTOM_PARAMETER="CUSTOM_PARAMETER",e.DELIMITER="DELIMITER",e.EOF="EOF",e))(Hn||{}),mn=e=>({type:"EOF",raw:"«EOF»",text:"«EOF»",start:e}),ZE=mn(1/0),WE=e=>E=>E.type===e.type&&E.text===e.text,mE={ARRAY:WE({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:WE({text:"BY",type:"RESERVED_KEYWORD"}),SET:WE({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:WE({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:WE({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:WE({text:"VALUES",type:"RESERVED_CLAUSE"})},Bn=e=>e==="RESERVED_DATA_TYPE"||e==="RESERVED_KEYWORD"||e==="RESERVED_FUNCTION_NAME"||e==="RESERVED_PHRASE"||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="ARRAY_KEYWORD"||e==="CASE"||e==="END"||e==="WHEN"||e==="ELSE"||e==="THEN"||e==="LIMIT"||e==="BETWEEN"||e==="AND"||e==="OR"||e==="XOR",Vo=e=>e==="AND"||e==="OR"||e==="XOR",Wo=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],Xo=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],xo=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],wo=M(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),Ko=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),GR=M(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),$o=M(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),Jo=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),qo=M(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),jo={name:"bigquery",tokenizerOptions:{reservedSelect:wo,reservedClauses:[...Ko,...GR],reservedSetOperations:$o,reservedJoins:Jo,reservedPhrases:qo,reservedKeywords:Xo,reservedDataTypes:xo,reservedFunctionNames:Wo,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:ko},formatOptions:{onelineClauses:GR}};function ko(e){return Qo(Zo(e))}function Qo(e){let E=ZE;return e.map(t=>t.text==="OFFSET"&&E.text==="["?(E=t,be(He({},t),{type:"RESERVED_FUNCTION_NAME"})):(E=t,t))}function Zo(e){var E;const t=[];for(let T=0;T<e.length;T++){const s=e[T];if((mE.ARRAY(s)||mE.STRUCT(s))&&((E=e[T+1])==null?void 0:E.text)==="<"){const R=zo(e,T+1),r=e.slice(T,R+1);t.push({type:"IDENTIFIER",raw:r.map(HR("raw")).join(""),text:r.map(HR("text")).join(""),start:s.start}),T=R}else t.push(s)}return t}var HR=e=>E=>E.type==="IDENTIFIER"||E.type==="COMMA"?E[e]+" ":E[e];function zo(e,E){let t=0;for(let T=E;T<e.length;T++){const s=e[T];if(s.text==="<"?t++:s.text===">"?t--:s.text===">>"&&(t-=2),t===0)return T}return e.length-1}var eN=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],EN=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],tN=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],TN=M(["SELECT [ALL | DISTINCT]"]),sN=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),mR=M(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),RN=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),rN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),AN=M(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),nN={name:"db2",tokenizerOptions:{reservedSelect:TN,reservedClauses:[...sN,...mR],reservedSetOperations:RN,reservedJoins:rN,reservedPhrases:AN,reservedKeywords:EN,reservedDataTypes:tN,reservedFunctionNames:eN,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","¬=","¬>","¬<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:mR}},SN=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],ON=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],IN=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],iN=M(["SELECT [ALL | DISTINCT]"]),oN=M(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),BR=M(["CREATE [OR REPLACE] TABLE","CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),NN=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),aN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),_N=M(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),CN={name:"db2i",tokenizerOptions:{reservedSelect:iN,reservedClauses:[...oN,...BR],reservedSetOperations:NN,reservedJoins:aN,reservedPhrases:_N,reservedKeywords:ON,reservedDataTypes:IN,reservedFunctionNames:SN,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||","=>"]},formatOptions:{onelineClauses:BR}},lN=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],LN=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],cN=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],uN=M(["SELECT [ALL | DISTINCT]"]),PN=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),gR=M(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),DN=M(["UNION [ALL | DISTINCT]"]),MN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),fN=M(["{ROWS | RANGE} BETWEEN"]),UN={name:"hive",tokenizerOptions:{reservedSelect:uN,reservedClauses:[...PN,...gR],reservedSetOperations:DN,reservedJoins:MN,reservedPhrases:fN,reservedKeywords:LN,reservedDataTypes:cN,reservedFunctionNames:lN,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:gR}};function gs(e){return e.map((E,t)=>{const T=e[t+1]||ZE;if(mE.SET(E)&&T.text==="(")return be(He({},E),{type:"RESERVED_FUNCTION_NAME"});const s=e[t-1]||ZE;return mE.VALUES(E)&&s.text==="="?be(He({},E),{type:"RESERVED_FUNCTION_NAME"}):E})}var pN=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],dN=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],hN=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],GN=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),HN=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),FR=M(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),mN=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),BN=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),gN=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),FN={name:"mariadb",tokenizerOptions:{reservedSelect:GN,reservedClauses:[...HN,...FR],reservedSetOperations:mN,reservedJoins:BN,reservedPhrases:gN,supportsXor:!0,reservedKeywords:pN,reservedDataTypes:dN,reservedFunctionNames:hN,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:gs},formatOptions:{onelineClauses:FR}},bN=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],YN=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],vN=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],yN=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),VN=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),bR=M(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),WN=M(["UNION [ALL | DISTINCT]"]),XN=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),xN=M(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),wN={name:"mysql",tokenizerOptions:{reservedSelect:yN,reservedClauses:[...VN,...bR],reservedSetOperations:WN,reservedJoins:XN,reservedPhrases:xN,supportsXor:!0,reservedKeywords:bN,reservedDataTypes:YN,reservedFunctionNames:vN,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:gs},formatOptions:{onelineClauses:bR}},KN=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],$N=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],JN=[],qN=M(["SELECT [ALL | DISTINCT]"]),jN=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),YR=M(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),kN=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),QN=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),ZN=M(["{ROWS | RANGE | GROUPS} BETWEEN"]),zN={name:"n1ql",tokenizerOptions:{reservedSelect:qN,reservedClauses:[...jN,...YR],reservedSetOperations:kN,reservedJoins:QN,reservedPhrases:ZN,supportsXor:!0,reservedKeywords:$N,reservedDataTypes:JN,reservedFunctionNames:KN,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:YR}},ea=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],Ea=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],ta=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],Ta=M(["SELECT [ALL | DISTINCT | UNIQUE]"]),sa=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),vR=M(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),Ra=M(["UNION [ALL]","EXCEPT","INTERSECT"]),ra=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),Aa=M(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),na={name:"plsql",tokenizerOptions:{reservedSelect:Ta,reservedClauses:[...sa,...vR],reservedSetOperations:Ra,reservedJoins:ra,reservedPhrases:Aa,supportsXor:!0,reservedKeywords:ea,reservedDataTypes:Ea,reservedFunctionNames:ta,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:Sa},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:vR}};function Sa(e){let E=ZE;return e.map(t=>mE.SET(t)&&mE.BY(E)?be(He({},t),{type:"RESERVED_KEYWORD"}):(Bn(t.type)&&(E=t),t))}var Oa=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],Ia=["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BINARY","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INTERSECT","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","THEN","TIES","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARIADIC","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES"],ia=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],oa=M(["SELECT [ALL | DISTINCT]"]),Na=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","SET","RETURNING"]),yR=M(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),aa=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),_a=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ca=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),la={name:"postgresql",tokenizerOptions:{reservedSelect:oa,reservedClauses:[...Na,...yR],reservedSetOperations:aa,reservedJoins:_a,reservedPhrases:Ca,reservedKeywords:Ia,reservedDataTypes:ia,reservedFunctionNames:Oa,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":"]},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:yR}},La=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],ca=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],ua=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],Pa=M(["SELECT [ALL | DISTINCT]"]),Da=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),VR=M(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),Ma=M(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),fa=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ua=M(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),pa={name:"redshift",tokenizerOptions:{reservedSelect:Pa,reservedClauses:[...Da,...VR],reservedSetOperations:Ma,reservedJoins:fa,reservedPhrases:Ua,reservedKeywords:ca,reservedDataTypes:ua,reservedFunctionNames:La,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:VR}},da=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],ha=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],Ga=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],Ha=M(["SELECT [ALL | DISTINCT]"]),ma=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),WR=M(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),Ba=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),ga=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Fa=M(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),ba={name:"spark",tokenizerOptions:{reservedSelect:Ha,reservedClauses:[...ma,...WR],reservedSetOperations:Ba,reservedJoins:ga,reservedPhrases:Fa,supportsXor:!0,reservedKeywords:da,reservedDataTypes:ha,reservedFunctionNames:Ga,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:Ya},formatOptions:{onelineClauses:WR}};function Ya(e){return e.map((E,t)=>{const T=e[t-1]||ZE,s=e[t+1]||ZE;return mE.WINDOW(E)&&s.type==="OPEN_PAREN"?be(He({},E),{type:"RESERVED_FUNCTION_NAME"}):E.text==="ITEMS"&&E.type==="RESERVED_KEYWORD"&&!(T.text==="COLLECTION"&&s.text==="TERMINATED")?be(He({},E),{type:"IDENTIFIER",text:E.raw}):E})}var va=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],ya=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],Va=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],Wa=M(["SELECT [ALL | DISTINCT]"]),Xa=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),XR=M(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),xa=M(["UNION [ALL]","EXCEPT","INTERSECT"]),wa=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ka=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),$a={name:"sqlite",tokenizerOptions:{reservedSelect:Wa,reservedClauses:[...Xa,...XR],reservedSetOperations:xa,reservedJoins:wa,reservedPhrases:Ka,reservedKeywords:ya,reservedDataTypes:Va,reservedFunctionNames:va,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:XR}},Ja=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],qa=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],ja=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],ka=M(["SELECT [ALL | DISTINCT]"]),Qa=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),xR=M(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE","CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),Za=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),za=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),e_=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),E_={name:"sql",tokenizerOptions:{reservedSelect:ka,reservedClauses:[...Qa,...xR],reservedSetOperations:Za,reservedJoins:za,reservedPhrases:e_,reservedKeywords:qa,reservedDataTypes:ja,reservedFunctionNames:Ja,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:xR}},t_=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],T_=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],s_=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],R_=M(["SELECT [ALL | DISTINCT]"]),r_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),wR=M(["CREATE TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),A_=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),n_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),S_=M(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),O_={name:"trino",tokenizerOptions:{reservedSelect:R_,reservedClauses:[...r_,...wR],reservedSetOperations:A_,reservedJoins:n_,reservedPhrases:S_,reservedKeywords:T_,reservedDataTypes:s_,reservedFunctionNames:t_,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:wR}},I_=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],i_=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","ABSOLUTE","ACTION","ADA","ALLOCATE","ARE","ASSERTION","AT","AVG","BIT_LENGTH","BOTH","CASCADED","CAST","CATALOG","CHARACTER_LENGTH","CHAR_LENGTH","COLLATION","CONNECT","CONNECTION","CONSTRAINTS","CORRESPONDING","COUNT","DAY","DEFERRABLE","DEFERRED","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DOMAIN","END-EXEC","EXCEPTION","EXTRACT","FALSE","FIRST","FORTRAN","FOUND","GET","GLOBAL","GO","HOUR","IMMEDIATE","INCLUDE","INDICATOR","INITIALLY","INPUT","INSENSITIVE","INTERVAL","ISOLATION","LANGUAGE","LAST","LEADING","LEVEL","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATURAL","NEXT","NO","NONE","OCTET_LENGTH","ONLY","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PREPARE","PRESERVE","PRIOR","PRIVILEGES","RELATIVE","ROWS","SCROLL","SECOND","SECTION","SESSION","SIZE","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","TEMPORARY","TIMEZONE_HOUR","TIMEZONE_MINUTE","TRAILING","TRANSLATE","TRANSLATION","TRIM","TRUE","UNKNOWN","UPPER","USAGE","VALUE","WHENEVER","WORK","WRITE","YEAR","ZONE"],o_=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],N_=M(["SELECT [ALL | DISTINCT]"]),a_=M(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),KR=M(["CREATE TABLE","CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),__=M(["UNION [ALL]","EXCEPT","INTERSECT"]),C_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),l_=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),L_={name:"transactsql",tokenizerOptions:{reservedSelect:N_,reservedClauses:[...a_,...KR],reservedSetOperations:__,reservedJoins:C_,reservedPhrases:l_,reservedKeywords:i_,reservedDataTypes:o_,reservedFunctionNames:I_,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:KR}},c_=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],u_=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],P_=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],D_=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),M_=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),$R=M(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),f_=M(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),U_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),p_=M(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),d_={name:"singlestoredb",tokenizerOptions:{reservedSelect:D_,reservedClauses:[...M_,...$R],reservedSetOperations:f_,reservedJoins:U_,reservedPhrases:p_,reservedKeywords:c_,reservedDataTypes:u_,reservedFunctionNames:P_,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:gs},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:$R}},h_=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],G_=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],H_=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],m_=M(["SELECT [ALL | DISTINCT]"]),B_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),JR=M(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),g_=M(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),F_=M(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),b_=M(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),Y_={name:"snowflake",tokenizerOptions:{reservedSelect:m_,reservedClauses:[...B_,...JR],reservedSetOperations:g_,reservedJoins:F_,reservedPhrases:b_,reservedKeywords:G_,reservedDataTypes:H_,reservedFunctionNames:h_,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:JR}},Dt=e=>e[e.length-1],gn=e=>e.sort((E,t)=>t.length-E.length||E.localeCompare(t)),Jt=e=>e.replace(/\s+/gu," "),YT=e=>/\n/.test(e),qe=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),qR=/\s+/uy,bE=e=>new RegExp(`(?:${e})`,"uy"),v_=e=>e.split("").map(E=>/ /gu.test(E)?"\\s+":`[${E.toUpperCase()}${E.toLowerCase()}]`).join(""),y_=e=>e+"(?:-"+e+")*",V_=({prefixes:e,requirePrefix:E})=>`(?:${e.map(v_).join("|")}${E?"":"|"})`,W_=e=>new RegExp(`(?:${e.map(qe).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),jR=(e,E=[])=>{const t=e==="open"?0:1,T=["()",...E].map(s=>s[t]);return bE(T.map(qe).join("|"))},X_=e=>bE(`${gn(e).map(qe).join("|")}`),x_=({rest:e,dashes:E})=>e||E?`(?![${e||""}${E?"-":""}])`:"",OE=(e,E={})=>{if(e.length===0)return/^\b$/u;const t=x_(E),T=gn(e).map(qe).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${T})${t}\\b`,"iuy")},vT=(e,E)=>{if(!e.length)return;const t=e.map(qe).join("|");return bE(`(?:${t})(?:${E})`)},w_=()=>{const e={"<":">","[":"]","(":")","{":"}"},E="{left}(?:(?!{right}').)*?{right}",t=Object.entries(e).map(([r,A])=>E.replace(/{left}/g,qe(r)).replace(/{right}/g,qe(A))),T=qe(Object.keys(e).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${T}])(?:(?!\k<tag>').)*?\k<tag>`}|${t.join("|")})'`},kR={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":w_()},Fn=e=>typeof e=="string"?kR[e]:"regex"in e?e.regex:V_(e)+kR[e.quote],K_=e=>bE(e.map(E=>"regex"in E?E.regex:Fn(E)).join("|")),bn=e=>e.map(Fn).join("|"),QR=e=>bE(bn(e)),$_=(e={})=>bE(Yn(e)),Yn=({first:e,rest:E,dashes:t,allowFirstCharNumber:T}={})=>{const s="\\p{Alphabetic}\\p{Mark}_",R="\\p{Decimal_Number}",r=qe(e??""),A=qe(E??""),S=T?`[${s}${R}${r}][${s}${R}${A}]*`:`[${s}${r}][${s}${R}${A}]*`;return t?y_(S):S};function vn(e,E){const t=e.slice(0,E).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}var J_=class{constructor(e,E){this.rules=e,this.dialectName=E,this.input="",this.index=0}tokenize(e){this.input=e,this.index=0;const E=[];let t;for(;this.index<this.input.length;){const T=this.getWhitespace();if(this.index<this.input.length){if(t=this.getNextToken(),!t)throw this.createParseError();E.push(be(He({},t),{precedingWhitespace:T}))}}return E}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:E,col:t}=vn(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${E} column ${t}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){qR.lastIndex=this.index;const e=qR.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;const E=e.regex.exec(this.input);if(E){const t=E[0],T={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(T.key=e.key(t)),this.index+=t.length,T}}},ZR=/\/\*/uy,q_=/([^/*]|\*[^/]|\/[^*])+/uy,j_=/\*\//uy,k_=class{constructor(){this.lastIndex=0}exec(e){let E="",t,T=0;if(t=this.matchSection(ZR,e))E+=t,T++;else return null;for(;T>0;)if(t=this.matchSection(ZR,e))E+=t,T++;else if(t=this.matchSection(j_,e))E+=t,T--;else if(t=this.matchSection(q_,e))E+=t;else return null;return[E]}matchSection(e,E){e.lastIndex=this.lastIndex;const t=e.exec(E);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}},Q_=class{constructor(e,E){this.cfg=e,this.dialectName=E,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){const t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],T=new J_(t,this.dialectName).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(T):T}buildRulesBeforeParams(e){var E,t;return this.validRules([{type:"BLOCK_COMMENT",regex:e.nestedBlockComments?new k_:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:W_((E=e.lineCommentTypes)!=null?E:["--"])},{type:"QUOTED_IDENTIFIER",regex:QR(e.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:OE((t=e.reservedPhrases)!=null?t:[],e.identChars),text:Ue},{type:"CASE",regex:/CASE\b/iuy,text:Ue},{type:"END",regex:/END\b/iuy,text:Ue},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:Ue},{type:"LIMIT",regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:Ue},{type:"RESERVED_CLAUSE",regex:OE(e.reservedClauses,e.identChars),text:Ue},{type:"RESERVED_SELECT",regex:OE(e.reservedSelect,e.identChars),text:Ue},{type:"RESERVED_SET_OPERATION",regex:OE(e.reservedSetOperations,e.identChars),text:Ue},{type:"WHEN",regex:/WHEN\b/iuy,text:Ue},{type:"ELSE",regex:/ELSE\b/iuy,text:Ue},{type:"THEN",regex:/THEN\b/iuy,text:Ue},{type:"RESERVED_JOIN",regex:OE(e.reservedJoins,e.identChars),text:Ue},{type:"AND",regex:/AND\b/iuy,text:Ue},{type:"OR",regex:/OR\b/iuy,text:Ue},{type:"XOR",regex:e.supportsXor?/XOR\b/iuy:void 0,text:Ue},{type:"RESERVED_FUNCTION_NAME",regex:OE(e.reservedFunctionNames,e.identChars),text:Ue},{type:"RESERVED_DATA_TYPE",regex:OE(e.reservedDataTypes,e.identChars),text:Ue},{type:"RESERVED_KEYWORD",regex:OE(e.reservedKeywords,e.identChars),text:Ue}])}buildRulesAfterParams(e){var E;return this.validRules([{type:"VARIABLE",regex:e.variableTypes?K_(e.variableTypes):void 0},{type:"STRING",regex:QR(e.stringTypes)},{type:"IDENTIFIER",regex:$_(e.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:jR("open",e.extraParens)},{type:"CLOSE_PAREN",regex:jR("close",e.extraParens)},{type:"OPERATOR",regex:X_(["+","-","/",">","<","=","<>","<=",">=","!=",...(E=e.operators)!=null?E:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"DOT",regex:/[.]/uy}])}buildParamRules(e,E){var t,T,s,R,r;const A={named:(E==null?void 0:E.named)||((t=e.paramTypes)==null?void 0:t.named)||[],quoted:(E==null?void 0:E.quoted)||((T=e.paramTypes)==null?void 0:T.quoted)||[],numbered:(E==null?void 0:E.numbered)||((s=e.paramTypes)==null?void 0:s.numbered)||[],positional:typeof(E==null?void 0:E.positional)=="boolean"?E.positional:(R=e.paramTypes)==null?void 0:R.positional,custom:(E==null?void 0:E.custom)||((r=e.paramTypes)==null?void 0:r.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:vT(A.named,Yn(e.paramChars||e.identChars)),key:S=>S.slice(1)},{type:"QUOTED_PARAMETER",regex:vT(A.quoted,bn(e.identTypes)),key:S=>(({tokenKey:n,quoteChar:O})=>n.replace(new RegExp(qe("\\"+O),"gu"),O))({tokenKey:S.slice(2,-1),quoteChar:S.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:vT(A.numbered,"[0-9]+"),key:S=>S.slice(1)},{type:"POSITIONAL_PARAMETER",regex:A.positional?/[?]/y:void 0},...A.custom.map(S=>{var n;return{type:"CUSTOM_PARAMETER",regex:bE(S.regex),key:(n=S.key)!=null?n:O=>O}})])}validRules(e){return e.filter(E=>!!E.regex)}},Ue=e=>Jt(e.toUpperCase()),zR=new Map,Z_=e=>{let E=zR.get(e);return E||(E=z_(e),zR.set(e,E)),E},z_=e=>({tokenizer:new Q_(e.tokenizerOptions,e.name),formatOptions:eC(e.formatOptions)}),eC=e=>({alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map(E=>[E,!0]))});function EC(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"?" ".repeat(10):e.useTabs?"	":" ".repeat(e.tabWidth)}function it(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"}var tC=class{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}};function TC(e){return e.map(sC).map(RC).map(rC).map(AC).map(nC)}var sC=(e,E,t)=>{if(Bn(e.type)){const T=SC(t,E);if(T&&T.text===".")return be(He({},e),{type:"IDENTIFIER",text:e.raw})}return e},RC=(e,E,t)=>{if(e.type==="RESERVED_FUNCTION_NAME"){const T=Bt(t,E);if(!T||!yn(T))return be(He({},e),{type:"RESERVED_KEYWORD"})}return e},rC=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Bt(t,E);if(T&&yn(T))return be(He({},e),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return e},AC=(e,E,t)=>{if(e.type==="IDENTIFIER"){const T=Bt(t,E);if(T&&Vn(T))return be(He({},e),{type:"ARRAY_IDENTIFIER"})}return e},nC=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Bt(t,E);if(T&&Vn(T))return be(He({},e),{type:"ARRAY_KEYWORD"})}return e},SC=(e,E)=>Bt(e,E,-1),Bt=(e,E,t=1)=>{let T=1;for(;e[E+T*t]&&OC(e[E+T*t]);)T++;return e[E+T*t]},yn=e=>e.type==="OPEN_PAREN"&&e.text==="(",Vn=e=>e.type==="OPEN_PAREN"&&e.text==="[",OC=e=>e.type==="BLOCK_COMMENT"||e.type==="LINE_COMMENT",Wn=class{constructor(e){this.tokenize=e,this.index=0,this.tokens=[],this.input=""}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:E,col:t}=vn(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${t}`}has(e){return e in Hn}};function yT(e){return e[0]}var q=new Wn(e=>[]),fE=([[e]])=>e,pe=e=>({type:"keyword",tokenType:e.type,text:e.text,raw:e.raw}),er=e=>({type:"data_type",text:e.text,raw:e.raw}),de=(e,{leading:E,trailing:t})=>(E!=null&&E.length&&(e=be(He({},e),{leadingComments:E})),t!=null&&t.length&&(e=be(He({},e),{trailingComments:t})),e),IC=(e,{leading:E,trailing:t})=>{if(E!=null&&E.length){const[T,...s]=e;e=[de(T,{leading:E}),...s]}if(t!=null&&t.length){const T=e.slice(0,-1),s=e[e.length-1];e=[...T,de(s,{trailing:t})]}return e},iC={Lexer:q,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{const E=e[e.length-1];return E&&!E.hasSemicolon?E.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[q.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[q.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[E]])=>({type:"statement",children:e,hasSemicolon:E.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,E])=>[...e,...E]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:fE},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[q.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:yT},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[q.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,E,t,T])=>{if(T){const[s,R]=T;return{type:"limit_clause",limitKw:de(pe(e),{trailing:E}),offset:t,count:R}}else return{type:"limit_clause",limitKw:de(pe(e),{trailing:E}),count:t}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[q.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[E,t]])=>({type:"clause",nameKw:pe(e),children:[E,...t]})},{name:"select_clause",symbols:[q.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:"clause",nameKw:pe(e),children:[]})},{name:"all_columns_asterisk",symbols:[q.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[q.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,E])=>({type:"clause",nameKw:pe(e),children:E})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[q.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,E])=>({type:"set_operation",nameKw:pe(e),children:E})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:yT},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,E])=>de(e,{trailing:E})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,E])=>de(E,{leading:e})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([e,E])=>de(E,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:fE},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:fE},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:fE},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:fE},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:fE},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:fE},{name:"array_subscript",symbols:[q.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:de({type:"identifier",quoted:!1,text:e.text},{trailing:E}),parenthesis:t})},{name:"array_subscript",symbols:[q.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:de(pe(e),{trailing:E}),parenthesis:t})},{name:"function_call",symbols:[q.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,E,t])=>({type:"function_call",nameKw:de(pe(e),{trailing:E}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",q.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([e,E,t,T,[s]])=>({type:"property_access",object:de(e,{trailing:E}),property:de(s,{leading:T})})},{name:"between_predicate",symbols:[q.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",q.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([e,E,t,T,s,R,r])=>({type:"between_predicate",betweenKw:pe(e),expr1:IC(t,{leading:E,trailing:T}),andKw:pe(s),expr2:[de(r,{leading:R})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:yT},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[q.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",q.has("END")?{type:"END"}:END],postprocess:([e,E,t,T,s])=>({type:"case_expression",caseKw:de(pe(e),{trailing:E}),endKw:pe(s),expr:t||[],clauses:T})},{name:"case_clause",symbols:[q.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",q.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,E,t,T,s,R])=>({type:"case_when",whenKw:de(pe(e),{trailing:E}),thenKw:de(pe(T),{trailing:s}),condition:t,result:R})},{name:"case_clause",symbols:[q.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,E,t])=>({type:"case_else",elseKw:de(pe(e),{trailing:E}),result:t})},{name:"comma$subexpression$1",symbols:[q.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[q.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"operator$subexpression$1",symbols:[q.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"identifier$subexpression$1",symbols:[q.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[q.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[q.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:"identifier",quoted:e.type!=="IDENTIFIER",text:e.text})},{name:"parameter$subexpression$1",symbols:[q.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:"parameter",key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[q.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[q.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:"literal",text:e.text})},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>pe(e)},{name:"data_type$subexpression$1",symbols:[q.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[e]])=>er(e)},{name:"data_type",symbols:[q.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([e,E,t])=>({type:"parameterized_data_type",dataType:de(er(e),{trailing:E}),parenthesis:t})},{name:"logic_operator$subexpression$1",symbols:[q.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[q.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[q.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[e]])=>pe(e)},{name:"other_keyword$subexpression$1",symbols:[q.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[q.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[q.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[q.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>pe(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[q.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:"line_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[q.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:"block_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},oC=iC,{Parser:NC,Grammar:aC}=Uo;function _C(e){let E={};const t=new Wn(s=>[...TC(e.tokenize(s,E)),mn(s.length)]),T=new NC(aC.fromCompiled(oC),{lexer:t});return{parse:(s,R)=>{E=R;const{results:r}=T.feed(s);if(r.length===1)return r[0];throw r.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(r,void 0,2)}`)}}}var Xn=class{constructor(e){this.indentation=e,this.items=[]}add(...e){for(const E of e)switch(E){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;CC(Dt(this.items));)this.items.pop()}trimWhitespace(){for(;lC(Dt(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(Dt(this.items)){case 3:this.items.pop(),this.items.push(e);break;case 4:break;default:this.items.push(e);break}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(6)}toString(){return this.items.map(e=>this.itemToString(e)).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return e}}},CC=e=>e===0||e===6,lC=e=>e===0||e===6||e===3;function Er(e,E){if(E==="standard")return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),E==="tabularLeft"?e=e.padEnd(9," "):e=e.padStart(9," "),e+["",...t].join(" ")}function tr(e){return Vo(e)||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="LIMIT"}var VT="top-level",LC="block-level",xn=class{constructor(e){this.indent=e,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(VT)}increaseBlockLevel(){this.indentTypes.push(LC)}decreaseTopLevel(){this.indentTypes.length>0&&Dt(this.indentTypes)===VT&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===VT;);}},cC=class extends Xn{constructor(e){super(new xn("")),this.expressionWidth=e,this.length=0,this.trailingSpace=!1}add(...e){if(e.forEach(E=>this.addToLength(E)),this.length>this.expressionWidth)throw new Rs;super.add(...e)}addToLength(e){if(typeof e=="string")this.length+=e.length,this.trailingSpace=!1;else{if(e===4||e===3)throw new Rs;e===5||e===6||e===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(e===2||e===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},Rs=class extends Error{},uC=class rs{constructor({cfg:E,dialectCfg:t,params:T,layout:s,inline:R=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=E,this.dialectCfg=t,this.inline=R,this.params=T,this.layout=s}format(E){for(this.nodes=E,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(E){this.formatComments(E.leadingComments),this.formatNodeWithoutComments(E),this.formatComments(E.trailingComments)}formatNodeWithoutComments(E){switch(E.type){case"function_call":return this.formatFunctionCall(E);case"parameterized_data_type":return this.formatParameterizedDataType(E);case"array_subscript":return this.formatArraySubscript(E);case"property_access":return this.formatPropertyAccess(E);case"parenthesis":return this.formatParenthesis(E);case"between_predicate":return this.formatBetweenPredicate(E);case"case_expression":return this.formatCaseExpression(E);case"case_when":return this.formatCaseWhen(E);case"case_else":return this.formatCaseElse(E);case"clause":return this.formatClause(E);case"set_operation":return this.formatSetOperation(E);case"limit_clause":return this.formatLimitClause(E);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(E);case"literal":return this.formatLiteral(E);case"identifier":return this.formatIdentifier(E);case"parameter":return this.formatParameter(E);case"operator":return this.formatOperator(E);case"comma":return this.formatComma(E);case"line_comment":return this.formatLineComment(E);case"block_comment":return this.formatBlockComment(E);case"data_type":return this.formatDataType(E);case"keyword":return this.formatKeywordNode(E)}}formatFunctionCall(E){this.withComments(E.nameKw,()=>{this.layout.add(this.showFunctionKw(E.nameKw))}),this.formatNode(E.parenthesis)}formatParameterizedDataType(E){this.withComments(E.dataType,()=>{this.layout.add(this.showDataType(E.dataType))}),this.formatNode(E.parenthesis)}formatArraySubscript(E){let t;switch(E.array.type){case"data_type":t=this.showDataType(E.array);break;case"keyword":t=this.showKw(E.array);break;default:t=this.showIdentifier(E.array);break}this.withComments(E.array,()=>{this.layout.add(t)}),this.formatNode(E.parenthesis)}formatPropertyAccess(E){this.formatNode(E.object),this.layout.add(1,"."),this.formatNode(E.property)}formatParenthesis(E){const t=this.formatInlineExpression(E.children);t?(this.layout.add(E.openParen),this.layout.add(...t.getLayoutItems()),this.layout.add(1,E.closeParen,0)):(this.layout.add(E.openParen,3),it(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(E.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,E.closeParen,0))}formatBetweenPredicate(E){this.layout.add(this.showKw(E.betweenKw),0),this.layout=this.formatSubExpression(E.expr1),this.layout.add(1,0,this.showNonTabularKw(E.andKw),0),this.layout=this.formatSubExpression(E.expr2),this.layout.add(0)}formatCaseExpression(E){this.formatNode(E.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(E.expr),this.layout=this.formatSubExpression(E.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(E.endKw)}formatCaseWhen(E){this.layout.add(3,5),this.formatNode(E.whenKw),this.layout=this.formatSubExpression(E.condition),this.formatNode(E.thenKw),this.layout=this.formatSubExpression(E.result)}formatCaseElse(E){this.layout.add(3,5),this.formatNode(E.elseKw),this.layout=this.formatSubExpression(E.result)}formatClause(E){this.isOnelineClause(E)?this.formatClauseInOnelineStyle(E):it(this.cfg)?this.formatClauseInTabularStyle(E):this.formatClauseInIndentedStyle(E)}isOnelineClause(E){return this.dialectCfg.onelineClauses[E.nameKw.text]}formatClauseInIndentedStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout=this.formatSubExpression(E.children)}formatClauseInTabularStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(E.children)}formatLimitClause(E){this.withComments(E.limitKw,()=>{this.layout.add(3,5,this.showKw(E.limitKw))}),this.layout.indentation.increaseTopLevel(),it(this.cfg)?this.layout.add(0):this.layout.add(3,5),E.offset?(this.layout=this.formatSubExpression(E.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(E.count)):this.layout=this.formatSubExpression(E.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(E){this.layout.add("*",0)}formatLiteral(E){this.layout.add(E.text,0)}formatIdentifier(E){this.layout.add(this.showIdentifier(E),0)}formatParameter(E){this.layout.add(this.params.get(E),0)}formatOperator({text:E}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(E)?this.layout.add(1,E):E===":"?this.layout.add(1,E,0):this.layout.add(E,0)}formatComma(E){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(E,t){this.formatComments(E.leadingComments),t(),this.formatComments(E.trailingComments)}formatComments(E){E&&E.forEach(t=>{t.type==="line_comment"?this.formatLineComment(t):this.formatBlockComment(t)})}formatLineComment(E){YT(E.precedingWhitespace||"")?this.layout.add(3,5,E.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,E.text,4,5):this.layout.add(E.text,4,5)}formatBlockComment(E){this.isMultilineBlockComment(E)?(this.splitBlockComment(E.text).forEach(t=>{this.layout.add(3,5,t)}),this.layout.add(3,5)):this.layout.add(E.text,0)}isMultilineBlockComment(E){return YT(E.text)||YT(E.precedingWhitespace||"")}isDocComment(E){const t=E.split(/\n/);return/^\/\*\*?$/.test(t[0])&&t.slice(1,t.length-1).every(T=>/^\s*\*/.test(T))&&/^\s*\*\/$/.test(Dt(t))}splitBlockComment(E){return this.isDocComment(E)?E.split(/\n/).map(t=>/^\s*\*/.test(t)?" "+t.replace(/^\s*/,""):t):E.split(/\n/).map(t=>t.replace(/^\s*/,""))}formatSubExpression(E){return new rs({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(E)}formatInlineExpression(E){const t=this.params.getPositionalParameterIndex();try{return new rs({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new cC(this.cfg.expressionWidth),inline:!0}).format(E)}catch(T){if(T instanceof Rs){this.params.setPositionalParameterIndex(t);return}else throw T}}formatKeywordNode(E){switch(E.tokenType){case"RESERVED_JOIN":return this.formatJoin(E);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(E);default:return this.formatKeyword(E)}}formatJoin(E){it(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0)}formatKeyword(E){this.layout.add(this.showKw(E),0)}formatLogicalOperator(E){this.cfg.logicalOperatorNewline==="before"?it(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0):this.layout.add(this.showKw(E),3,5)}formatDataType(E){this.layout.add(this.showDataType(E),0)}showKw(E){return tr(E.tokenType)?Er(this.showNonTabularKw(E),this.cfg.indentStyle):this.showNonTabularKw(E)}showNonTabularKw(E){switch(this.cfg.keywordCase){case"preserve":return Jt(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showFunctionKw(E){return tr(E.tokenType)?Er(this.showNonTabularFunctionKw(E),this.cfg.indentStyle):this.showNonTabularFunctionKw(E)}showNonTabularFunctionKw(E){switch(this.cfg.functionCase){case"preserve":return Jt(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showIdentifier(E){if(E.quoted)return E.text;switch(this.cfg.identifierCase){case"preserve":return E.text;case"upper":return E.text.toUpperCase();case"lower":return E.text.toLowerCase()}}showDataType(E){switch(this.cfg.dataTypeCase){case"preserve":return Jt(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}},PC=class{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new tC(this.cfg.params)}format(e){const E=this.parse(e);return this.formatAst(E).trimEnd()}parse(e){return _C(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map(E=>this.formatStatement(E)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const E=new uC({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new Xn(new xn(EC(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(3,";"):E.add(2,";")),E.toString()}},As=class extends Error{};function DC(e){const E=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const t of E)if(t in e)throw new As(`${t} config is no more supported.`);if(e.expressionWidth<=0)throw new As(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);return e.params&&!MC(e.params)&&console.warn('WARNING: All "params" option values should be strings.'),e}function MC(e){return(e instanceof Array?e:Object.values(e)).every(t=>typeof t=="string")}var wn={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},fC=Object.keys(wn),UC={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},pC=(e,E={})=>{if(typeof E.language=="string"&&!fC.includes(E.language))throw new As(`Unsupported SQL dialect: ${E.language}`);const t=wn[E.language||"sql"];return dC(e,be(He({},E),{dialect:Gn[t]}))},dC=(e,E)=>{var t=E,{dialect:T}=t,s=Go(t,["dialect"]);if(typeof e!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof e);const R=DC(He(He({},UC),s));return new PC(Z_(T),R).format(e)};const hC={class:"flex items-center space-x-3"},GC={class:"font-bold text-lg"},HC={key:0,class:"px-1 py-0.5 rounded text-xs bg-sky-600 text-white"},mC={key:1,class:"px-1 py-0.5 rounded text-xs bg-emerald-600 text-white"},BC={key:2},gC=["textContent"],FC={key:0,class:"mt-4 ml-4"},bC={class:""},YC={class:"mt-3 text-stone-400 text-sm"},vC=["textContent"],yC=["textContent"],VC=Ye({__name:"QueryItem",props:{query:{}},setup(e){const E=e,t=gE({isOpen:!0,isFormatted:!1});function T(s){const R="text/plain",r=new Blob([s],{type:R}),A=[new ClipboardItem({[R]:r})];navigator.clipboard.write(A)}return(s,R)=>{const r=_T("highlightjs");return Y(),k("div",null,[B("div",hC,[B("button",{class:"flex items-center space-x-1",onClick:R[0]||(R[0]=A=>t.isOpen=!t.isOpen)},[Ne(Se(ro),{class:$e(["size-4",{"-rotate-90":!t.isOpen}])},null,8,["class"]),B("span",GC,Le(s.query.name),1)]),E.query.cached?(Y(),k("span",HC,"cached")):Oe("",!0),E.query.async?(Y(),k("span",mC,"async")):Oe("",!0),t.isOpen?(Y(),k("div",BC,[B("span",{onClick:R[1]||(R[1]=A=>t.isFormatted=!t.isFormatted),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Format SQL query",textContent:Le(t.isFormatted?"unformat":"format")},null,8,gC),B("span",{onClick:R[2]||(R[2]=A=>T(s.query.sql)),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Copy SQL query to clipboard"},"copy")])):Oe("",!0)]),t.isOpen?(Y(),k("div",FC,[B("div",bC,[Ne(r,{language:"sql",code:t.isFormatted?Se(pC)(s.query.sql):s.query.sql},null,8,["code"])]),B("div",YC,[B("div",{textContent:Le(s.query.source[0])},null,8,vC),s.query.source.length>1?(Y(!0),k(ue,{key:0},tE(s.query.source.slice(1),A=>(Y(),k("div",{class:"pl-4",textContent:Le("↳ "+A)},null,8,yC))),256)):Oe("",!0)])])):Oe("",!0)])}}}),WC={class:"flex flex-col space-y-8"},XC=Ye({__name:"QueriesPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>(Y(),De(FE,null,{default:TE(()=>[B("div",WC,[(Y(!0),k(ue,null,tE(E.currentRequest.queries,s=>(Y(),De(VC,{key:s.id,query:s},null,8,["query"]))),128))])]),_:1}))}}),xC={key:0},wC=B("div",{class:"text-gray-500"},"No jobs enqueued.",-1),KC=[wC],$C={key:1,class:"my-4 mx-6 divide-y divide-stone-300"},JC=B("thead",null,[B("tr",null,[B("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"},"Job"),B("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Args"),B("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Logs")])],-1),qC={class:"divide-y divide-stone-200"},jC={class:"whitespace-nowrap p-4 pr-8 text-stone-900"},kC=["textContent"],QC={class:"text-stone-600 text-sm"},ZC=["textContent"],zC=["textContent"],el={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm"},El={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm text-stone-500"},tl=["innerHTML"],Tl=Ye({__name:"JobsPanel",props:{jobs:{}},setup(e){const E=e;function t(T){return T==null?"-":new Date(T*1e3).toLocaleString()}return(T,s)=>{const R=_T("highlightjs");return Y(),De(FE,null,{default:TE(()=>[E.jobs.length==0?(Y(),k("div",xC,KC)):Oe("",!0),E.jobs.length>0?(Y(),k("table",$C,[JC,B("tbody",qC,[(Y(!0),k(ue,null,tE(E.jobs,(r,A)=>(Y(),k("tr",{key:r.id},[B("td",jC,[B("div",{class:"text-lg font-bold",textContent:Le(r.class)},null,8,kC),B("div",QC,[B("div",{textContent:Le("Queue: "+r.queue)},null,8,ZC),B("div",{textContent:Le("At: "+t(r.scheduled_at))},null,8,zC)])]),B("td",el,[Ne(R,{language:"json",code:JSON.stringify(r.args,null,2)},null,8,["code"])]),B("td",El,[(Y(!0),k(ue,null,tE(r.logs,(S,n)=>(Y(),k("div",{innerHTML:(n>0?"  ".repeat(n)+"↳ ":"")+S,class:""},null,8,tl))),256))])]))),128))])])):Oe("",!0)]),_:1})}}}),sl={key:0},Rl=B("div",{class:"text-gray-500"},"No logs to show. Are you using the correct minimum level in your config?",-1),rl=[Rl],Al={class:"flex items-center space-y-1 space-x-3"},nl={class:"w-24 text-right text-gray-400"},Sl={class:"w-16 text-center"},Ol=["title"],Il=["innerHTML"],il=Ye({__name:"LogsPanel",props:{logs:{}},setup(e){const E=e;function t(T){return(T.progname||T.message||"").replace(" ","&nbsp;&nbsp;")}return(T,s)=>(Y(),De(FE,null,{default:TE(()=>[E.logs.length==0?(Y(),k("div",sl,rl)):Oe("",!0),(Y(!0),k(ue,null,tE(E.logs,R=>(Y(),k("div",Al,[B("div",nl,Le(R.time),1),B("div",Sl,[B("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium",{"bg-stone-400":R.severity==0,"bg-blue-500":R.severity==1,"bg-amber-400":R.severity==2,"bg-red-400":R.severity==2,"bg-fuchsia-500":R.severity>=3}]),title:R.severity_label},Le(R.severity_label),11,Ol)]),B("div",{class:"text-gray-800",innerHTML:t(R)},null,8,Il)]))),256))]),_:1}))}}),ol={class:"p-4"},Nl=Ye({__name:"DebugPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>{const s=_T("highlightjs");return Y(),k("div",ol,[Ne(s,{language:"json",code:JSON.stringify(E.currentRequest,null,2)},null,8,["code"])])}}}),al={class:"flex flex-col space-y-8"},_l={class:"space-y-3"},Cl=["textContent"],ll={class:"ml-4"},Ll={key:0},cl=Ye({__name:"MessagesPanel",props:{messages:{}},setup(e){const E=e;return(t,T)=>{const s=_T("highlightjs");return Y(),De(FE,null,{default:TE(()=>[B("div",al,[(Y(!0),k(ue,null,tE(E.messages,(R,r)=>(Y(),k("div",_l,[B("div",{class:"font-bold text-lg",textContent:Le(R.msg)},null,8,Cl),B("div",ll,[R.extra?Oe("",!0):(Y(),k("div",Ll,"–")),R.extra?(Y(),De(s,{key:1,language:"json",code:JSON.stringify(R.extra)},null,8,["code"])):Oe("",!0)])]))),256))])]),_:1})}}});class ul{constructor(E){RE(this,"id");RE(this,"meta");RE(this,"models");RE(this,"queries");RE(this,"jobs");RE(this,"messages");RE(this,"cache");RE(this,"logs");this.id=(E==null?void 0:E.id)||"null",this.meta=(E==null?void 0:E.meta)||{},this.models=(E==null?void 0:E.models)||{},this.queries=(E==null?void 0:E.queries)||[],this.jobs=(E==null?void 0:E.jobs)||[],this.messages=(E==null?void 0:E.messages)||[],this.cache=(E==null?void 0:E.cache)||[],this.logs=(E==null?void 0:E.logs)||[]}get modelsCount(){return Object.values(this.models).reduce((E,t)=>E+t,0)}get queryCount(){return this.queries.length}get jobsCount(){return this.jobs.length}get messagesCount(){return this.messages.length}get cacheCount(){return this.cache.reduce((E,t)=>(E.indexOf(t.transaction_id)===-1&&E.push(t.transaction_id),E),[]).length}get logsCount(){return this.logs.length}get pathWithVerb(){return`${this.meta.method.toUpperCase()} ${this.meta.path}`}get dataForTabs(){return{messages:{label:"Debug",count:this.messagesCount},models:{label:"Models",count:this.modelsCount},queries:{label:"Queries",count:this.queryCount},jobs:{label:"Jobs",count:this.jobsCount},cache:{label:"Cache",count:this.cacheCount}}}}let ns=bA("requests",{state:()=>({requests:[],currentRequest:null}),actions:{addRequests(e){const E=[];return e.forEach(t=>{this.requests.find(T=>T.id===t.id)||this.requests.push(new ul(t)),E.push(t.id)}),E},setCurrentRequestById(e){this.currentRequest=this.requests.find(E=>E.id===e)},clearRequests(){this.requests=[],this.currentRequest=null}}});function Pl(e,E,t){switch(t.length){case 0:return e.call(E);case 1:return e.call(E,t[0]);case 2:return e.call(E,t[0],t[1]);case 3:return e.call(E,t[0],t[1],t[2])}return e.apply(E,t)}var Kn=Pl;function Dl(e){return e}var $n=Dl,Ml=Kn,Tr=Math.max;function fl(e,E,t){return E=Tr(E===void 0?e.length-1:E,0),function(){for(var T=arguments,s=-1,R=Tr(T.length-E,0),r=Array(R);++s<R;)r[s]=T[E+s];s=-1;for(var A=Array(E+1);++s<E;)A[s]=T[s];return A[E]=t(r),Ml(e,this,A)}}var Ul=fl;function pl(e){return function(){return e}}var dl=pl,hl=typeof XE=="object"&&XE&&XE.Object===Object&&XE,Jn=hl,Gl=Jn,Hl=typeof self=="object"&&self&&self.Object===Object&&self,ml=Gl||Hl||Function("return this")(),Tt=ml,Bl=Tt,gl=Bl.Symbol,qn=gl,sr=qn,jn=Object.prototype,Fl=jn.hasOwnProperty,bl=jn.toString,ot=sr?sr.toStringTag:void 0;function Yl(e){var E=Fl.call(e,ot),t=e[ot];try{e[ot]=void 0;var T=!0}catch{}var s=bl.call(e);return T&&(E?e[ot]=t:delete e[ot]),s}var vl=Yl,yl=Object.prototype,Vl=yl.toString;function Wl(e){return Vl.call(e)}var Xl=Wl,Rr=qn,xl=vl,wl=Xl,Kl="[object Null]",$l="[object Undefined]",rr=Rr?Rr.toStringTag:void 0;function Jl(e){return e==null?e===void 0?$l:Kl:rr&&rr in Object(e)?xl(e):wl(e)}var PT=Jl;function ql(e){var E=typeof e;return e!=null&&(E=="object"||E=="function")}var cE=ql,jl=PT,kl=cE,Ql="[object AsyncFunction]",Zl="[object Function]",zl="[object GeneratorFunction]",eL="[object Proxy]";function EL(e){if(!kl(e))return!1;var E=jl(e);return E==Zl||E==zl||E==Ql||E==eL}var Fs=EL,tL=Tt,TL=tL["__core-js_shared__"],sL=TL,WT=sL,Ar=function(){var e=/[^.]+$/.exec(WT&&WT.keys&&WT.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function RL(e){return!!Ar&&Ar in e}var rL=RL,AL=Function.prototype,nL=AL.toString;function SL(e){if(e!=null){try{return nL.call(e)}catch{}try{return e+""}catch{}}return""}var OL=SL,IL=Fs,iL=rL,oL=cE,NL=OL,aL=/[\\^$.*+?()[\]{}|]/g,_L=/^\[object .+?Constructor\]$/,CL=Function.prototype,lL=Object.prototype,LL=CL.toString,cL=lL.hasOwnProperty,uL=RegExp("^"+LL.call(cL).replace(aL,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function PL(e){if(!oL(e)||iL(e))return!1;var E=IL(e)?uL:_L;return E.test(NL(e))}var DL=PL;function ML(e,E){return e==null?void 0:e[E]}var fL=ML,UL=DL,pL=fL;function dL(e,E){var t=pL(e,E);return UL(t)?t:void 0}var bs=dL,hL=bs,GL=function(){try{var e=hL(Object,"defineProperty");return e({},"",{}),e}catch{}}(),kn=GL,HL=dl,nr=kn,mL=$n,BL=nr?function(e,E){return nr(e,"toString",{configurable:!0,enumerable:!1,value:HL(E),writable:!0})}:mL,gL=BL,FL=800,bL=16,YL=Date.now;function vL(e){var E=0,t=0;return function(){var T=YL(),s=bL-(T-t);if(t=T,s>0){if(++E>=FL)return arguments[0]}else E=0;return e.apply(void 0,arguments)}}var yL=vL,VL=gL,WL=yL,XL=WL(VL),xL=XL,wL=$n,KL=Ul,$L=xL;function JL(e,E){return $L(KL(e,E,wL),e+"")}var Qn=JL;function qL(){this.__data__=[],this.size=0}var jL=qL;function kL(e,E){return e===E||e!==e&&E!==E}var DT=kL,QL=DT;function ZL(e,E){for(var t=e.length;t--;)if(QL(e[t][0],E))return t;return-1}var MT=ZL,zL=MT,ec=Array.prototype,Ec=ec.splice;function tc(e){var E=this.__data__,t=zL(E,e);if(t<0)return!1;var T=E.length-1;return t==T?E.pop():Ec.call(E,t,1),--this.size,!0}var Tc=tc,sc=MT;function Rc(e){var E=this.__data__,t=sc(E,e);return t<0?void 0:E[t][1]}var rc=Rc,Ac=MT;function nc(e){return Ac(this.__data__,e)>-1}var Sc=nc,Oc=MT;function Ic(e,E){var t=this.__data__,T=Oc(t,e);return T<0?(++this.size,t.push([e,E])):t[T][1]=E,this}var ic=Ic,oc=jL,Nc=Tc,ac=rc,_c=Sc,Cc=ic;function st(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}st.prototype.clear=oc;st.prototype.delete=Nc;st.prototype.get=ac;st.prototype.has=_c;st.prototype.set=Cc;var fT=st,lc=fT;function Lc(){this.__data__=new lc,this.size=0}var cc=Lc;function uc(e){var E=this.__data__,t=E.delete(e);return this.size=E.size,t}var Pc=uc;function Dc(e){return this.__data__.get(e)}var Mc=Dc;function fc(e){return this.__data__.has(e)}var Uc=fc,pc=bs,dc=Tt,hc=pc(dc,"Map"),Zn=hc,Gc=bs,Hc=Gc(Object,"create"),UT=Hc,Sr=UT;function mc(){this.__data__=Sr?Sr(null):{},this.size=0}var Bc=mc;function gc(e){var E=this.has(e)&&delete this.__data__[e];return this.size-=E?1:0,E}var Fc=gc,bc=UT,Yc="__lodash_hash_undefined__",vc=Object.prototype,yc=vc.hasOwnProperty;function Vc(e){var E=this.__data__;if(bc){var t=E[e];return t===Yc?void 0:t}return yc.call(E,e)?E[e]:void 0}var Wc=Vc,Xc=UT,xc=Object.prototype,wc=xc.hasOwnProperty;function Kc(e){var E=this.__data__;return Xc?E[e]!==void 0:wc.call(E,e)}var $c=Kc,Jc=UT,qc="__lodash_hash_undefined__";function jc(e,E){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=Jc&&E===void 0?qc:E,this}var kc=jc,Qc=Bc,Zc=Fc,zc=Wc,eu=$c,Eu=kc;function Rt(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}Rt.prototype.clear=Qc;Rt.prototype.delete=Zc;Rt.prototype.get=zc;Rt.prototype.has=eu;Rt.prototype.set=Eu;var tu=Rt,Or=tu,Tu=fT,su=Zn;function Ru(){this.size=0,this.__data__={hash:new Or,map:new(su||Tu),string:new Or}}var ru=Ru;function Au(e){var E=typeof e;return E=="string"||E=="number"||E=="symbol"||E=="boolean"?e!=="__proto__":e===null}var nu=Au,Su=nu;function Ou(e,E){var t=e.__data__;return Su(E)?t[typeof E=="string"?"string":"hash"]:t.map}var pT=Ou,Iu=pT;function iu(e){var E=Iu(this,e).delete(e);return this.size-=E?1:0,E}var ou=iu,Nu=pT;function au(e){return Nu(this,e).get(e)}var _u=au,Cu=pT;function lu(e){return Cu(this,e).has(e)}var Lu=lu,cu=pT;function uu(e,E){var t=cu(this,e),T=t.size;return t.set(e,E),this.size+=t.size==T?0:1,this}var Pu=uu,Du=ru,Mu=ou,fu=_u,Uu=Lu,pu=Pu;function rt(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}rt.prototype.clear=Du;rt.prototype.delete=Mu;rt.prototype.get=fu;rt.prototype.has=Uu;rt.prototype.set=pu;var du=rt,hu=fT,Gu=Zn,Hu=du,mu=200;function Bu(e,E){var t=this.__data__;if(t instanceof hu){var T=t.__data__;if(!Gu||T.length<mu-1)return T.push([e,E]),this.size=++t.size,this;t=this.__data__=new Hu(T)}return t.set(e,E),this.size=t.size,this}var gu=Bu,Fu=fT,bu=cc,Yu=Pc,vu=Mc,yu=Uc,Vu=gu;function At(e){var E=this.__data__=new Fu(e);this.size=E.size}At.prototype.clear=bu;At.prototype.delete=Yu;At.prototype.get=vu;At.prototype.has=yu;At.prototype.set=Vu;var Wu=At,Ir=kn;function Xu(e,E,t){E=="__proto__"&&Ir?Ir(e,E,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[E]=t}var Ys=Xu,xu=Ys,wu=DT;function Ku(e,E,t){(t!==void 0&&!wu(e[E],t)||t===void 0&&!(E in e))&&xu(e,E,t)}var zn=Ku;function $u(e){return function(E,t,T){for(var s=-1,R=Object(E),r=T(E),A=r.length;A--;){var S=r[e?A:++s];if(t(R[S],S,R)===!1)break}return E}}var Ju=$u,qu=Ju,ju=qu(),ku=ju,TT={exports:{}};TT.exports;(function(e,E){var t=Tt,T=E&&!E.nodeType&&E,s=T&&!0&&e&&!e.nodeType&&e,R=s&&s.exports===T,r=R?t.Buffer:void 0,A=r?r.allocUnsafe:void 0;function S(n,O){if(O)return n.slice();var i=n.length,o=A?A(i):new n.constructor(i);return n.copy(o),o}e.exports=S})(TT,TT.exports);var Qu=TT.exports,Zu=Tt,zu=Zu.Uint8Array,eP=zu,ir=eP;function EP(e){var E=new e.constructor(e.byteLength);return new ir(E).set(new ir(e)),E}var tP=EP,TP=tP;function sP(e,E){var t=E?TP(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}var RP=sP;function rP(e,E){var t=-1,T=e.length;for(E||(E=Array(T));++t<T;)E[t]=e[t];return E}var AP=rP,nP=cE,or=Object.create,SP=function(){function e(){}return function(E){if(!nP(E))return{};if(or)return or(E);e.prototype=E;var t=new e;return e.prototype=void 0,t}}(),OP=SP;function IP(e,E){return function(t){return e(E(t))}}var iP=IP,oP=iP,NP=oP(Object.getPrototypeOf,Object),eS=NP,aP=Object.prototype;function _P(e){var E=e&&e.constructor,t=typeof E=="function"&&E.prototype||aP;return e===t}var ES=_P,CP=OP,lP=eS,LP=ES;function cP(e){return typeof e.constructor=="function"&&!LP(e)?CP(lP(e)):{}}var uP=cP;function PP(e){return e!=null&&typeof e=="object"}var gt=PP,DP=PT,MP=gt,fP="[object Arguments]";function UP(e){return MP(e)&&DP(e)==fP}var pP=UP,Nr=pP,dP=gt,tS=Object.prototype,hP=tS.hasOwnProperty,GP=tS.propertyIsEnumerable,HP=Nr(function(){return arguments}())?Nr:function(e){return dP(e)&&hP.call(e,"callee")&&!GP.call(e,"callee")},TS=HP,mP=Array.isArray,sS=mP,BP=9007199254740991;function gP(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=BP}var RS=gP,FP=Fs,bP=RS;function YP(e){return e!=null&&bP(e.length)&&!FP(e)}var vs=YP,vP=vs,yP=gt;function VP(e){return yP(e)&&vP(e)}var WP=VP,sT={exports:{}};function XP(){return!1}var xP=XP;sT.exports;(function(e,E){var t=Tt,T=xP,s=E&&!E.nodeType&&E,R=s&&!0&&e&&!e.nodeType&&e,r=R&&R.exports===s,A=r?t.Buffer:void 0,S=A?A.isBuffer:void 0,n=S||T;e.exports=n})(sT,sT.exports);var rS=sT.exports,wP=PT,KP=eS,$P=gt,JP="[object Object]",qP=Function.prototype,jP=Object.prototype,AS=qP.toString,kP=jP.hasOwnProperty,QP=AS.call(Object);function ZP(e){if(!$P(e)||wP(e)!=JP)return!1;var E=KP(e);if(E===null)return!0;var t=kP.call(E,"constructor")&&E.constructor;return typeof t=="function"&&t instanceof t&&AS.call(t)==QP}var zP=ZP,eD=PT,ED=RS,tD=gt,TD="[object Arguments]",sD="[object Array]",RD="[object Boolean]",rD="[object Date]",AD="[object Error]",nD="[object Function]",SD="[object Map]",OD="[object Number]",ID="[object Object]",iD="[object RegExp]",oD="[object Set]",ND="[object String]",aD="[object WeakMap]",_D="[object ArrayBuffer]",CD="[object DataView]",lD="[object Float32Array]",LD="[object Float64Array]",cD="[object Int8Array]",uD="[object Int16Array]",PD="[object Int32Array]",DD="[object Uint8Array]",MD="[object Uint8ClampedArray]",fD="[object Uint16Array]",UD="[object Uint32Array]",oe={};oe[lD]=oe[LD]=oe[cD]=oe[uD]=oe[PD]=oe[DD]=oe[MD]=oe[fD]=oe[UD]=!0;oe[TD]=oe[sD]=oe[_D]=oe[RD]=oe[CD]=oe[rD]=oe[AD]=oe[nD]=oe[SD]=oe[OD]=oe[ID]=oe[iD]=oe[oD]=oe[ND]=oe[aD]=!1;function pD(e){return tD(e)&&ED(e.length)&&!!oe[eD(e)]}var dD=pD;function hD(e){return function(E){return e(E)}}var GD=hD,RT={exports:{}};RT.exports;(function(e,E){var t=Jn,T=E&&!E.nodeType&&E,s=T&&!0&&e&&!e.nodeType&&e,R=s&&s.exports===T,r=R&&t.process,A=function(){try{var S=s&&s.require&&s.require("util").types;return S||r&&r.binding&&r.binding("util")}catch{}}();e.exports=A})(RT,RT.exports);var HD=RT.exports,mD=dD,BD=GD,ar=HD,_r=ar&&ar.isTypedArray,gD=_r?BD(_r):mD,nS=gD;function FD(e,E){if(!(E==="constructor"&&typeof e[E]=="function")&&E!="__proto__")return e[E]}var SS=FD,bD=Ys,YD=DT,vD=Object.prototype,yD=vD.hasOwnProperty;function VD(e,E,t){var T=e[E];(!(yD.call(e,E)&&YD(T,t))||t===void 0&&!(E in e))&&bD(e,E,t)}var WD=VD,XD=WD,xD=Ys;function wD(e,E,t,T){var s=!t;t||(t={});for(var R=-1,r=E.length;++R<r;){var A=E[R],S=T?T(t[A],e[A],A,t,e):void 0;S===void 0&&(S=e[A]),s?xD(t,A,S):XD(t,A,S)}return t}var KD=wD;function $D(e,E){for(var t=-1,T=Array(e);++t<e;)T[t]=E(t);return T}var JD=$D,qD=9007199254740991,jD=/^(?:0|[1-9]\d*)$/;function kD(e,E){var t=typeof e;return E=E??qD,!!E&&(t=="number"||t!="symbol"&&jD.test(e))&&e>-1&&e%1==0&&e<E}var OS=kD,QD=JD,ZD=TS,zD=sS,eM=rS,EM=OS,tM=nS,TM=Object.prototype,sM=TM.hasOwnProperty;function RM(e,E){var t=zD(e),T=!t&&ZD(e),s=!t&&!T&&eM(e),R=!t&&!T&&!s&&tM(e),r=t||T||s||R,A=r?QD(e.length,String):[],S=A.length;for(var n in e)(E||sM.call(e,n))&&!(r&&(n=="length"||s&&(n=="offset"||n=="parent")||R&&(n=="buffer"||n=="byteLength"||n=="byteOffset")||EM(n,S)))&&A.push(n);return A}var rM=RM;function AM(e){var E=[];if(e!=null)for(var t in Object(e))E.push(t);return E}var nM=AM,SM=cE,OM=ES,IM=nM,iM=Object.prototype,oM=iM.hasOwnProperty;function NM(e){if(!SM(e))return IM(e);var E=OM(e),t=[];for(var T in e)T=="constructor"&&(E||!oM.call(e,T))||t.push(T);return t}var aM=NM,_M=rM,CM=aM,lM=vs;function LM(e){return lM(e)?_M(e,!0):CM(e)}var IS=LM,cM=KD,uM=IS;function PM(e){return cM(e,uM(e))}var DM=PM,Cr=zn,MM=Qu,fM=RP,UM=AP,pM=uP,lr=TS,Lr=sS,dM=WP,hM=rS,GM=Fs,HM=cE,mM=zP,BM=nS,cr=SS,gM=DM;function FM(e,E,t,T,s,R,r){var A=cr(e,t),S=cr(E,t),n=r.get(S);if(n){Cr(e,t,n);return}var O=R?R(A,S,t+"",e,E,r):void 0,i=O===void 0;if(i){var o=Lr(S),f=!o&&hM(S),p=!o&&!f&&BM(S);O=S,o||f||p?Lr(A)?O=A:dM(A)?O=UM(A):f?(i=!1,O=MM(S,!0)):p?(i=!1,O=fM(S,!0)):O=[]:mM(S)||lr(S)?(O=A,lr(A)?O=gM(A):(!HM(A)||GM(A))&&(O=pM(S))):i=!1}i&&(r.set(S,O),s(O,S,T,R,r),r.delete(S)),Cr(e,t,O)}var bM=FM,YM=Wu,vM=zn,yM=ku,VM=bM,WM=cE,XM=IS,xM=SS;function iS(e,E,t,T,s){e!==E&&yM(E,function(R,r){if(s||(s=new YM),WM(R))VM(e,E,r,t,iS,T,s);else{var A=T?T(xM(e,r),R,r+"",e,E,s):void 0;A===void 0&&(A=R),vM(e,r,A)}},XM)}var oS=iS,wM=oS,ur=cE;function NS(e,E,t,T,s,R){return ur(e)&&ur(E)&&(R.set(E,e),wM(e,E,void 0,NS,R),R.delete(E)),e}var KM=NS,$M=DT,JM=vs,qM=OS,jM=cE;function kM(e,E,t){if(!jM(t))return!1;var T=typeof E;return(T=="number"?JM(t)&&qM(E,t.length):T=="string"&&E in t)?$M(t[E],e):!1}var QM=kM,ZM=Qn,zM=QM;function ef(e){return ZM(function(E,t){var T=-1,s=t.length,R=s>1?t[s-1]:void 0,r=s>2?t[2]:void 0;for(R=e.length>3&&typeof R=="function"?(s--,R):void 0,r&&zM(t[0],t[1],r)&&(R=s<3?void 0:R,s=1),E=Object(E);++T<s;){var A=t[T];A&&e(E,A,T,R)}return E})}var Ef=ef,tf=oS,Tf=Ef,sf=Tf(function(e,E,t,T){tf(e,E,t,T)}),Rf=sf,rf=Kn,Af=Qn,nf=KM,Sf=Rf,Of=Af(function(e){return e.push(void 0,nf),rf(Sf,void 0,e)}),If=Of;const of=Ss(If);function Nf(e){const E=of(e,{mode:"ws",cable:{url:"ws://127.0.0.1:3000",prefix:"/_debugbar"},channelName:"Debugbar::DebugbarChannel",height:360});return E.actionCableUrl=`${E.cable.url}${E.cable.prefix}/cable`,E}let af=bA("config",{state:()=>({config:Nf(window._debugbarConfigOptions)})});const _f={key:0},Cf=B("div",{class:"text-gray-500"},"No cache used.",-1),lf=[Cf],Lf={class:"space-y-3"},cf={class:"flex items-center space-x-8"},uf={class:"w-24 text-sm text-right text-gray-400"},Pf={class:"w-16 text-right"},Df={class:"text-gray-800"},Mf={class:"font-medium",title:"cache key"},ff={class:"text-xs text-gray-400",title:"transaction_id"},Uf=Ye({__name:"CachePanel",props:{cache:{}},setup(e){const E=e;return(t,T)=>(Y(),De(FE,null,{default:TE(()=>[E.cache.length==0?(Y(),k("div",_f,lf)):Oe("",!0),B("div",Lf,[(Y(!0),k(ue,null,tE(E.cache,s=>(Y(),k("div",cf,[B("div",uf,Le(s.time),1),B("div",Pf,[B("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium bg-stone-400",{"!bg-emerald-500":s.label=="hit","!bg-indigo-500":s.label=="write","!bg-amber-400":s.label=="read","!bg-red-400":s.label=="delete"}])},Le(s.label),3)]),B("div",Df,[B("div",Mf,Le(s.key),1),B("div",ff,Le(s.transaction_id),1)])]))),256))])]),_:1}))}}),pf=Ye({__name:"RequestPanel",props:{request:{}},setup(e){const E=e;return(t,T)=>(Y(),De(FE,null,{default:TE(()=>[hs(Le(JSON.stringify(E.request.meta,null,2)),1)]),_:1}))}}),df=B("div",{class:"p-1 pt-1.5"},[B("img",{class:"h-5",src:fn,alt:"Logo"})],-1),hf=[df],Gf={key:1,class:"z-[9999] fixed left-0 bottom-0 w-full"},Hf=B("div",{class:"h-0.5 bg-red-700 cursor-row-resize"},null,-1),mf={class:"flex items-center justify-between bg-stone-100 border-b border-stone-200"},Bf=B("div",{class:"px-5 py-1.5 italic"},"No request yet",-1),gf={class:"px-3"},Ff={key:2,class:"z-[9999] fixed left-0 bottom-0 w-full"},bf={class:"flex"},Yf=B("div",{class:"p-1 pt-1.5"},[B("img",{class:"h-5",src:fn,alt:"Rails logo"})],-1),vf={class:"flex items-center space-x-2.5 pr-1"},yf={class:"flex space-x-2"},Vf={key:0,class:"text-sm font-bold"},Wf=["selected","textContent","value"],Xf={class:"flex items-center pl-2 space-x-2"},xf=["disabled"],wf=Ye({__name:"Debugbar",setup(e){let E=ns(),t=af();const T=NE(null),s=gE({activeTab:"",minimized:!1,isResizing:!1,height:t.config.height}),R=ze(()=>s.activeTab!=""),r=ze(()=>!1),A=ze(()=>{var i,o;return((i=E.currentRequest)==null?void 0:i.meta.params.controller)+"#"+((o=E.currentRequest)==null?void 0:o.meta.params.action)});let S;t.config.mode=="ws"?S=Ro.createConsumer(t.config.actionCableUrl).subscriptions.create({channel:t.config.channelName},{connected(){console.log("🟢 Connected to channel"),S.send({ids:[]})},disconnected(){console.log("🔴 Disconnected from channel")},received(i){if(i.length==0)return;const o=E.addRequests(i);R.value||E.setCurrentRequestById(o[o.length-1]),setTimeout(()=>{S.send({ids:o})},50)}}):(console.log('Using debugbar in "offline mode", ideal for demoing with fixtures.'),S={send:i=>{console.log("Ignoring `send` call",i)}});const n=()=>{console.log("Clearing requests"),s.activeTab="",E.clearRequests(),S.send({clear:!0})};lT(()=>{document.onmousemove=function(i){s.isResizing&&(s.height=window.innerHeight-i.clientY-T.value.clientHeight)},document.onmouseup=function(i){s.isResizing=!1}});const O=i=>{s.activeTab==i?s.activeTab="":s.activeTab=i};return(i,o)=>{var f,p,F,x,$,K;return Y(),k(ue,null,[s.minimized?(Y(),k("div",{key:0,onClick:o[0]||(o[0]=V=>s.minimized=!1),class:"z-[9999] fixed left-0 bottom-0 bg-transparent cursor-pointer"},hf)):Oe("",!0),!s.minimized&&Se(E).currentRequest==null?(Y(),k("div",Gf,[Hf,B("div",mf,[Bf,B("div",gf,[B("button",{onClick:o[1]||(o[1]=V=>s.minimized=!0),title:"Hide in the corner"},[Ne(Se(dR),{class:"size-4"})])])])])):Oe("",!0),!s.minimized&&Se(E).currentRequest?(Y(),k("div",Ff,[B("div",{id:"draggable-bar",onMousedown:o[2]||(o[2]=V=>s.isResizing=!0),class:"h-0.5 bg-red-700 cursor-row-resize"},null,32),B("div",{id:"debubgbar-header",ref_key:"header",ref:T,class:"flex px-1 items-center justify-between bg-stone-100 border-b-2 border-stone-300"},[B("div",null,[B("div",bf,[Yf,(Y(!0),k(ue,null,tE(Se(E).currentRequest.dataForTabs,(V,v)=>(Y(),De(Io,{key:"k",label:V.label,count:V==null?void 0:V.count,"is-active":v===s.activeTab,disabled:V.count==0,onClick:Te=>O(v)},{default:TE(()=>[hs(Le(V.label),1)]),_:2},1032,["label","count","is-active","disabled","onClick"]))),128)),r.value?(Y(),k("button",{key:0,onClick:o[3]||(o[3]=V=>O("debug")),class:$e(["px-3 py-1.5 text-stone-600",{"bg-stone-300":s.activeTab=="debug"}])},[Ne(Se(Ao),{class:"size-4"})],2)):Oe("",!0)])]),B("div",vf,[B("div",yf,[B("button",{onClick:o[4]||(o[4]=V=>O("request")),class:"text-sm text-stone-600 font-medium tracking-wide"},Le(A.value),1),Se(E).currentRequest.meta.duration?(Y(),k("span",Vf,Le(Se(E).currentRequest.meta.duration.toFixed(1))+"ms",1)):Oe("",!0),B("span",{class:$e(["px-1 py-0.5 rounded text-xs",{"bg-green-600 text-white":Se(E).currentRequest.meta.status<300,"bg-amber-600 text-white":Se(E).currentRequest.meta.status>=400&&Se(E).currentRequest.meta.status<500,"bg-red-600 text-white":Se(E).currentRequest.meta.status>=500}])},Le(Se(E).currentRequest.meta.status),3)]),B("select",{class:"px-2 py-1.5 bg-white border border-stone-200 rounded w-[330px] text-sm",name:"current_request_id",onChange:o[5]||(o[5]=V=>{const v=V.target;Se(E).setCurrentRequestById(v.value)})},[(Y(!0),k(ue,null,tE(Se(E).requests,V=>(Y(),k("option",{selected:Se(E).currentRequest.id==V.id,textContent:Le(V.pathWithVerb),value:V.id},null,8,Wf))),256))],32),B("button",{onClick:n,title:"Clear all requests (frontend and backend)"},[Ne(Se(no),{class:"size-4"})]),B("div",Xf,[B("button",{onClick:o[6]||(o[6]=V=>s.minimized=!0),title:"Hide in the corner"},[Ne(Se(dR),{class:"size-4"})]),B("button",{disabled:!R.value,onClick:o[7]||(o[7]=V=>s.activeTab=""),title:"Close"},[Ne(Se(So),{class:"size-4"})],8,xf)])])],512),s.activeTab!=""?(Y(),k("div",{key:0,ref:"body",id:"debugbar-body",class:"bg-white overflow-scroll",style:IT(`height: ${s.height}px`)},[s.activeTab=="request"?(Y(),De(pf,{key:0,request:Se(E).currentRequest},null,8,["request"])):Oe("",!0),s.activeTab=="messages"?(Y(),De(cl,{key:1,messages:(f=Se(E).currentRequest)==null?void 0:f.messages},null,8,["messages"])):Oe("",!0),s.activeTab=="models"?(Y(),De(Mo,{key:2,models:(p=Se(E).currentRequest)==null?void 0:p.models,count:(F=Se(E).currentRequest)==null?void 0:F.modelsCount},null,8,["models","count"])):Oe("",!0),s.activeTab=="queries"?(Y(),De(XC,{key:3,"current-request":Se(E).currentRequest},null,8,["current-request"])):Oe("",!0),s.activeTab=="jobs"?(Y(),De(Tl,{key:4,jobs:(x=Se(E).currentRequest)==null?void 0:x.jobs},null,8,["jobs"])):Oe("",!0),s.activeTab=="cache"?(Y(),De(Uf,{key:5,cache:($=Se(E).currentRequest)==null?void 0:$.cache},null,8,["cache"])):Oe("",!0),s.activeTab=="logs"?(Y(),De(il,{key:6,logs:(K=Se(E).currentRequest)==null?void 0:K.logs},null,8,["logs"])):Oe("",!0),r.value&&s.activeTab=="debug"?(Y(),De(Nl,{key:7,"current-request":Se(E).currentRequest,class:"px-3 py-2"},null,8,["current-request"])):Oe("",!0)],4)):Oe("",!0)])):Oe("",!0)],64)}}}),Kf=Ye({__name:"AppDemo",setup(e){return lT(()=>{console.log("Using debugbar in DEMO mode");const E=Object.assign({"../../fixtures/requests/1706156331--demo_post_list.json":ki,"../../fixtures/requests/1706156340--api_jobs.json":Zi,"../../fixtures/requests/1706156345--api_jobs.json":eo,"../../fixtures/requests/1706156361--demo_slow_page.json":to,"../../fixtures/requests/1706156364--api_errors.json":so}),t=ns().addRequests(Object.values(E))[0];ns().setCurrentRequestById(t)}),(E,t)=>(Y(),k("div",null,[Ne(Se(ET),{id:"__debugbar-shadow-root"},{default:TE(()=>[Ne(wf)]),_:1})]))}});_t.registerLanguage("sql",OO);_t.registerLanguage("json",IO);const $f=vi();gi(Kf).use(bi).use($f).use(qi).mount("#__debugbar");
//# sourceMappingURL=debugbar-XQ6BUlXe.js.map
